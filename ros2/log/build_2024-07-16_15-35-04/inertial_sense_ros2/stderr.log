In file included from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:32[m[K,
                 from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:19[m[K:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kdiagnostic_msgs[m[Kâ€™ was not declared in this scope
   50 |     rclcpp::Publisher<[01;31m[Kdiagnostic_msgs[m[K::msg::DiagnosticArray> pub;
      |                       [01;31m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:60:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   50 |     rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray[01;31m[K>[m[K pub;
      |                                                            [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   67 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::RTKInfo>::SharedPtr pubInfo;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:56:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo[01;31m[K>[m[K::SharedPtr pubInfo;
      |                                                        [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:59:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::[01;31m[KSharedPtr[m[K pubInfo;
      |                                                           [01;31m[K^~~~~~~~~[m[K
      |                                                                    [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:69:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubInfo[m[Kâ€™ does not name a type
   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::SharedPtr [01;31m[KpubInfo[m[K;
      |                                                                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   68 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::RTKRel>::SharedPtr pubRel;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:55:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel[01;31m[K>[m[K::SharedPtr pubRel;
      |                                                       [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel>::[01;31m[KSharedPtr[m[K pubRel;
      |                                                          [01;31m[K^~~~~~~~~[m[K
      |                                                                   [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:58:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kint TopicHelperGpsRtk::SharedPtr[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:59:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kint TopicHelperGpsRtk::SharedPtr[m[Kâ€™
   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::[01;36m[KSharedPtr[m[K pubInfo;
      |                                                           [01;36m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:68:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubRel[m[Kâ€™ does not name a type
   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel>::SharedPtr [01;31m[KpubRel[m[K;
      |                                                                    [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   77 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::GNSSObsVec>::SharedPtr pubObs;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:59:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec[01;31m[K>[m[K::SharedPtr pubObs;
      |                                                           [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::[01;31m[KSharedPtr[m[K pubObs;
      |                                                              [01;31m[K^~~~~~~~~[m[K
      |                                                                       [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:72:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubObs[m[Kâ€™ does not name a type
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::SharedPtr [01;31m[KpubObs[m[K;
      |                                                                        [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   78 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::GNSSEphemeris>::SharedPtr pubEph;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:62:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris[01;31m[K>[m[K::SharedPtr pubEph;
      |                                                              [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:65:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris>::[01;31m[KSharedPtr[m[K pubEph;
      |                                                                 [01;31m[K^~~~~~~~~[m[K
      |                                                                          [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:65:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kint TopicHelperGpsRaw::SharedPtr[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kint TopicHelperGpsRaw::SharedPtr[m[Kâ€™
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::[01;36m[KSharedPtr[m[K pubObs;
      |                                                              [01;36m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:75:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubEph[m[Kâ€™ does not name a type
   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris>::SharedPtr [01;31m[KpubEph[m[K;
      |                                                                           [01;31m[K^~~~~~[m[K
In file included from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:32[m[K,
                 from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:19[m[K:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kdiagnostic_msgs[m[Kâ€™ was not declared in this scope
   50 |     rclcpp::Publisher<[01;31m[Kdiagnostic_msgs[m[K::msg::DiagnosticArray> pub;
      |                       [01;31m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:60:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   50 |     rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray[01;31m[K>[m[K pub;
      |                                                            [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   79 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::GlonassEphemeris>::SharedPtr pubGEp;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris[01;31m[K>[m[K::SharedPtr pubGEp;
      |                                                                 [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:68:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris>::[01;31m[KSharedPtr[m[K pubGEp;
      |                                                                    [01;31m[K^~~~~~~~~[m[K
      |                                                                             [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:68:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kint TopicHelperGpsRaw::SharedPtr[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kint TopicHelperGpsRaw::SharedPtr[m[Kâ€™
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::[01;36m[KSharedPtr[m[K pubObs;
      |                                                              [01;36m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:78:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubGEp[m[Kâ€™ does not name a type
   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris>::SharedPtr [01;31m[KpubGEp[m[K;
      |                                                                              [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   67 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::RTKInfo>::SharedPtr pubInfo;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:56:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo[01;31m[K>[m[K::SharedPtr pubInfo;
      |                                                        [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:59:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::[01;31m[KSharedPtr[m[K pubInfo;
      |                                                           [01;31m[K^~~~~~~~~[m[K
      |                                                                    [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:69:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubInfo[m[Kâ€™ does not name a type
   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::SharedPtr [01;31m[KpubInfo[m[K;
      |                                                                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   68 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::RTKRel>::SharedPtr pubRel;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:55:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel[01;31m[K>[m[K::SharedPtr pubRel;
      |                                                       [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel>::[01;31m[KSharedPtr[m[K pubRel;
      |                                                          [01;31m[K^~~~~~~~~[m[K
      |                                                                   [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:58:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kint TopicHelperGpsRtk::SharedPtr[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:59:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kint TopicHelperGpsRtk::SharedPtr[m[Kâ€™
   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::[01;36m[KSharedPtr[m[K pubInfo;
      |                                                           [01;36m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:68:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubRel[m[Kâ€™ does not name a type
   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel>::SharedPtr [01;31m[KpubRel[m[K;
      |                                                                    [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   77 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::GNSSObsVec>::SharedPtr pubObs;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:59:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec[01;31m[K>[m[K::SharedPtr pubObs;
      |                                                           [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::[01;31m[KSharedPtr[m[K pubObs;
      |                                                              [01;31m[K^~~~~~~~~[m[K
      |                                                                       [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:72:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubObs[m[Kâ€™ does not name a type
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::SharedPtr [01;31m[KpubObs[m[K;
      |                                                                        [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   78 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::GNSSEphemeris>::SharedPtr pubEph;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:62:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris[01;31m[K>[m[K::SharedPtr pubEph;
      |                                                              [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:65:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris>::[01;31m[KSharedPtr[m[K pubEph;
      |                                                                 [01;31m[K^~~~~~~~~[m[K
      |                                                                          [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:65:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kint TopicHelperGpsRaw::SharedPtr[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kint TopicHelperGpsRaw::SharedPtr[m[Kâ€™
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::[01;36m[KSharedPtr[m[K pubObs;
      |                                                              [01;36m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:75:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubEph[m[Kâ€™ does not name a type
   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris>::SharedPtr [01;31m[KpubEph[m[K;
      |                                                                           [01;31m[K^~~~~~[m[K
In file included from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:26[m[K,
                 from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.cpp:19[m[K:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:231:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kdid_ins1[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  231 |         TopicHelper [01;31m[Kdid_ins1[m[K;
      |                     [01;31m[K^~~~~~~~[m[K
In file included from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:33[m[K:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:232:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kdid_ins2[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  232 |         TopicHelper [01;31m[Kdid_ins2[m[K;
      |                     [01;31m[K^~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:233:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kdid_ins4[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  233 |         TopicHelper [01;31m[Kdid_ins4[m[K;
      |                     [01;31m[K^~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:234:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kodom_ins_ned[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  234 |         TopicHelper [01;31m[Kodom_ins_ned[m[K;
      |                     [01;31m[K^~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:235:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kodom_ins_ecef[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  235 |         TopicHelper [01;31m[Kodom_ins_ecef[m[K;
      |                     [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:236:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kodom_ins_enu[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  236 |         TopicHelper [01;31m[Kodom_ins_enu[m[K;
      |                     [01;31m[K^~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:237:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kinl2_states[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  237 |         TopicHelper [01;31m[Kinl2_states[m[K;
      |                     [01;31m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:239:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kimu[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  239 |         TopicHelper [01;31m[Kimu[m[K;
      |                     [01;31m[K^~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:240:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kpimu[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  240 |         TopicHelper [01;31m[Kpimu[m[K;
      |                     [01;31m[K^~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:241:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kmagnetometer[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  241 |         TopicHelper [01;31m[Kmagnetometer[m[K;
      |                     [01;31m[K^~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:242:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kbarometer[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  242 |         TopicHelper [01;31m[Kbarometer[m[K;
      |                     [01;31m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:243:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kstrobe_in[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  243 |         TopicHelper [01;31m[Kstrobe_in[m[K;
      |                     [01;31m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kinertial_sense_ros2[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KInertialSense[m[Kâ€™?
   79 |     rclcpp::Publisher<[01;31m[Kinertial_sense_ros2[m[K::msg::GlonassEphemeris>::SharedPtr pubGEp;
      |                       [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
      |                       [32m[KInertialSense[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:65:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris[01;31m[K>[m[K::SharedPtr pubGEp;
      |                                                                 [01;31m[K^[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:68:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris>::[01;31m[KSharedPtr[m[K pubGEp;
      |                                                                    [01;31m[K^~~~~~~~~[m[K
      |                                                                             [32m[K;[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:68:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kint TopicHelperGpsRaw::SharedPtr[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kint TopicHelperGpsRaw::SharedPtr[m[Kâ€™
   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::[01;36m[KSharedPtr[m[K pubObs;
      |                                                              [01;36m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:245:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTopicHelperGps[m[Kâ€™ does not name a type; did you mean â€˜[01m[KTopicHelper[m[Kâ€™?
  245 |         [01;31m[KTopicHelperGps[m[K gps1;
      |         [01;31m[K^~~~~~~~~~~~~~[m[K
      |         [32m[KTopicHelper[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:78:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KpubGEp[m[Kâ€™ does not name a type
   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris>::SharedPtr [01;31m[KpubGEp[m[K;
      |                                                                              [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:246:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTopicHelperGps[m[Kâ€™ does not name a type; did you mean â€˜[01m[KTopicHelper[m[Kâ€™?
  246 |         [01;31m[KTopicHelperGps[m[K gps2;
      |         [01;31m[K^~~~~~~~~~~~~~[m[K
      |         [32m[KTopicHelper[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:247:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kgps1_navsatfix[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  247 |         TopicHelper [01;31m[Kgps1_navsatfix[m[K;
      |                     [01;31m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:248:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kgps2_navsatfix[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  248 |         TopicHelper [01;31m[Kgps2_navsatfix[m[K;
      |                     [01;31m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:249:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kgps1_info[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  249 |         TopicHelper [01;31m[Kgps1_info[m[K;
      |                     [01;31m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:250:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kgps2_info[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  250 |         TopicHelper [01;31m[Kgps2_info[m[K;
      |                     [01;31m[K^~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:251:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTopicHelperGpsRaw[m[Kâ€™ does not name a type; did you mean â€˜[01m[KTopicHelper[m[Kâ€™?
  251 |         [01;31m[KTopicHelperGpsRaw[m[K gps1_raw;
      |         [01;31m[K^~~~~~~~~~~~~~~~~[m[K
      |         [32m[KTopicHelper[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:252:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTopicHelperGpsRaw[m[Kâ€™ does not name a type; did you mean â€˜[01m[KTopicHelper[m[Kâ€™?
  252 |         [01;31m[KTopicHelperGpsRaw[m[K gps2_raw;
      |         [01;31m[K^~~~~~~~~~~~~~~~~[m[K
      |         [32m[KTopicHelper[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:253:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTopicHelperGpsRaw[m[Kâ€™ does not name a type; did you mean â€˜[01m[KTopicHelper[m[Kâ€™?
  253 |         [01;31m[KTopicHelperGpsRaw[m[K gpsbase_raw;
      |         [01;31m[K^~~~~~~~~~~~~~~~~[m[K
      |         [32m[KTopicHelper[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:254:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTopicHelperGpsRtk[m[Kâ€™ does not name a type; did you mean â€˜[01m[KTopicHelper[m[Kâ€™?
  254 |         [01;31m[KTopicHelperGpsRtk[m[K rtk_pos;
      |         [01;31m[K^~~~~~~~~~~~~~~~~[m[K
      |         [32m[KTopicHelper[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:255:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTopicHelperGpsRtk[m[Kâ€™ does not name a type; did you mean â€˜[01m[KTopicHelper[m[Kâ€™?
  255 |         [01;31m[KTopicHelperGpsRtk[m[K rtk_cmp;
      |         [01;31m[K^~~~~~~~~~~~~~~~~[m[K
      |         [32m[KTopicHelper[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:257:21:[m[K [01;31m[Kerror: [m[Kfield â€˜[01m[Kdiagnostics[m[Kâ€™ has incomplete type â€˜[01m[KTopicHelper[m[Kâ€™
  257 |         TopicHelper [01;31m[Kdiagnostics[m[K;
      |                     [01;31m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:[m[K [01;36m[Knote: [m[Kforward declaration of â€˜[01m[Kclass TopicHelper[m[Kâ€™
   26 | class [01;36m[KTopicHelper[m[K;
      |       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KinitializeROS[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:140:59:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[KTopicHelper[m[Kâ€™
  140 |     if (rs_.did_ins1.enabled)               { rs_.did_ins1[01;31m[K->[m[Kpub    = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS1>(rs_.did_ins1.topic, 1); }
      |                                                           [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:127:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.pub      = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                               [01;31m[K|[m[K
      |                                                                                                                               [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:127:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.pub      = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                               [01;31m[K|[m[K
      |                                                                                                                               [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:117:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.pub  = [01;31m[Knh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                     [01;31m[K|[m[K
      |                                                                                                                     [01;31m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:117:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.pub  = [01;31m[Knh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                     [01;31m[K|[m[K
      |                                                                                                                     [01;31m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:117:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.pub = [01;31m[Knh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                     [01;31m[K|[m[K
      |                                                                                                                     [01;31m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:130:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.pub   = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                                  [01;31m[K|[m[K
      |                                                                                                                                  [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:115:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  148 |     if (rs_.pimu.enabled)                   { rs_.pimu.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1)[m[K; }
      |                                                              [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                   [01;31m[K|[m[K
      |                                                                                                                   [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:105:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  149 |     if (rs_.imu.enabled)                    { rs_.imu.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1)[m[K; }
      |                                                             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                         [01;31m[K|[m[K
      |                                                                                                         [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:124:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1)[m[K; }
      |                                                                      [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                            [01;31m[K|[m[K
      |                                                                                                                            [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:121:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  151 |     if (rs_.barometer.enabled)              { rs_.barometer.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1)[m[K; }
      |                                                                   [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                         [01;31m[K|[m[K
      |                                                                                                                         [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:114:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  153 |     if (rs_.gps1.enabled)                   { rs_.gps1.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1)[m[K; }
      |                                                              [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                  [01;31m[K|[m[K
      |                                                                                                                  [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:122:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1)[m[K; }
      |                                                                        [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                          [01;31m[K|[m[K
      |                                                                                                                          [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:123:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1)[m[K; }
      |                                                                   [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                           [01;31m[K|[m[K
      |                                                                                                                           [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:114:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  157 |     if (rs_.gps2.enabled)                   { rs_.gps2.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1)[m[K; }
      |                                                              [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                  [01;31m[K|[m[K
      |                                                                                                                  [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:122:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1)[m[K; }
      |                                                                        [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                          [01;31m[K|[m[K
      |                                                                                                                          [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:123:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1)[m[K; }
      |                                                                   [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                           [01;31m[K|[m[K
      |                                                                                                                           [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:163:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubInfo[m[Kâ€™
  163 |         rs_.rtk_pos.[01;31m[KpubInfo[m[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKInfo>("RTK_pos/info", 10);
      |                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:164:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubRel[m[Kâ€™
  164 |         rs_.rtk_pos.[01;31m[KpubRel[m[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKRel>("RTK_pos/rel", 10);
      |                     [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:168:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubInfo[m[Kâ€™
  168 |         rs_.rtk_cmp.[01;31m[KpubInfo[m[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKInfo>("RTK_cmp/info", 10);
      |                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:169:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubRel[m[Kâ€™
  169 |         rs_.rtk_cmp.[01;31m[KpubRel[m[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKRel>("RTK_cmp/rel", 10);
      |                     [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:174:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
  174 |         rs_.gps1_raw.[01;31m[KpubObs[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSObsVec>(rs_.gps1_raw.topic + "/obs", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:175:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
  175 |         rs_.gps1_raw.[01;31m[KpubEph[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>(rs_.gps1_raw.topic + "/eph", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:176:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
  176 |         rs_.gps1_raw.[01;31m[KpubGEp[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>(rs_.gps1_raw.topic + "/geph", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:181:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
  181 |         rs_.gps2_raw.[01;31m[KpubObs[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSObsVec>(rs_.gps2_raw.topic + "/obs", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:182:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
  182 |         rs_.gps2_raw.[01;31m[KpubEph[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>(rs_.gps2_raw.topic + "/eph", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:183:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
  183 |         rs_.gps2_raw.[01;31m[KpubGEp[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>(rs_.gps2_raw.topic + "/geph", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
  188 |         rs_.gpsbase_raw.[01;31m[KpubObs[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50);
      |                         [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:189:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
  189 |         rs_.gpsbase_raw.[01;31m[KpubEph[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>("gps/base_eph", 50);
      |                         [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:190:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
  190 |         rs_.gpsbase_raw.[01;31m[KpubGEp[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50);
      |                         [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:195:91:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  195 |         rs_.diagnostics.pub = [01;31m[Knh_->create_publisher<diagnostic_msgs::msg::DiagnosticArray>("diagnostics", 1)[m[K;
      |                               [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                                                                           [01;31m[K|[m[K
      |                                                                                           [01;31m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> > >[m[K
In file included from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:20[m[K:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KinitializeROS[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:140:59:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[KTopicHelper[m[Kâ€™
  140 |     if (rs_.did_ins1.enabled)               { rs_.did_ins1[01;31m[K->[m[Kpub    = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS1>(rs_.did_ins1.topic, 1); }
      |                                                           [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kbool InertialSenseROS::[01;32m[Kfirmware_compatiblity_check[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
  568 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K protocol_fault = rclcpp::Logger::Level::Debug; // none
      |                            [01;31m[K^~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:127:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.pub      = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                               [01;31m[K|[m[K
      |                                                                                                                               [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:127:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.pub      = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                               [01;31m[K|[m[K
      |                                                                                                                               [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:117:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.pub  = [01;31m[Knh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                     [01;31m[K|[m[K
      |                                                                                                                     [01;31m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:117:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.pub  = [01;31m[Knh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                     [01;31m[K|[m[K
      |                                                                                                                     [01;31m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:117:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.pub = [01;31m[Knh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                     [01;31m[K|[m[K
      |                                                                                                                     [01;31m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:130:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.pub   = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1)[m[K; }
      |                                                                       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                                  [01;31m[K|[m[K
      |                                                                                                                                  [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:115:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  148 |     if (rs_.pimu.enabled)                   { rs_.pimu.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1)[m[K; }
      |                                                              [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                   [01;31m[K|[m[K
      |                                                                                                                   [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:105:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  149 |     if (rs_.imu.enabled)                    { rs_.imu.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1)[m[K; }
      |                                                             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                         [01;31m[K|[m[K
      |                                                                                                         [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:124:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1)[m[K; }
      |                                                                      [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                            [01;31m[K|[m[K
      |                                                                                                                            [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:121:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  151 |     if (rs_.barometer.enabled)              { rs_.barometer.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1)[m[K; }
      |                                                                   [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                         [01;31m[K|[m[K
      |                                                                                                                         [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
  569 |     if (diff_protocol[0] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
      |                                [01;31m[K^~~~~~~~~~~~~~[m[K
      |                                [32m[Kprotocol_type_t[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:114:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  153 |     if (rs_.gps1.enabled)                   { rs_.gps1.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1)[m[K; }
      |                                                              [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                  [01;31m[K|[m[K
      |                                                                                                                  [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:122:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1)[m[K; }
      |                                                                        [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                          [01;31m[K|[m[K
      |                                                                                                                          [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:123:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1)[m[K; }
      |                                                                   [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                           [01;31m[K|[m[K
      |                                                                                                                           [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:114:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  157 |     if (rs_.gps2.enabled)                   { rs_.gps2.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1)[m[K; }
      |                                                              [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                  [01;31m[K|[m[K
      |                                                                                                                  [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:122:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.pub = [01;31m[Knh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1)[m[K; }
      |                                                                        [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                          [01;31m[K|[m[K
      |                                                                                                                          [01;31m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:123:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.pub = [01;31m[Knh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1)[m[K; }
      |                                                                   [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                                                                                                           [01;31m[K|[m[K
      |                                                                                                                           [01;31m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:163:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubInfo[m[Kâ€™
  163 |         rs_.rtk_pos.[01;31m[KpubInfo[m[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKInfo>("RTK_pos/info", 10);
      |                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:164:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubRel[m[Kâ€™
  164 |         rs_.rtk_pos.[01;31m[KpubRel[m[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKRel>("RTK_pos/rel", 10);
      |                     [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:168:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubInfo[m[Kâ€™
  168 |         rs_.rtk_cmp.[01;31m[KpubInfo[m[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKInfo>("RTK_cmp/info", 10);
      |                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:169:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubRel[m[Kâ€™
  169 |         rs_.rtk_cmp.[01;31m[KpubRel[m[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKRel>("RTK_cmp/rel", 10);
      |                     [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:174:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
  174 |         rs_.gps1_raw.[01;31m[KpubObs[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSObsVec>(rs_.gps1_raw.topic + "/obs", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:175:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
  175 |         rs_.gps1_raw.[01;31m[KpubEph[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>(rs_.gps1_raw.topic + "/eph", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
  570 |     else if (diff_protocol[1] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
      |                                     [32m[Kprotocol_type_t[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:176:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
  176 |         rs_.gps1_raw.[01;31m[KpubGEp[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>(rs_.gps1_raw.topic + "/geph", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:181:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
  181 |         rs_.gps2_raw.[01;31m[KpubObs[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSObsVec>(rs_.gps2_raw.topic + "/obs", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:182:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
  182 |         rs_.gps2_raw.[01;31m[KpubEph[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>(rs_.gps2_raw.topic + "/eph", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:183:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
  183 |         rs_.gps2_raw.[01;31m[KpubGEp[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>(rs_.gps2_raw.topic + "/geph", 50);
      |                      [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
  188 |         rs_.gpsbase_raw.[01;31m[KpubObs[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50);
      |                         [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:189:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
  189 |         rs_.gpsbase_raw.[01;31m[KpubEph[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>("gps/base_eph", 50);
      |                         [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:190:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
  190 |         rs_.gpsbase_raw.[01;31m[KpubGEp[m[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50);
      |                         [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:195:91:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in assignment
  195 |         rs_.diagnostics.pub = [01;31m[Knh_->create_publisher<diagnostic_msgs::msg::DiagnosticArray>("diagnostics", 1)[m[K;
      |                               [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
      |                                                                                           [01;31m[K|[m[K
      |                                                                                           [01;31m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> > >[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
  571 |     else if (diff_protocol[2] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
      |                                     [32m[Kprotocol_type_t[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
  572 |     else if (diff_protocol[3] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
      |                                     [32m[Kprotocol_type_t[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
  574 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K firmware_fault = rclcpp::Logger::Level::Debug; // none
      |                            [01;31m[K^~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
  575 |     if (diff_firmware[0] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
      |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
  576 |     else if (diff_firmware[1] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
  577 |     else if (diff_firmware[2] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
  579 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K final_fault = std::max(firmware_fault, protocol_fault);
      |                            [01;31m[K^~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kbool InertialSenseROS::[01;32m[Kfirmware_compatiblity_check[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
  568 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K protocol_fault = rclcpp::Logger::Level::Debug; // none
      |                            [01;31m[K^~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfinal_fault[m[Kâ€™ was not declared in this scope
  599 |     return [01;31m[Kfinal_fault[m[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
      |            [01;31m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
  569 |     if (diff_protocol[0] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
      |                                [01;31m[K^~~~~~~~~~~~~~[m[K
      |                                [32m[Kprotocol_type_t[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
  570 |     else if (diff_protocol[1] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
      |                                     [32m[Kprotocol_type_t[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
  571 |     else if (diff_protocol[2] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
      |                                     [32m[Kprotocol_type_t[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS1_callback[m[K(eDataIDs, const ins_1_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:954:30:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[KgetNumSubscribers[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::did_ins1.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
  954 |         if (rs_.did_ins1.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
      |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:29:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
  955 |             rs_.did_ins1.pub[01;31m[K->[m[Kpublish(msg_did_ins1);
      |                             [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS2_callback[m[K(eDataIDs, const ins_2_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:981:30:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[KgetNumSubscribers[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::did_ins2.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
  981 |         if (rs_.did_ins2.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
      |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:29:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
  982 |             rs_.did_ins2.pub[01;31m[K->[m[Kpublish(msg_did_ins2);
      |                             [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS4_callback[m[K(eDataIDs, const ins_4_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1008:30:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[KgetNumSubscribers[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::did_ins4.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1008 |         if (rs_.did_ins4.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
      |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:29:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1009 |             rs_.did_ins4.pub[01;31m[K->[m[Kpublish(msg_did_ins4);
      |                             [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:34:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1078 |             rs_.odom_ins_ecef.pub[01;31m[K->[m[Kpublish(msg_odom_ecef);
      |                                  [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:38:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::odom_ins_ned.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1165 |                 rs_.odom_ins_ned.pub.[01;31m[Kpublish[m[K(msg_odom_ned);
      |                                      [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:38:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::odom_ins_enu.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1259 |                 rs_.odom_ins_enu.pub.[01;31m[Kpublish[m[K(msg_odom_enu);
      |                                      [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINL2_states_callback[m[K(eDataIDs, const inl2_states_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1311:33:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[KgetNumSubscribers[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::inl2_states.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1311 |         if (rs_.inl2_states.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
      |                                 [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:33:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::inl2_states.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1312 |             rs_.inl2_states.pub.[01;31m[Kpublish[m[K(msg_inl2_states);
      |                                 [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_pos_callback[m[K(eDataIDs, const gps_pos_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:36:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::gps1_navsatfix.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1455 |             rs_.gps1_navsatfix.pub.[01;31m[Kpublish[m[K(msg_NavSatFix);
      |                                    [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS1[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1499:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1499 |         if (rs_.gps1.pub[01;31m[K->[m[Kget_subscription_count() > 0)
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1500 |             rs_.gps1.pub[01;31m[K->[m[Kpublish(msg_gps1);
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS2[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1511:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1511 |         if (rs_.gps2.pub[01;31m[K->[m[Kget_subscription_count() > 0)
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1512 |             rs_.gps2.pub[01;31m[K->[m[Kpublish(msg_gps2);
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_info_callback[m[K(eDataIDs, const gps_sat_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:42:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.pub[01;31m[K->[m[Kpublish();    break;
      |                                          [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:42:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.pub[01;31m[K->[m[Kpublish(msg_gps1_info);    break;
      |                                          [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kmag_callback[m[K(eDataIDs, const magnetometer_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1588 |     rs_.magnetometer.pub[01;31m[K->[m[Kpublish(mag_msg);
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
  572 |     else if (diff_protocol[3] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
      |                                     [32m[Kprotocol_type_t[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
  574 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K firmware_fault = rclcpp::Logger::Level::Debug; // none
      |                            [01;31m[K^~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kbaro_callback[m[K(eDataIDs, const barometer_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1604:23:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::barometer.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1604 |     rs_.barometer.pub.[01;31m[Kpublish[m[K(baro_msg);
      |                       [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kpreint_IMU_callback[m[K(eDataIDs, const pimu_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:22:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::pimu.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1623 |         rs_.pimu.pub.[01;31m[Kpublish[m[K(msg_pimu);
      |                      [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:25:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::imu.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1640 |             rs_.imu.pub.[01;31m[Kpublish[m[K(msg_imu);
      |                         [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KRTK_Misc_callback[m[K(eDataIDs, const gps_rtk_misc_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1667:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubInfo[m[Kâ€™
 1667 |         rs_.rtk_pos.[01;31m[KpubInfo[m[K->publish(rtk_info);
      |                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1672:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubInfo[m[Kâ€™
 1672 |         rs_.rtk_cmp.[01;31m[KpubInfo[m[K.publish(rtk_info);
      |                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KRTK_Rel_callback[m[K(eDataIDs, const gps_rtk_rel_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1724:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubRel[m[Kâ€™
 1724 |         rs_.rtk_pos.[01;31m[KpubRel[m[K->publish(rtk_rel);
      |                     [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1737:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubRel[m[Kâ€™
 1737 |         rs_.rtk_cmp.[01;31m[KpubRel[m[K.publish(rtk_rel);
      |                     [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_obs_bundle_timer_callback[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1852:26:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
 1852 |             rs_.gps1_raw.[01;31m[KpubObs[m[K->publish(gps1_obs_Vec_);
      |                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1862:26:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
 1862 |             rs_.gps2_raw.[01;31m[KpubObs[m[K.publish(gps2_obs_Vec_);
      |                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1872:29:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
 1872 |             rs_.gpsbase_raw.[01;31m[KpubObs[m[K.publish(base_obs_Vec_);
      |                             [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_eph_callback[m[K(eDataIDs, const eph_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1923:42:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
 1923 |     case DID_GPS1_RAW:      rs_.gps1_raw.[01;31m[KpubEph[m[K->publish(eph);        break;
      |                                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1924:42:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
 1924 |     case DID_GPS2_RAW:      rs_.gps2_raw.[01;31m[KpubEph[m[K->publish(eph);        break;
      |                                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1925:45:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
 1925 |     case DID_GPS_BASE_RAW:  rs_.gpsbase_raw.[01;31m[KpubEph[m[K->publish(eph);    break;
      |                                             [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_geph_callback[m[K(eDataIDs, const geph_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1956:42:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
 1956 |     case DID_GPS1_RAW:      rs_.gps1_raw.[01;31m[KpubGEp[m[K->publish(geph);       break;
      |                                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1957:42:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
 1957 |     case DID_GPS2_RAW:      rs_.gps2_raw.[01;31m[KpubGEp[m[K->publish(geph);       break;
      |                                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1958:45:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
 1958 |     case DID_GPS_BASE_RAW:  rs_.gpsbase_raw.[01;31m[KpubGEp[m[K->publish(geph);   break;
      |                                             [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kdiagnostics_callback[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:2058:24:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 2058 |     rs_.diagnostics.pub[01;31m[K->[m[Kpublish(diag_array);
      |                        [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
  575 |     if (diff_firmware[0] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
      |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
  576 |     else if (diff_firmware[1] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
  577 |     else if (diff_firmware[2] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
      |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
  579 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K final_fault = std::max(firmware_fault, protocol_fault);
      |                            [01;31m[K^~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfinal_fault[m[Kâ€™ was not declared in this scope
  599 |     return [01;31m[Kfinal_fault[m[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
      |            [01;31m[K^~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS1_callback[m[K(eDataIDs, const ins_1_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:954:30:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[KgetNumSubscribers[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::did_ins1.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
  954 |         if (rs_.did_ins1.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
      |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:29:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
  955 |             rs_.did_ins1.pub[01;31m[K->[m[Kpublish(msg_did_ins1);
      |                             [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS2_callback[m[K(eDataIDs, const ins_2_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:981:30:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[KgetNumSubscribers[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::did_ins2.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
  981 |         if (rs_.did_ins2.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
      |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:29:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
  982 |             rs_.did_ins2.pub[01;31m[K->[m[Kpublish(msg_did_ins2);
      |                             [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS4_callback[m[K(eDataIDs, const ins_4_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1008:30:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[KgetNumSubscribers[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::did_ins4.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1008 |         if (rs_.did_ins4.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
      |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:29:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1009 |             rs_.did_ins4.pub[01;31m[K->[m[Kpublish(msg_did_ins4);
      |                             [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:34:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1078 |             rs_.odom_ins_ecef.pub[01;31m[K->[m[Kpublish(msg_odom_ecef);
      |                                  [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:38:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::odom_ins_ned.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1165 |                 rs_.odom_ins_ned.pub.[01;31m[Kpublish[m[K(msg_odom_ned);
      |                                      [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:38:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::odom_ins_enu.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1259 |                 rs_.odom_ins_enu.pub.[01;31m[Kpublish[m[K(msg_odom_enu);
      |                                      [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINL2_states_callback[m[K(eDataIDs, const inl2_states_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1311:33:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[KgetNumSubscribers[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::inl2_states.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1311 |         if (rs_.inl2_states.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
      |                                 [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:33:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::inl2_states.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1312 |             rs_.inl2_states.pub.[01;31m[Kpublish[m[K(msg_inl2_states);
      |                                 [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_pos_callback[m[K(eDataIDs, const gps_pos_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:36:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::gps1_navsatfix.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1455 |             rs_.gps1_navsatfix.pub.[01;31m[Kpublish[m[K(msg_NavSatFix);
      |                                    [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS1[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1499:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1499 |         if (rs_.gps1.pub[01;31m[K->[m[Kget_subscription_count() > 0)
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1500 |             rs_.gps1.pub[01;31m[K->[m[Kpublish(msg_gps1);
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS2[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1511:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1511 |         if (rs_.gps2.pub[01;31m[K->[m[Kget_subscription_count() > 0)
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1512 |             rs_.gps2.pub[01;31m[K->[m[Kpublish(msg_gps2);
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_info_callback[m[K(eDataIDs, const gps_sat_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:42:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.pub[01;31m[K->[m[Kpublish();    break;
      |                                          [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:42:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.pub[01;31m[K->[m[Kpublish(msg_gps1_info);    break;
      |                                          [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kmag_callback[m[K(eDataIDs, const magnetometer_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:25:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 1588 |     rs_.magnetometer.pub[01;31m[K->[m[Kpublish(mag_msg);
      |                         [01;31m[K^~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kbaro_callback[m[K(eDataIDs, const barometer_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1604:23:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::barometer.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1604 |     rs_.barometer.pub.[01;31m[Kpublish[m[K(baro_msg);
      |                       [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kpreint_IMU_callback[m[K(eDataIDs, const pimu_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:22:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::pimu.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1623 |         rs_.pimu.pub.[01;31m[Kpublish[m[K(msg_pimu);
      |                      [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:25:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kpublish[m[Kâ€™ in â€˜[01m[K((InertialSenseROS*)this)->InertialSenseROS::rs_.InertialSenseROS::<unnamed struct>::imu.TopicHelper::pub[m[Kâ€™, which is of non-class type â€˜[01m[Kint[m[Kâ€™
 1640 |             rs_.imu.pub.[01;31m[Kpublish[m[K(msg_imu);
      |                         [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KRTK_Misc_callback[m[K(eDataIDs, const gps_rtk_misc_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1667:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubInfo[m[Kâ€™
 1667 |         rs_.rtk_pos.[01;31m[KpubInfo[m[K->publish(rtk_info);
      |                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1672:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubInfo[m[Kâ€™
 1672 |         rs_.rtk_cmp.[01;31m[KpubInfo[m[K.publish(rtk_info);
      |                     [01;31m[K^~~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KRTK_Rel_callback[m[K(eDataIDs, const gps_rtk_rel_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1724:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubRel[m[Kâ€™
 1724 |         rs_.rtk_pos.[01;31m[KpubRel[m[K->publish(rtk_rel);
      |                     [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1737:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRtk[m[Kâ€™ has no member named â€˜[01m[KpubRel[m[Kâ€™
 1737 |         rs_.rtk_cmp.[01;31m[KpubRel[m[K.publish(rtk_rel);
      |                     [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_obs_bundle_timer_callback[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1852:26:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
 1852 |             rs_.gps1_raw.[01;31m[KpubObs[m[K->publish(gps1_obs_Vec_);
      |                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1862:26:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
 1862 |             rs_.gps2_raw.[01;31m[KpubObs[m[K.publish(gps2_obs_Vec_);
      |                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1872:29:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubObs[m[Kâ€™
 1872 |             rs_.gpsbase_raw.[01;31m[KpubObs[m[K.publish(base_obs_Vec_);
      |                             [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_eph_callback[m[K(eDataIDs, const eph_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1923:42:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
 1923 |     case DID_GPS1_RAW:      rs_.gps1_raw.[01;31m[KpubEph[m[K->publish(eph);        break;
      |                                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1924:42:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
 1924 |     case DID_GPS2_RAW:      rs_.gps2_raw.[01;31m[KpubEph[m[K->publish(eph);        break;
      |                                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1925:45:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubEph[m[Kâ€™
 1925 |     case DID_GPS_BASE_RAW:  rs_.gpsbase_raw.[01;31m[KpubEph[m[K->publish(eph);    break;
      |                                             [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_geph_callback[m[K(eDataIDs, const geph_t*)[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1956:42:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
 1956 |     case DID_GPS1_RAW:      rs_.gps1_raw.[01;31m[KpubGEp[m[K->publish(geph);       break;
      |                                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1957:42:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
 1957 |     case DID_GPS2_RAW:      rs_.gps2_raw.[01;31m[KpubGEp[m[K->publish(geph);       break;
      |                                          [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1958:45:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass TopicHelperGpsRaw[m[Kâ€™ has no member named â€˜[01m[KpubGEp[m[Kâ€™
 1958 |     case DID_GPS_BASE_RAW:  rs_.gpsbase_raw.[01;31m[KpubGEp[m[K->publish(geph);   break;
      |                                             [01;31m[K^~~~~~[m[K
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kdiagnostics_callback[m[K()[m[Kâ€™:
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:2058:24:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
 2058 |     rs_.diagnostics.pub[01;31m[K->[m[Kpublish(diag_array);
      |                        [01;31m[K^~[m[K
gmake[2]: *** [CMakeFiles/new_target.dir/build.make:104: CMakeFiles/new_target.dir/include/TopicHelper.cpp.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
                 from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K:
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
   52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
      |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28[m[K:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
  121 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K:
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/13/bits/move.h:37[m[K,
                 from [01m[K/usr/include/c++/13/bits/exception_ptr.h:41[m[K,
                 from [01m[K/usr/include/c++/13/exception:164[m[K,
                 from [01m[K/usr/include/c++/13/ios:41[m[K,
                 from [01m[K/usr/include/c++/13/ostream:40[m[K,
                 from [01m[K/usr/include/c++/13/iostream:41[m[K,
                 from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22[m[K:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
  123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = void][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1616:36:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>), void> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = <missing>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
  128 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
  130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
  135 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
  137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
  142 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
  144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™)
  148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
      |               [01;31m[K^~~~~~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&[m[Kâ€™
 1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
 1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
   52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
      |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
  121 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
  123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
  128 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
  130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
  135 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
  137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
  142 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
  144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™)
  148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
      |               [01;31m[K^~~~~~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&[m[Kâ€™
 1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
 1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~[m[K
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
                 from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K:
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
   52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
      |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28[m[K:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
  121 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K:
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/13/bits/move.h:37[m[K,
                 from [01m[K/usr/include/c++/13/bits/exception_ptr.h:41[m[K,
                 from [01m[K/usr/include/c++/13/exception:164[m[K,
                 from [01m[K/usr/include/c++/13/ios:41[m[K,
                 from [01m[K/usr/include/c++/13/ostream:40[m[K,
                 from [01m[K/usr/include/c++/13/iostream:41[m[K,
                 from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22[m[K:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
  123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = void][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1616:36:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>), void> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = <missing>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
  128 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
  130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
  135 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
  137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
  142 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
  144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™)
  148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
      |               [01;31m[K^~~~~~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&[m[Kâ€™
 1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
 1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
   52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
      |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
  121 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
  123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
  128 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
  130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
  135 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
  137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
  142 |       >::[01;31m[Kvalue[m[K)
      |          [01;31m[K^~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
 2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
  144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
      |         [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                                 [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
  144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
      |                                           [01;36m[K^~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™)
  148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
      |               [01;31m[K^~~~~~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&[m[Kâ€™
 1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
 1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
 1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/new_target.dir/build.make:76: CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o] Error 1
gmake[2]: *** [CMakeFiles/new_target.dir/build.make:90: CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:623: CMakeFiles/new_target.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
