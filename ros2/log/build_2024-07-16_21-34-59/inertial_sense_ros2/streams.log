[0.053s] Invoking command in '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/jazzy DEBUGINFOD_URLS=https://debuginfod.ubuntu.com /usr/bin/cmake --build /home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2 -- -j6 -l6
[0.477s] [  1%] Built target inertial_sense_ros2__rosidl_generator_type_description
[0.599s] [  1%] Built target inertial_sense_ros2__cpp
[0.605s] [  1%] Built target ament_cmake_python_copy_inertial_sense_ros2
[0.638s] [  2%] [32mBuilding CXX object CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o[0m
[0.640s] [  2%] [32mBuilding CXX object CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o[0m
[0.655s] [ 28%] Built target inertial_sense_ros2__rosidl_generator_c
[0.677s] [ 29%] [32mBuilding CXX object CMakeFiles/new_target.dir/include/TopicHelper.cpp.o[0m
[0.828s] [ 39%] Built target inertial_sense_ros2__rosidl_typesupport_cpp
[0.864s] [ 49%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_c
[1.245s] [ 58%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_cpp
[1.250s] [ 68%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_c
[1.828s] [ 77%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_cpp
[1.841s] [ 86%] Built target inertial_sense_ros2__rosidl_typesupport_c
[2.045s] [ 86%] Built target inertial_sense_ros2
[2.240s] running egg_info
[2.381s] writing inertial_sense_ros2.egg-info/PKG-INFO
[2.384s] writing dependency_links to inertial_sense_ros2.egg-info/dependency_links.txt
[2.389s] writing top-level names to inertial_sense_ros2.egg-info/top_level.txt
[2.505s] [ 87%] Built target inertial_sense_ros2__py
[2.805s] reading manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'
[2.815s] writing manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'
[3.237s] [ 87%] Built target ament_cmake_python_build_inertial_sense_ros2_egg
[3.297s] [ 96%] Built target inertial_sense_ros2__rosidl_generator_py
[3.686s] [ 97%] Built target inertial_sense_ros2_s__rosidl_typesupport_introspection_c
[3.721s] [ 98%] Built target inertial_sense_ros2_s__rosidl_typesupport_c
[3.922s] [ 99%] Built target inertial_sense_ros2_s__rosidl_typesupport_fastrtps_c
[39.904s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31[m[K,
[39.905s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50[m[K,
[39.909s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25[m[K,
[39.909s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[39.909s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[39.910s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
[39.910s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
[39.915s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[39.915s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[39.916s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
[39.916s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K,
[39.917s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.cpp:19[m[K:
[39.917s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™:
[39.917s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:70:57:[m[K   required from here
[39.921s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[39.921s]    84 |     rclcpp::is_ros_compatible_type<MessageT>::[01;31m[Kvalue[m[K,
[39.925s]       |                                               [01;31m[K^~~~~[m[K
[39.927s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[39.965s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™:
[39.966s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:71:57:[m[K   required from here
[39.967s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[39.970s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[40.060s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™:
[40.060s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:72:57:[m[K   required from here
[40.061s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[40.061s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[40.167s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™:
[40.168s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:73:47:[m[K   required from here
[40.168s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[40.169s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<nav_msgs::msg::Odometry_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[40.242s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™:
[40.243s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:74:60:[m[K   required from here
[40.244s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[40.246s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[40.332s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™:
[40.333s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:75:54:[m[K   required from here
[40.338s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[40.338s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[40.408s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™:
[40.408s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:76:45:[m[K   required from here
[40.409s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[40.409s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::Imu_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[40.480s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™:
[40.481s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:55:[m[K   required from here
[40.481s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[40.484s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[40.632s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™:
[40.633s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:53:[m[K   required from here
[40.639s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[40.640s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[40.708s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™:
[40.708s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:80:51:[m[K   required from here
[40.709s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[40.712s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[40.777s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™:
[40.777s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:81:57:[m[K   required from here
[40.777s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[40.778s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[42.684s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31[m[K,
[42.685s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50[m[K,
[42.685s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25[m[K,
[42.688s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[42.690s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[42.690s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
[42.690s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
[42.691s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[42.691s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[42.691s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
[42.707s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K,
[42.707s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29[m[K,
[42.708s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:19[m[K:
[42.718s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™:
[42.719s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:70:57:[m[K   required from here
[42.720s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[42.720s]    84 |     rclcpp::is_ros_compatible_type<MessageT>::[01;31m[Kvalue[m[K,
[42.720s]       |                                               [01;31m[K^~~~~[m[K
[42.721s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[42.787s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™:
[42.792s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:71:57:[m[K   required from here
[42.796s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[42.796s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[42.944s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™:
[42.944s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:72:57:[m[K   required from here
[42.951s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[42.951s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[43.020s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™:
[43.021s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:73:47:[m[K   required from here
[43.021s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[43.022s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<nav_msgs::msg::Odometry_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[43.097s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™:
[43.098s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:74:60:[m[K   required from here
[43.098s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[43.099s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[43.229s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™:
[43.230s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:75:54:[m[K   required from here
[43.233s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[43.234s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[43.323s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™:
[43.324s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:76:45:[m[K   required from here
[43.325s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[43.326s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::Imu_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[43.415s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™:
[43.415s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:55:[m[K   required from here
[43.416s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[43.416s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[43.554s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™:
[43.554s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:53:[m[K   required from here
[43.555s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[43.555s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[43.616s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™:
[43.617s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:80:51:[m[K   required from here
[43.617s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[43.619s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[43.685s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™:
[43.686s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:81:57:[m[K   required from here
[43.686s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[43.686s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[44.619s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31[m[K,
[44.619s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50[m[K,
[44.619s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25[m[K,
[44.620s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[44.620s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[44.627s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
[44.627s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
[44.628s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[44.629s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[44.629s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
[44.629s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K,
[44.629s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29[m[K,
[44.637s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:19[m[K:
[44.637s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™:
[44.638s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:70:57:[m[K   required from here
[44.638s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[44.645s]    84 |     rclcpp::is_ros_compatible_type<MessageT>::[01;31m[Kvalue[m[K,
[44.646s]       |                                               [01;31m[K^~~~~[m[K
[44.656s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[44.686s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™:
[44.687s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:71:57:[m[K   required from here
[44.687s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[44.688s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[44.758s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™:
[44.763s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:72:57:[m[K   required from here
[44.763s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[44.764s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[44.829s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™:
[44.830s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:73:47:[m[K   required from here
[44.831s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[44.832s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<nav_msgs::msg::Odometry_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[44.907s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™:
[44.909s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:74:60:[m[K   required from here
[44.913s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[44.914s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[45.005s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™:
[45.005s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:75:54:[m[K   required from here
[45.005s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[45.006s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[45.048s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/imu.hpp:9[m[K,
[45.049s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:44[m[K:
[45.049s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™ after instantiation
[45.050s]   277 | struct [01;31m[Kis_message<sensor_msgs::msg::Imu>[m[K
[45.050s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[45.050s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™
[45.054s] In file included from [01m[K/opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__traits.hpp:18[m[K,
[45.054s]                  from [01m[K/opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/list_parameters.hpp:9[m[K,
[45.055s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:21[m[K,
[45.055s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171[m[K:
[45.055s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™
[45.056s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[45.056s]       |        [01;36m[K^~~~~~~~~~[m[K
[45.088s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™:
[45.088s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:76:45:[m[K   required from here
[45.088s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[45.089s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::Imu_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[45.102s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/magnetic_field.hpp:9[m[K,
[45.103s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:45[m[K:
[45.103s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™ after instantiation
[45.103s]   166 | struct [01;31m[Kis_message<sensor_msgs::msg::MagneticField>[m[K
[45.104s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[45.104s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™
[45.108s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™
[45.108s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[45.109s]       |        [01;36m[K^~~~~~~~~~[m[K
[45.169s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™:
[45.170s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:55:[m[K   required from here
[45.170s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[45.170s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[45.319s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™:
[45.319s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:53:[m[K   required from here
[45.320s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[45.320s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[45.370s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/nav_sat_fix.hpp:9[m[K,
[45.371s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:48[m[K:
[45.371s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™ after instantiation
[45.372s]   234 | struct [01;31m[Kis_message<sensor_msgs::msg::NavSatFix>[m[K
[45.372s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[45.372s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™
[45.374s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™
[45.376s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[45.376s]       |        [01;36m[K^~~~~~~~~~[m[K
[45.398s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™:
[45.399s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:80:51:[m[K   required from here
[45.400s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[45.410s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[45.461s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™:
[45.462s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:81:57:[m[K   required from here
[45.462s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[45.463s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[45.574s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps.hpp:9[m[K,
[45.574s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:49[m[K:
[45.575s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™ after instantiation
[45.575s]   349 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::GPS>[m[K
[45.575s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[45.584s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™
[45.585s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™
[45.588s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[45.591s]       |        [01;36m[K^~~~~~~~~~[m[K
[45.653s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps_info.hpp:9[m[K,
[45.654s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:51[m[K:
[45.655s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™ after instantiation
[45.656s]   166 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::GPSInfo>[m[K
[45.657s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[45.658s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™
[45.658s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™
[45.659s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[45.660s]       |        [01;36m[K^~~~~~~~~~[m[K
[45.701s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/pimu.hpp:9[m[K,
[45.701s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:52[m[K:
[45.702s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™ after instantiation
[45.702s]   162 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::PIMU>[m[K
[45.706s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[45.707s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™
[45.708s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™
[45.709s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[45.709s]       |        [01;36m[K^~~~~~~~~~[m[K
[46.377s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/inl2_states.hpp:9[m[K,
[46.377s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:61[m[K:
[46.378s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™ after instantiation
[46.378s]   248 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::INL2States>[m[K
[46.379s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.380s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™
[46.382s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™
[46.382s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[46.383s]       |        [01;36m[K^~~~~~~~~~[m[K
[46.525s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins2.hpp:9[m[K,
[46.525s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:62[m[K:
[46.526s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™ after instantiation
[46.526s]   292 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS2>[m[K
[46.531s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.531s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™
[46.532s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™
[46.533s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[46.533s]       |        [01;36m[K^~~~~~~~~~[m[K
[46.643s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/imu.hpp:9[m[K,
[46.644s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:44[m[K:
[46.645s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™ after instantiation
[46.645s]   277 | struct [01;31m[Kis_message<sensor_msgs::msg::Imu>[m[K
[46.645s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.646s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™
[46.646s] In file included from [01m[K/opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__traits.hpp:18[m[K,
[46.651s]                  from [01m[K/opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/list_parameters.hpp:9[m[K,
[46.651s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:21[m[K,
[46.652s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171[m[K:
[46.652s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™
[46.653s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[46.653s]       |        [01;36m[K^~~~~~~~~~[m[K
[46.668s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins1.hpp:9[m[K,
[46.669s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:63[m[K:
[46.669s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™ after instantiation
[46.670s]   330 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS1>[m[K
[46.676s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.678s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™
[46.678s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™
[46.679s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[46.679s]       |        [01;36m[K^~~~~~~~~~[m[K
[46.726s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/magnetic_field.hpp:9[m[K,
[46.726s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:45[m[K:
[46.751s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™ after instantiation
[46.751s]   166 | struct [01;31m[Kis_message<sensor_msgs::msg::MagneticField>[m[K
[46.752s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.753s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™
[46.753s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™
[46.756s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[46.756s]       |        [01;36m[K^~~~~~~~~~[m[K
[46.833s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins4.hpp:9[m[K,
[46.833s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:64[m[K:
[46.835s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™ after instantiation
[46.835s]   292 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS4>[m[K
[46.849s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.850s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™
[46.851s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™
[46.860s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[46.860s]       |        [01;36m[K^~~~~~~~~~[m[K
[46.945s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/nav_sat_fix.hpp:9[m[K,
[46.946s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:48[m[K:
[46.946s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™ after instantiation
[46.946s]   234 | struct [01;31m[Kis_message<sensor_msgs::msg::NavSatFix>[m[K
[46.947s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.947s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™
[46.947s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™
[46.951s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[46.951s]       |        [01;36m[K^~~~~~~~~~[m[K
[46.960s] In file included from [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/odometry.hpp:9[m[K,
[46.961s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:65[m[K:
[46.961s] [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™ after instantiation
[46.961s]   163 | struct [01;31m[Kis_message<nav_msgs::msg::Odometry>[m[K
[46.961s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.962s] [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™
[46.962s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™
[46.967s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[46.968s]       |        [01;36m[K^~~~~~~~~~[m[K
[47.113s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps.hpp:9[m[K,
[47.114s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:49[m[K:
[47.115s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™ after instantiation
[47.115s]   349 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::GPS>[m[K
[47.115s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[47.119s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™
[47.119s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™
[47.120s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[47.120s]       |        [01;36m[K^~~~~~~~~~[m[K
[47.197s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps_info.hpp:9[m[K,
[47.198s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:51[m[K:
[47.198s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™ after instantiation
[47.203s]   166 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::GPSInfo>[m[K
[47.203s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[47.204s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™
[47.208s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™
[47.210s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[47.214s]       |        [01;36m[K^~~~~~~~~~[m[K
[47.258s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/pimu.hpp:9[m[K,
[47.259s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:52[m[K:
[47.260s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™ after instantiation
[47.264s]   162 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::PIMU>[m[K
[47.265s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[47.266s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™
[47.266s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™
[47.270s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[47.271s]       |        [01;36m[K^~~~~~~~~~[m[K
[47.899s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/inl2_states.hpp:9[m[K,
[47.899s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:61[m[K:
[47.900s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™ after instantiation
[47.900s]   248 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::INL2States>[m[K
[47.900s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[47.901s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™
[47.905s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™
[47.908s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[47.909s]       |        [01;36m[K^~~~~~~~~~[m[K
[48.088s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins2.hpp:9[m[K,
[48.088s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:62[m[K:
[48.092s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™ after instantiation
[48.096s]   292 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS2>[m[K
[48.097s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[48.099s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™
[48.099s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™
[48.105s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[48.106s]       |        [01;36m[K^~~~~~~~~~[m[K
[48.251s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins1.hpp:9[m[K,
[48.252s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:63[m[K:
[48.262s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™ after instantiation
[48.263s]   330 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS1>[m[K
[48.263s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[48.264s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™
[48.264s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™
[48.273s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[48.274s]       |        [01;36m[K^~~~~~~~~~[m[K
[48.351s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins4.hpp:9[m[K,
[48.351s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:64[m[K:
[48.352s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™ after instantiation
[48.352s]   292 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS4>[m[K
[48.360s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[48.361s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™
[48.361s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™
[48.362s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[48.362s]       |        [01;36m[K^~~~~~~~~~[m[K
[48.598s] In file included from [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/odometry.hpp:9[m[K,
[48.599s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:65[m[K:
[48.599s] [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™ after instantiation
[48.600s]   163 | struct [01;31m[Kis_message<nav_msgs::msg::Odometry>[m[K
[48.607s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[48.608s] [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™
[48.608s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™
[48.608s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[48.609s]       |        [01;36m[K^~~~~~~~~~[m[K
[49.935s] In file included from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:20[m[K:
[49.940s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kbool InertialSenseROS::[01;32m[Kfirmware_compatiblity_check[m[K()[m[Kâ€™:
[49.940s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[49.941s]   568 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K protocol_fault = rclcpp::Logger::Level::Debug; // none
[49.941s]       |                            [01;31m[K^~~~~[m[K
[50.057s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[50.057s]   569 |     if (diff_protocol[0] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
[50.058s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[50.058s]       |                                [32m[Kprotocol_type_t[m[K
[50.155s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[50.155s]   570 |     else if (diff_protocol[1] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
[50.156s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[50.156s]       |                                     [32m[Kprotocol_type_t[m[K
[50.254s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[50.255s]   571 |     else if (diff_protocol[2] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[50.255s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[50.256s]       |                                     [32m[Kprotocol_type_t[m[K
[50.319s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[50.319s]   572 |     else if (diff_protocol[3] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
[50.320s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[50.320s]       |                                     [32m[Kprotocol_type_t[m[K
[50.321s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[50.321s]   574 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K firmware_fault = rclcpp::Logger::Level::Debug; // none
[50.330s]       |                            [01;31m[K^~~~~[m[K
[50.394s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[50.394s]   575 |     if (diff_firmware[0] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
[50.394s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[50.501s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[50.502s]   576 |     else if (diff_firmware[1] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
[50.502s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[50.573s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[50.574s]   577 |     else if (diff_firmware[2] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[50.574s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[50.575s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[50.575s]   579 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K final_fault = std::max(firmware_fault, protocol_fault);
[50.575s]       |                            [01;31m[K^~~~~[m[K
[50.625s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfinal_fault[m[Kâ€™ was not declared in this scope
[50.629s]   599 |     return [01;31m[Kfinal_fault[m[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
[50.629s]       |            [01;31m[K^~~~~~~~~~~[m[K
[51.140s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS1_callback[m[K(eDataIDs, const ins_1_t*)[m[Kâ€™:
[51.143s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS1&)[m[Kâ€™
[51.143s]   955 |             [01;31m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[51.143s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.144s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.148s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.148s]       |   [01;36m[K^~~~~~~[m[K
[51.149s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.150s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >[m[Kâ€™
[51.150s]   955 |             [01;36m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[51.161s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.161s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.162s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.162s]       |   [01;36m[K^~~~~~~[m[K
[51.163s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.166s] In file included from [01m[K/usr/include/c++/13/bits/move.h:37[m[K,
[51.167s]                  from [01m[K/usr/include/c++/13/bits/exception_ptr.h:41[m[K,
[51.167s]                  from [01m[K/usr/include/c++/13/exception:164[m[K,
[51.167s]                  from [01m[K/usr/include/c++/13/ios:41[m[K,
[51.171s]                  from [01m[K/usr/include/c++/13/ostream:40[m[K,
[51.172s]                  from [01m[K/usr/include/c++/13/iostream:41[m[K,
[51.172s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22[m[K:
[51.173s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = void][m[K[m[Kâ€™:
[51.173s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K   required by substitution of â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value), void> rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::[01;32m[Kpublish[m[K(const T&) [35m[K[with T = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[51.174s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K   required from here
[51.174s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[51.174s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[51.175s]       |           [01;31m[K^~~~~~~~~~~[m[K
[51.175s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.175s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.179s]       |   [01;36m[K^~~~~~~[m[K
[51.180s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.180s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >[m[Kâ€™
[51.181s]   955 |             [01;36m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[51.181s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.181s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.188s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.188s]       |   [01;36m[K^~~~~~~[m[K
[51.189s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.192s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.192s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.193s]       |   [01;36m[K^~~~~~~[m[K
[51.196s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.196s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.196s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.197s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.197s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.198s]       |   [01;36m[K^~~~~~~[m[K
[51.198s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.199s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.199s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.199s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[51.200s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.200s]       |   [01;36m[K^~~~~~~[m[K
[51.206s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.206s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.206s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.207s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS2_callback[m[K(eDataIDs, const ins_2_t*)[m[Kâ€™:
[51.207s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS2&)[m[Kâ€™
[51.207s]   982 |             [01;31m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[51.208s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.208s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.216s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.217s]       |   [01;36m[K^~~~~~~[m[K
[51.217s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.218s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >[m[Kâ€™
[51.218s]   982 |             [01;36m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[51.218s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.218s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.219s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.219s]       |   [01;36m[K^~~~~~~[m[K
[51.219s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.220s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.220s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.225s]       |   [01;36m[K^~~~~~~[m[K
[51.225s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.226s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >[m[Kâ€™
[51.230s]   982 |             [01;36m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[51.230s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.234s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.234s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.235s]       |   [01;36m[K^~~~~~~[m[K
[51.236s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.236s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.236s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.236s]       |   [01;36m[K^~~~~~~[m[K
[51.237s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.237s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.243s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.243s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.244s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.244s]       |   [01;36m[K^~~~~~~[m[K
[51.244s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.245s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.249s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.250s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >][m[K[m[Kâ€™
[51.250s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.250s]       |   [01;36m[K^~~~~~~[m[K
[51.251s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.251s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.257s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.257s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS4_callback[m[K(eDataIDs, const ins_4_t*)[m[Kâ€™:
[51.258s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS4&)[m[Kâ€™
[51.261s]  1009 |             [01;31m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[51.261s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.262s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.262s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.262s]       |   [01;36m[K^~~~~~~[m[K
[51.263s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.263s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >[m[Kâ€™
[51.269s]  1009 |             [01;36m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[51.269s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.269s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.270s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.270s]       |   [01;36m[K^~~~~~~[m[K
[51.273s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.279s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.280s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.280s]       |   [01;36m[K^~~~~~~[m[K
[51.281s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.281s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >[m[Kâ€™
[51.285s]  1009 |             [01;36m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[51.285s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.286s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.286s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.290s]       |   [01;36m[K^~~~~~~[m[K
[51.290s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.293s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.293s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.293s]       |   [01;36m[K^~~~~~~[m[K
[51.293s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.294s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.294s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.297s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.301s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.302s]       |   [01;36m[K^~~~~~~[m[K
[51.302s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.303s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.303s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.303s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >][m[K[m[Kâ€™
[51.304s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.304s]       |   [01;36m[K^~~~~~~[m[K
[51.305s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.305s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.316s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.317s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[51.317s]  1078 |             [01;31m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[51.318s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.322s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.322s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.323s]       |   [01;36m[K^~~~~~~[m[K
[51.324s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.324s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[51.324s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[51.327s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.328s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.331s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.332s]       |   [01;36m[K^~~~~~~[m[K
[51.332s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.333s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.333s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.337s]       |   [01;36m[K^~~~~~~[m[K
[51.338s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.338s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[51.339s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[51.339s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.340s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.340s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.340s]       |   [01;36m[K^~~~~~~[m[K
[51.343s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.344s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.344s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.345s]       |   [01;36m[K^~~~~~~[m[K
[51.345s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.346s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.346s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.353s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.354s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.354s]       |   [01;36m[K^~~~~~~[m[K
[51.355s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.355s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.358s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.359s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[51.360s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.360s]       |   [01;36m[K^~~~~~~[m[K
[51.364s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.364s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.365s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.365s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[51.365s]  1165 |                 [01;31m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[51.366s]       |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.366s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.370s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.370s]       |   [01;36m[K^~~~~~~[m[K
[51.371s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.371s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[51.371s]  1165 |                 [01;36m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[51.372s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.372s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.372s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.376s]       |   [01;36m[K^~~~~~~[m[K
[51.377s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.377s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.378s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.378s]       |   [01;36m[K^~~~~~~[m[K
[51.382s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.383s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[51.383s]  1165 |                 [01;36m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[51.383s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.387s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.387s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.387s]       |   [01;36m[K^~~~~~~[m[K
[51.388s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.388s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.389s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.389s]       |   [01;36m[K^~~~~~~[m[K
[51.393s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.393s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.394s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.394s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.394s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.395s]       |   [01;36m[K^~~~~~~[m[K
[51.395s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.403s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.404s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.404s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[51.405s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.405s]       |   [01;36m[K^~~~~~~[m[K
[51.410s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.410s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.410s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.411s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[51.411s]  1259 |                 [01;31m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[51.415s]       |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.416s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.416s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.417s]       |   [01;36m[K^~~~~~~[m[K
[51.422s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.422s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[51.423s]  1259 |                 [01;36m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[51.423s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.423s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.428s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.429s]       |   [01;36m[K^~~~~~~[m[K
[51.430s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.430s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.435s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.436s]       |   [01;36m[K^~~~~~~[m[K
[51.436s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.437s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[51.437s]  1259 |                 [01;36m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[51.437s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.442s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.443s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.443s]       |   [01;36m[K^~~~~~~[m[K
[51.443s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.444s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.444s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.449s]       |   [01;36m[K^~~~~~~[m[K
[51.450s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.450s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.451s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.460s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.461s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.461s]       |   [01;36m[K^~~~~~~[m[K
[51.465s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.465s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.466s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.471s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[51.472s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.472s]       |   [01;36m[K^~~~~~~[m[K
[51.477s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.477s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.478s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.478s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINL2_states_callback[m[K(eDataIDs, const inl2_states_t*)[m[Kâ€™:
[51.478s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::INL2States&)[m[Kâ€™
[51.479s]  1312 |             [01;31m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[51.483s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[51.483s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.484s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.484s]       |   [01;36m[K^~~~~~~[m[K
[51.484s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.487s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >[m[Kâ€™
[51.487s]  1312 |             [01;36m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[51.488s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[51.489s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.491s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.491s]       |   [01;36m[K^~~~~~~[m[K
[51.491s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.494s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.494s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.494s]       |   [01;36m[K^~~~~~~[m[K
[51.497s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.498s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >[m[Kâ€™
[51.498s]  1312 |             [01;36m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[51.498s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[51.499s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.499s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.499s]       |   [01;36m[K^~~~~~~[m[K
[51.504s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.505s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.506s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.506s]       |   [01;36m[K^~~~~~~[m[K
[51.509s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.509s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.509s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.510s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.510s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.510s]       |   [01;36m[K^~~~~~~[m[K
[51.511s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.519s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.520s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.520s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >][m[K[m[Kâ€™
[51.528s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.529s]       |   [01;36m[K^~~~~~~[m[K
[51.533s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.535s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.536s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.536s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_pos_callback[m[K(eDataIDs, const gps_pos_t*)[m[Kâ€™:
[51.537s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::publish(sensor_msgs::msg::NavSatFix&)[m[Kâ€™
[51.537s]  1455 |             [01;31m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[51.537s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.538s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.538s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.539s]       |   [01;36m[K^~~~~~~[m[K
[51.540s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.540s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >[m[Kâ€™
[51.541s]  1455 |             [01;36m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[51.541s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.541s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.542s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.542s]       |   [01;36m[K^~~~~~~[m[K
[51.542s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.543s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.543s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.544s]       |   [01;36m[K^~~~~~~[m[K
[51.544s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.547s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >[m[Kâ€™
[51.547s]  1455 |             [01;36m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[51.548s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.548s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.548s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.549s]       |   [01;36m[K^~~~~~~[m[K
[51.549s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.549s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.550s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.550s]       |   [01;36m[K^~~~~~~[m[K
[51.550s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.551s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.551s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.552s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.552s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.553s]       |   [01;36m[K^~~~~~~[m[K
[51.554s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.555s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.558s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.560s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::NavSatFix_<std::allocator<void> >][m[K[m[Kâ€™
[51.560s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.561s]       |   [01;36m[K^~~~~~~[m[K
[51.562s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.562s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.563s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.563s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS1[m[K()[m[Kâ€™:
[51.563s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[51.564s]  1500 |             [01;31m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[51.564s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.564s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.565s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.570s]       |   [01;36m[K^~~~~~~[m[K
[51.571s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.571s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[51.572s]  1500 |             [01;36m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[51.572s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.574s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.579s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.580s]       |   [01;36m[K^~~~~~~[m[K
[51.580s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.581s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.582s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.582s]       |   [01;36m[K^~~~~~~[m[K
[51.582s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.583s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[51.583s]  1500 |             [01;36m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[51.587s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.587s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.588s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.588s]       |   [01;36m[K^~~~~~~[m[K
[51.588s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.591s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.592s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.592s]       |   [01;36m[K^~~~~~~[m[K
[51.594s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.595s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.595s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.595s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.596s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.596s]       |   [01;36m[K^~~~~~~[m[K
[51.603s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.603s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.603s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.604s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >][m[K[m[Kâ€™
[51.607s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.611s]       |   [01;36m[K^~~~~~~[m[K
[51.611s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.611s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.612s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.612s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS2[m[K()[m[Kâ€™:
[51.612s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[51.613s]  1512 |             [01;31m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[51.613s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.621s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.623s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.624s]       |   [01;36m[K^~~~~~~[m[K
[51.624s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.624s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[51.631s]  1512 |             [01;36m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[51.634s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.635s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.635s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.635s]       |   [01;36m[K^~~~~~~[m[K
[51.636s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.636s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.636s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.640s]       |   [01;36m[K^~~~~~~[m[K
[51.640s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.641s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[51.641s]  1512 |             [01;36m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[51.642s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.642s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.642s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.647s]       |   [01;36m[K^~~~~~~[m[K
[51.648s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.648s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.648s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.649s]       |   [01;36m[K^~~~~~~[m[K
[51.649s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.649s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.652s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.652s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.652s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.661s]       |   [01;36m[K^~~~~~~[m[K
[51.662s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.662s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.662s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.663s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >][m[K[m[Kâ€™
[51.663s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.663s]       |   [01;36m[K^~~~~~~[m[K
[51.668s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.669s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.670s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.673s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kbool InertialSenseROS::[01;32m[Kfirmware_compatiblity_check[m[K()[m[Kâ€™:
[51.674s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[51.674s]   568 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K protocol_fault = rclcpp::Logger::Level::Debug; // none
[51.675s]       |                            [01;31m[K^~~~~[m[K
[51.675s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_info_callback[m[K(eDataIDs, const gps_sat_t*)[m[Kâ€™:
[51.675s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[51.680s]  1569 |     case DID_GPS1_SAT:  [01;31m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[51.680s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.681s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.681s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.681s]       |   [01;36m[K^~~~~~~[m[K
[51.682s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.682s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[51.687s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[51.687s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.687s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.688s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.689s]       |   [01;36m[K^~~~~~~[m[K
[51.689s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.689s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.690s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.690s]       |   [01;36m[K^~~~~~~[m[K
[51.690s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.690s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[51.691s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[51.691s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.695s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.695s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.696s]       |   [01;36m[K^~~~~~~[m[K
[51.696s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.699s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.700s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.700s]       |   [01;36m[K^~~~~~~[m[K
[51.701s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.704s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.705s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.705s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.709s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.709s]       |   [01;36m[K^~~~~~~[m[K
[51.709s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.710s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.710s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.711s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >][m[K[m[Kâ€™
[51.711s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.712s]       |   [01;36m[K^~~~~~~[m[K
[51.712s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.712s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.712s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.713s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[51.713s]  1570 |     case DID_GPS2_SAT:  [01;31m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[51.713s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.716s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.717s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.717s]       |   [01;36m[K^~~~~~~[m[K
[51.718s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.718s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[51.724s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[51.725s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.725s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.725s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.726s]       |   [01;36m[K^~~~~~~[m[K
[51.726s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.732s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.732s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.733s]       |   [01;36m[K^~~~~~~[m[K
[51.733s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.734s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[51.734s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[51.737s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[51.737s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.738s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.739s]       |   [01;36m[K^~~~~~~[m[K
[51.739s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.739s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.739s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.743s]       |   [01;36m[K^~~~~~~[m[K
[51.743s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.744s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.744s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.745s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.745s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.750s]       |   [01;36m[K^~~~~~~[m[K
[51.751s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.752s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.753s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.753s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >][m[K[m[Kâ€™
[51.754s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.755s]       |   [01;36m[K^~~~~~~[m[K
[51.755s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.756s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.756s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.756s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kmag_callback[m[K(eDataIDs, const magnetometer_t*)[m[Kâ€™:
[51.758s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::publish(sensor_msgs::msg::MagneticField&)[m[Kâ€™
[51.758s]  1588 |     [01;31m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[51.759s]       |     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[51.759s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.759s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.760s]       |   [01;36m[K^~~~~~~[m[K
[51.760s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.761s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >[m[Kâ€™
[51.762s]  1588 |     [01;36m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[51.762s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[51.762s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.762s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.763s]       |   [01;36m[K^~~~~~~[m[K
[51.763s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.766s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.768s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.770s]       |   [01;36m[K^~~~~~~[m[K
[51.770s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.770s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >[m[Kâ€™
[51.771s]  1588 |     [01;36m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[51.771s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[51.771s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.772s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.772s]       |   [01;36m[K^~~~~~~[m[K
[51.773s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.774s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.774s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.774s]       |   [01;36m[K^~~~~~~[m[K
[51.775s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.775s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.775s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.775s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.776s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.776s]       |   [01;36m[K^~~~~~~[m[K
[51.777s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.778s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.779s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.779s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::MagneticField_<std::allocator<void> >][m[K[m[Kâ€™
[51.779s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.780s]       |   [01;36m[K^~~~~~~[m[K
[51.781s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.781s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.783s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.783s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kpreint_IMU_callback[m[K(eDataIDs, const pimu_t*)[m[Kâ€™:
[51.783s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::PIMU&)[m[Kâ€™
[51.784s]  1623 |         [01;31m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[51.784s]       |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.785s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.785s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.786s]       |   [01;36m[K^~~~~~~[m[K
[51.786s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.786s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >[m[Kâ€™
[51.787s]  1623 |         [01;36m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[51.787s]       |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.789s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.790s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.790s]       |   [01;36m[K^~~~~~~[m[K
[51.791s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.792s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.792s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.792s]       |   [01;36m[K^~~~~~~[m[K
[51.793s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.794s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >[m[Kâ€™
[51.794s]  1623 |         [01;36m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[51.794s]       |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.795s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.795s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.796s]       |   [01;36m[K^~~~~~~[m[K
[51.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.801s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.801s]       |   [01;36m[K^~~~~~~[m[K
[51.801s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.802s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.802s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.803s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.803s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.803s]       |   [01;36m[K^~~~~~~[m[K
[51.804s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.805s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.805s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.806s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >][m[K[m[Kâ€™
[51.807s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.807s]       |   [01;36m[K^~~~~~~[m[K
[51.808s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.808s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.808s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.818s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >::publish(sensor_msgs::msg::Imu&)[m[Kâ€™
[51.818s]  1640 |             [01;31m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[51.819s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[51.819s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.820s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[51.820s]       |   [01;36m[K^~~~~~~[m[K
[51.821s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.821s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >[m[Kâ€™
[51.821s]  1640 |             [01;36m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[51.822s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[51.826s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.826s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[51.827s]       |   [01;36m[K^~~~~~~[m[K
[51.830s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.830s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.831s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[51.832s]       |   [01;36m[K^~~~~~~[m[K
[51.832s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.833s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >[m[Kâ€™
[51.833s]  1640 |             [01;36m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[51.833s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[51.834s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.834s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[51.834s]       |   [01;36m[K^~~~~~~[m[K
[51.835s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[51.835s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[51.836s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[51.836s]       |   [01;36m[K^~~~~~~[m[K
[51.836s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[51.837s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[51.837s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.838s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[51.838s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[51.838s]       |   [01;36m[K^~~~~~~[m[K
[51.841s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[51.842s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[51.842s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[51.842s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Imu_<std::allocator<void> >][m[K[m[Kâ€™
[51.843s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[51.843s]       |   [01;36m[K^~~~~~~[m[K
[51.844s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[51.844s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[51.845s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[51.845s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[51.846s]   569 |     if (diff_protocol[0] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
[51.846s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[51.847s]       |                                [32m[Kprotocol_type_t[m[K
[51.847s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[51.847s]   570 |     else if (diff_protocol[1] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
[51.847s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[51.848s]       |                                     [32m[Kprotocol_type_t[m[K
[51.848s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[51.850s]   571 |     else if (diff_protocol[2] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[51.851s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[51.851s]       |                                     [32m[Kprotocol_type_t[m[K
[51.872s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[51.872s]   572 |     else if (diff_protocol[3] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
[51.873s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[51.873s]       |                                     [32m[Kprotocol_type_t[m[K
[51.873s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[51.874s]   574 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K firmware_fault = rclcpp::Logger::Level::Debug; // none
[51.874s]       |                            [01;31m[K^~~~~[m[K
[51.949s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[51.950s]   575 |     if (diff_firmware[0] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
[51.951s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[52.017s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[52.017s]   576 |     else if (diff_firmware[1] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
[52.017s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[52.086s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[52.086s]   577 |     else if (diff_firmware[2] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[52.087s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[52.090s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[52.091s]   579 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K final_fault = std::max(firmware_fault, protocol_fault);
[52.091s]       |                            [01;31m[K^~~~~[m[K
[52.138s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfinal_fault[m[Kâ€™ was not declared in this scope
[52.139s]   599 |     return [01;31m[Kfinal_fault[m[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
[52.139s]       |            [01;31m[K^~~~~~~~~~~[m[K
[52.601s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS1_callback[m[K(eDataIDs, const ins_1_t*)[m[Kâ€™:
[52.602s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS1&)[m[Kâ€™
[52.603s]   955 |             [01;31m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[52.609s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.613s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.615s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[52.618s]       |   [01;36m[K^~~~~~~[m[K
[52.618s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.620s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >[m[Kâ€™
[52.622s]   955 |             [01;36m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[52.622s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.623s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.623s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[52.623s]       |   [01;36m[K^~~~~~~[m[K
[52.627s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.628s] In file included from [01m[K/usr/include/c++/13/bits/move.h:37[m[K,
[52.629s]                  from [01m[K/usr/include/c++/13/bits/exception_ptr.h:41[m[K,
[52.629s]                  from [01m[K/usr/include/c++/13/exception:164[m[K,
[52.631s]                  from [01m[K/usr/include/c++/13/ios:41[m[K,
[52.635s]                  from [01m[K/usr/include/c++/13/ostream:40[m[K,
[52.636s]                  from [01m[K/usr/include/c++/13/iostream:41[m[K,
[52.636s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22[m[K:
[52.644s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = void][m[K[m[Kâ€™:
[52.645s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K   required by substitution of â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value), void> rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::[01;32m[Kpublish[m[K(const T&) [35m[K[with T = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[52.645s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K   required from here
[52.649s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[52.650s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[52.654s]       |           [01;31m[K^~~~~~~~~~~[m[K
[52.656s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.656s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[52.657s]       |   [01;36m[K^~~~~~~[m[K
[52.665s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.666s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >[m[Kâ€™
[52.666s]   955 |             [01;36m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[52.667s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.667s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.681s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[52.681s]       |   [01;36m[K^~~~~~~[m[K
[52.686s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.687s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[52.687s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[52.687s]       |   [01;36m[K^~~~~~~[m[K
[52.688s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[52.688s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[52.694s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.695s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.695s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[52.696s]       |   [01;36m[K^~~~~~~[m[K
[52.696s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[52.703s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[52.704s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.705s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[52.710s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[52.711s]       |   [01;36m[K^~~~~~~[m[K
[52.712s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[52.712s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[52.712s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[52.720s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS2_callback[m[K(eDataIDs, const ins_2_t*)[m[Kâ€™:
[52.721s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS2&)[m[Kâ€™
[52.721s]   982 |             [01;31m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[52.723s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.723s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.731s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[52.732s]       |   [01;36m[K^~~~~~~[m[K
[52.732s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.738s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >[m[Kâ€™
[52.739s]   982 |             [01;36m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[52.739s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.740s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.740s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[52.749s]       |   [01;36m[K^~~~~~~[m[K
[52.750s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.751s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.751s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[52.751s]       |   [01;36m[K^~~~~~~[m[K
[52.754s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.759s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >[m[Kâ€™
[52.760s]   982 |             [01;36m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[52.760s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.767s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.768s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[52.769s]       |   [01;36m[K^~~~~~~[m[K
[52.774s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.775s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[52.776s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[52.779s]       |   [01;36m[K^~~~~~~[m[K
[52.780s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[52.780s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[52.781s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.786s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.787s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[52.787s]       |   [01;36m[K^~~~~~~[m[K
[52.788s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[52.788s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[52.790s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >][m[K[m[Kâ€™
[52.800s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[52.800s]       |   [01;36m[K^~~~~~~[m[K
[52.801s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[52.802s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[52.805s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[52.805s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS4_callback[m[K(eDataIDs, const ins_4_t*)[m[Kâ€™:
[52.805s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS4&)[m[Kâ€™
[52.806s]  1009 |             [01;31m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[52.806s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.807s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.807s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[52.807s]       |   [01;36m[K^~~~~~~[m[K
[52.811s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.811s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >[m[Kâ€™
[52.811s]  1009 |             [01;36m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[52.812s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.812s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.813s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[52.813s]       |   [01;36m[K^~~~~~~[m[K
[52.813s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.824s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.825s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[52.828s]       |   [01;36m[K^~~~~~~[m[K
[52.829s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.829s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >[m[Kâ€™
[52.835s]  1009 |             [01;36m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[52.835s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.837s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.838s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[52.838s]       |   [01;36m[K^~~~~~~[m[K
[52.838s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.838s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[52.842s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[52.842s]       |   [01;36m[K^~~~~~~[m[K
[52.843s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[52.844s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[52.844s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.847s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.848s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[52.848s]       |   [01;36m[K^~~~~~~[m[K
[52.851s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[52.852s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[52.853s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.855s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >][m[K[m[Kâ€™
[52.855s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[52.856s]       |   [01;36m[K^~~~~~~[m[K
[52.856s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[52.857s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[52.857s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[52.858s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[52.859s]  1078 |             [01;31m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[52.860s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[52.873s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.874s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[52.879s]       |   [01;36m[K^~~~~~~[m[K
[52.880s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.881s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[52.882s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[52.882s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[52.884s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.884s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[52.884s]       |   [01;36m[K^~~~~~~[m[K
[52.887s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.887s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.888s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[52.889s]       |   [01;36m[K^~~~~~~[m[K
[52.890s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.890s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[52.891s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[52.892s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[52.893s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.894s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[52.894s]       |   [01;36m[K^~~~~~~[m[K
[52.895s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.897s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[52.898s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[52.899s]       |   [01;36m[K^~~~~~~[m[K
[52.899s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[52.901s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[52.902s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.902s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.903s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[52.903s]       |   [01;36m[K^~~~~~~[m[K
[52.905s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[52.906s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[52.907s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.917s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[52.917s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[52.918s]       |   [01;36m[K^~~~~~~[m[K
[52.918s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[52.918s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[52.919s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[52.919s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[52.919s]  1165 |                 [01;31m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[52.920s]       |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.920s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.922s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[52.922s]       |   [01;36m[K^~~~~~~[m[K
[52.967s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.971s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[52.972s]  1165 |                 [01;36m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[52.973s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[52.977s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.977s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[52.977s]       |   [01;36m[K^~~~~~~[m[K
[52.998s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[52.999s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[52.999s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[52.999s]       |   [01;36m[K^~~~~~~[m[K
[52.999s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.000s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[53.000s]  1165 |                 [01;36m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[53.000s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.006s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.007s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.007s]       |   [01;36m[K^~~~~~~[m[K
[53.008s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.009s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.009s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.010s]       |   [01;36m[K^~~~~~~[m[K
[53.010s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.011s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.011s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.012s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.013s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.013s]       |   [01;36m[K^~~~~~~[m[K
[53.014s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.015s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.016s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.017s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[53.017s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.017s]       |   [01;36m[K^~~~~~~[m[K
[53.018s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.018s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.019s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.019s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[53.020s]  1259 |                 [01;31m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[53.021s]       |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.022s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.048s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.049s]       |   [01;36m[K^~~~~~~[m[K
[53.049s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.049s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[53.050s]  1259 |                 [01;36m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[53.051s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.051s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.051s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.052s]       |   [01;36m[K^~~~~~~[m[K
[53.052s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.054s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.054s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.055s]       |   [01;36m[K^~~~~~~[m[K
[53.055s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.055s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[53.056s]  1259 |                 [01;36m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[53.056s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.057s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.057s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.058s]       |   [01;36m[K^~~~~~~[m[K
[53.059s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.064s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.064s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.069s]       |   [01;36m[K^~~~~~~[m[K
[53.072s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.073s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.073s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.074s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.075s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.076s]       |   [01;36m[K^~~~~~~[m[K
[53.076s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.076s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.077s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.077s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[53.078s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.078s]       |   [01;36m[K^~~~~~~[m[K
[53.078s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.079s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.079s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.080s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINL2_states_callback[m[K(eDataIDs, const inl2_states_t*)[m[Kâ€™:
[53.080s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::INL2States&)[m[Kâ€™
[53.081s]  1312 |             [01;31m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[53.081s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[53.082s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.082s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.082s]       |   [01;36m[K^~~~~~~[m[K
[53.083s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.083s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >[m[Kâ€™
[53.084s]  1312 |             [01;36m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[53.084s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[53.085s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.085s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.086s]       |   [01;36m[K^~~~~~~[m[K
[53.086s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.087s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.087s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.087s]       |   [01;36m[K^~~~~~~[m[K
[53.087s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.088s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >[m[Kâ€™
[53.088s]  1312 |             [01;36m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[53.089s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[53.089s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.090s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.090s]       |   [01;36m[K^~~~~~~[m[K
[53.090s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.091s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.091s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.091s]       |   [01;36m[K^~~~~~~[m[K
[53.092s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.092s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.092s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.093s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.094s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.095s]       |   [01;36m[K^~~~~~~[m[K
[53.096s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.096s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.097s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.097s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >][m[K[m[Kâ€™
[53.098s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.099s]       |   [01;36m[K^~~~~~~[m[K
[53.099s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.100s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.100s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.100s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_pos_callback[m[K(eDataIDs, const gps_pos_t*)[m[Kâ€™:
[53.101s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::publish(sensor_msgs::msg::NavSatFix&)[m[Kâ€™
[53.102s]  1455 |             [01;31m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[53.103s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[53.103s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.104s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.104s]       |   [01;36m[K^~~~~~~[m[K
[53.104s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.105s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >[m[Kâ€™
[53.105s]  1455 |             [01;36m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[53.106s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[53.106s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.107s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.108s]       |   [01;36m[K^~~~~~~[m[K
[53.109s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.110s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.110s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.111s]       |   [01;36m[K^~~~~~~[m[K
[53.111s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.111s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >[m[Kâ€™
[53.111s]  1455 |             [01;36m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[53.112s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[53.112s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.112s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.113s]       |   [01;36m[K^~~~~~~[m[K
[53.113s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.114s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.114s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.114s]       |   [01;36m[K^~~~~~~[m[K
[53.115s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.115s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.115s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.116s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.116s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.117s]       |   [01;36m[K^~~~~~~[m[K
[53.117s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.118s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.119s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.120s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::NavSatFix_<std::allocator<void> >][m[K[m[Kâ€™
[53.120s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.121s]       |   [01;36m[K^~~~~~~[m[K
[53.122s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.123s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.123s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.124s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS1[m[K()[m[Kâ€™:
[53.124s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[53.125s]  1500 |             [01;31m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[53.126s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.127s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.127s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.128s]       |   [01;36m[K^~~~~~~[m[K
[53.128s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.129s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[53.129s]  1500 |             [01;36m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[53.129s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.129s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.130s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.131s]       |   [01;36m[K^~~~~~~[m[K
[53.131s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.132s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.134s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.135s]       |   [01;36m[K^~~~~~~[m[K
[53.135s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.136s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[53.136s]  1500 |             [01;36m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[53.136s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.137s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.137s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.138s]       |   [01;36m[K^~~~~~~[m[K
[53.138s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.138s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.139s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.140s]       |   [01;36m[K^~~~~~~[m[K
[53.141s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.141s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.141s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.141s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.142s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.142s]       |   [01;36m[K^~~~~~~[m[K
[53.143s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.144s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.144s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.145s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >][m[K[m[Kâ€™
[53.145s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.145s]       |   [01;36m[K^~~~~~~[m[K
[53.146s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.146s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.146s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.147s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS2[m[K()[m[Kâ€™:
[53.147s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[53.148s]  1512 |             [01;31m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[53.149s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.150s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.150s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.151s]       |   [01;36m[K^~~~~~~[m[K
[53.151s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.151s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[53.152s]  1512 |             [01;36m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[53.152s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.161s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.161s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.162s]       |   [01;36m[K^~~~~~~[m[K
[53.162s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.163s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.163s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.164s]       |   [01;36m[K^~~~~~~[m[K
[53.164s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.164s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[53.165s]  1512 |             [01;36m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[53.166s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.167s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.167s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.168s]       |   [01;36m[K^~~~~~~[m[K
[53.168s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.169s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.169s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.170s]       |   [01;36m[K^~~~~~~[m[K
[53.170s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.171s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.172s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.172s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.173s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.173s]       |   [01;36m[K^~~~~~~[m[K
[53.174s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.174s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.175s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.176s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >][m[K[m[Kâ€™
[53.178s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.178s]       |   [01;36m[K^~~~~~~[m[K
[53.179s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.179s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.180s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.180s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_info_callback[m[K(eDataIDs, const gps_sat_t*)[m[Kâ€™:
[53.180s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[53.181s]  1569 |     case DID_GPS1_SAT:  [01;31m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[53.182s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[53.183s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.184s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.184s]       |   [01;36m[K^~~~~~~[m[K
[53.185s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.185s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[53.186s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[53.186s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[53.187s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.187s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.188s]       |   [01;36m[K^~~~~~~[m[K
[53.189s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.189s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.190s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.190s]       |   [01;36m[K^~~~~~~[m[K
[53.190s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.191s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[53.191s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[53.193s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[53.194s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.195s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.195s]       |   [01;36m[K^~~~~~~[m[K
[53.196s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.196s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.196s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.197s]       |   [01;36m[K^~~~~~~[m[K
[53.197s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.197s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.198s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.198s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.199s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.200s]       |   [01;36m[K^~~~~~~[m[K
[53.201s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.202s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.203s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.204s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >][m[K[m[Kâ€™
[53.205s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.205s]       |   [01;36m[K^~~~~~~[m[K
[53.206s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.206s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.207s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.208s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[53.209s]  1570 |     case DID_GPS2_SAT:  [01;31m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[53.210s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[53.210s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.211s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.211s]       |   [01;36m[K^~~~~~~[m[K
[53.212s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.213s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[53.214s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[53.215s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[53.215s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.216s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.216s]       |   [01;36m[K^~~~~~~[m[K
[53.217s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.217s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.218s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.218s]       |   [01;36m[K^~~~~~~[m[K
[53.220s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.221s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[53.222s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[53.223s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[53.223s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.223s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.223s]       |   [01;36m[K^~~~~~~[m[K
[53.224s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.225s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.225s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.226s]       |   [01;36m[K^~~~~~~[m[K
[53.226s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.227s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.228s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.228s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.229s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.229s]       |   [01;36m[K^~~~~~~[m[K
[53.230s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.230s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.231s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.231s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >][m[K[m[Kâ€™
[53.232s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.233s]       |   [01;36m[K^~~~~~~[m[K
[53.233s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.234s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.234s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.235s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kmag_callback[m[K(eDataIDs, const magnetometer_t*)[m[Kâ€™:
[53.235s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::publish(sensor_msgs::msg::MagneticField&)[m[Kâ€™
[53.236s]  1588 |     [01;31m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[53.236s]       |     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[53.236s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.237s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.237s]       |   [01;36m[K^~~~~~~[m[K
[53.237s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.238s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >[m[Kâ€™
[53.238s]  1588 |     [01;36m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[53.239s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[53.251s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.252s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.252s]       |   [01;36m[K^~~~~~~[m[K
[53.252s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.253s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.253s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.253s]       |   [01;36m[K^~~~~~~[m[K
[53.254s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.256s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >[m[Kâ€™
[53.256s]  1588 |     [01;36m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[53.257s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[53.258s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.259s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.259s]       |   [01;36m[K^~~~~~~[m[K
[53.260s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.260s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.260s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.260s]       |   [01;36m[K^~~~~~~[m[K
[53.271s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.272s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.272s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.273s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.274s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.275s]       |   [01;36m[K^~~~~~~[m[K
[53.276s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.280s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.280s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.281s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::MagneticField_<std::allocator<void> >][m[K[m[Kâ€™
[53.281s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.281s]       |   [01;36m[K^~~~~~~[m[K
[53.282s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.284s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.285s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.285s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kpreint_IMU_callback[m[K(eDataIDs, const pimu_t*)[m[Kâ€™:
[53.285s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::PIMU&)[m[Kâ€™
[53.286s]  1623 |         [01;31m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[53.286s]       |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.287s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.288s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.289s]       |   [01;36m[K^~~~~~~[m[K
[53.289s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.289s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >[m[Kâ€™
[53.290s]  1623 |         [01;36m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[53.290s]       |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.291s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.292s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.292s]       |   [01;36m[K^~~~~~~[m[K
[53.293s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.294s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.294s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.295s]       |   [01;36m[K^~~~~~~[m[K
[53.295s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.296s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >[m[Kâ€™
[53.297s]  1623 |         [01;36m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[53.298s]       |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.298s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.298s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.299s]       |   [01;36m[K^~~~~~~[m[K
[53.299s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.300s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.301s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.302s]       |   [01;36m[K^~~~~~~[m[K
[53.302s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.302s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.302s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.303s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.303s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.304s]       |   [01;36m[K^~~~~~~[m[K
[53.305s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.307s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.307s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.309s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >][m[K[m[Kâ€™
[53.309s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.310s]       |   [01;36m[K^~~~~~~[m[K
[53.311s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.311s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.312s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.312s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >::publish(sensor_msgs::msg::Imu&)[m[Kâ€™
[53.312s]  1640 |             [01;31m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[53.314s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[53.316s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.316s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[53.316s]       |   [01;36m[K^~~~~~~[m[K
[53.317s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.317s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >[m[Kâ€™
[53.317s]  1640 |             [01;36m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[53.318s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[53.319s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.319s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[53.320s]       |   [01;36m[K^~~~~~~[m[K
[53.321s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.322s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.323s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[53.323s]       |   [01;36m[K^~~~~~~[m[K
[53.323s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.323s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >[m[Kâ€™
[53.324s]  1640 |             [01;36m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[53.324s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[53.325s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.325s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[53.325s]       |   [01;36m[K^~~~~~~[m[K
[53.326s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[53.326s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[53.326s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[53.326s]       |   [01;36m[K^~~~~~~[m[K
[53.327s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[53.327s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[53.327s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.327s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[53.328s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[53.328s]       |   [01;36m[K^~~~~~~[m[K
[53.328s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[53.329s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[53.329s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[53.329s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Imu_<std::allocator<void> >][m[K[m[Kâ€™
[53.329s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[53.330s]       |   [01;36m[K^~~~~~~[m[K
[53.330s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[53.330s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[53.330s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[53.331s] gmake[2]: *** [CMakeFiles/new_target.dir/build.make:104: CMakeFiles/new_target.dir/include/TopicHelper.cpp.o] Error 1
[53.331s] gmake[2]: *** Waiting for unfinished jobs....
[56.662s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42[m[K,
[56.663s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[56.663s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K:
[56.664s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>[m[Kâ€™:
[56.664s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[56.665s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[56.665s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.665s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.666s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.666s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.666s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[56.667s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[56.667s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[56.667s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[56.668s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[56.668s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37[m[K,
[56.668s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28[m[K:
[56.669s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[56.669s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.669s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.670s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.670s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.671s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[56.671s]   121 |       >::[01;31m[Kvalue[m[K)
[56.671s]       |          [01;31m[K^~~~~[m[K
[56.680s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[56.680s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.680s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.683s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K:
[56.684s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.684s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.685s]       |         [01;36m[K^~~~~~~[m[K
[56.685s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.687s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[56.689s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[56.689s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[56.690s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.691s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.692s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.693s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.694s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[56.696s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[56.696s]       |           [01;31m[K^~~~~~~~~~~[m[K
[56.697s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[56.697s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.698s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.698s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.698s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.699s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.701s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.701s]       |         [01;36m[K^~~~~~~[m[K
[56.702s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.703s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[56.703s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.704s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.704s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.704s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.707s]       |         [01;36m[K^~~~~~~[m[K
[56.710s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.711s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.711s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.712s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.712s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.712s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.713s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.713s]       |         [01;36m[K^~~~~~~[m[K
[56.714s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.715s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.715s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.715s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.715s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.716s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.716s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.716s]       |                                                 [01;36m[K^~~~~~~[m[K
[56.716s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.717s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.717s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.717s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.717s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.718s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.718s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.718s]       |                                           [01;36m[K^~~~~~~[m[K
[56.718s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.719s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[56.719s]   128 |       >::[01;31m[Kvalue[m[K)
[56.719s]       |          [01;31m[K^~~~~[m[K
[56.719s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[56.721s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.721s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.721s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.722s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.722s]       |         [01;36m[K^~~~~~~[m[K
[56.722s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.722s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[56.723s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[56.723s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[56.723s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.723s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.724s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.724s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.724s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[56.725s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[56.725s]       |           [01;31m[K^~~~~~~~~~~[m[K
[56.726s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[56.726s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.727s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.727s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.727s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.728s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.729s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.731s]       |         [01;36m[K^~~~~~~[m[K
[56.731s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.731s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[56.733s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.734s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.734s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.734s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.735s]       |         [01;36m[K^~~~~~~[m[K
[56.735s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.735s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.736s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.736s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.736s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.737s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.737s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.737s]       |         [01;36m[K^~~~~~~[m[K
[56.737s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.738s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.738s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.738s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.738s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.739s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.740s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.740s]       |                                                 [01;36m[K^~~~~~~[m[K
[56.740s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.740s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.741s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.741s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.741s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.741s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.742s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.742s]       |                                           [01;36m[K^~~~~~~[m[K
[56.743s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.744s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[56.744s]   135 |       >::[01;31m[Kvalue[m[K)
[56.744s]       |          [01;31m[K^~~~~[m[K
[56.745s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[56.745s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.745s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.745s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.746s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.746s]       |         [01;36m[K^~~~~~~[m[K
[56.746s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.747s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[56.747s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[56.747s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[56.748s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.749s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.749s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.750s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.750s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[56.750s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[56.751s]       |           [01;31m[K^~~~~~~~~~~[m[K
[56.751s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[56.751s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.752s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.753s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.753s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.753s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.754s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.754s]       |         [01;36m[K^~~~~~~[m[K
[56.754s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.755s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[56.755s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.756s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.756s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.756s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.756s]       |         [01;36m[K^~~~~~~[m[K
[56.757s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.757s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.757s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.757s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.759s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.759s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.759s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.760s]       |         [01;36m[K^~~~~~~[m[K
[56.760s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.760s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.761s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.761s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.762s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.762s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.762s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.763s]       |                                                 [01;36m[K^~~~~~~[m[K
[56.763s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.763s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.763s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.764s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.764s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.764s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.764s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.765s]       |                                           [01;36m[K^~~~~~~[m[K
[56.765s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.766s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[56.766s]   142 |       >::[01;31m[Kvalue[m[K)
[56.766s]       |          [01;31m[K^~~~~[m[K
[56.766s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[56.767s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.767s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.767s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.767s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.768s]       |         [01;36m[K^~~~~~~[m[K
[56.768s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.768s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[56.769s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[56.769s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[56.769s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.769s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.770s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.770s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.770s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[56.770s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[56.771s]       |           [01;31m[K^~~~~~~~~~~[m[K
[56.771s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[56.771s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.772s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.772s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.772s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.772s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.773s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.773s]       |         [01;36m[K^~~~~~~[m[K
[56.773s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.773s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[56.773s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.774s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.774s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.774s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.774s]       |         [01;36m[K^~~~~~~[m[K
[56.775s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.775s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.775s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.775s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.776s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.776s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.776s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.776s]       |         [01;36m[K^~~~~~~[m[K
[56.777s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.777s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.777s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.777s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.778s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.778s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.778s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.779s]       |                                                 [01;36m[K^~~~~~~[m[K
[56.779s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.779s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.779s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.780s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.780s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.780s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.781s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.781s]       |                                           [01;36m[K^~~~~~~[m[K
[56.781s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.781s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™)
[56.782s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[56.782s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[56.782s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.783s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[56.783s]       |         [01;36m[K^~~~~~~~[m[K
[56.783s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.783s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[56.784s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[56.784s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[56.784s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.785s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.785s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.785s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.785s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[56.786s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[56.786s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[56.786s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[56.787s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.787s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.787s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.787s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[56.788s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.788s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[56.788s]       |                [01;36m[K^~~~~~~~[m[K
[56.789s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[56.789s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[56.789s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[56.789s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.790s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[56.790s]       |                [01;36m[K^~~~~~~~[m[K
[56.790s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[56.790s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[56.790s]       |                          [01;36m[K^~~~~~~~~[m[K
[56.791s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>[m[Kâ€™:
[56.791s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[56.792s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[56.792s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.792s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.792s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.793s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.793s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[56.793s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[56.793s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[56.794s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[56.794s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[56.794s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[56.794s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.795s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.795s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.795s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.795s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[56.796s]   121 |       >::[01;31m[Kvalue[m[K)
[56.796s]       |          [01;31m[K^~~~~[m[K
[56.796s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[56.796s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.797s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.797s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.797s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.797s]       |         [01;36m[K^~~~~~~[m[K
[56.798s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.798s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[56.798s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[56.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[56.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.800s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.800s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.800s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[56.800s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[56.801s]       |           [01;31m[K^~~~~~~~~~~[m[K
[56.801s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[56.801s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.801s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.802s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.802s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.802s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.802s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.803s]       |         [01;36m[K^~~~~~~[m[K
[56.803s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.803s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[56.803s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.804s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.804s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.804s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.804s]       |         [01;36m[K^~~~~~~[m[K
[56.805s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.805s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.805s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.805s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.806s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.806s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.806s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.806s]       |         [01;36m[K^~~~~~~[m[K
[56.807s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.807s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.807s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.807s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.808s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.808s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.808s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.808s]       |                                                 [01;36m[K^~~~~~~[m[K
[56.809s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.809s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.809s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[56.810s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.810s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.810s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.810s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.811s]       |                                           [01;36m[K^~~~~~~[m[K
[56.811s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.811s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[56.811s]   128 |       >::[01;31m[Kvalue[m[K)
[56.812s]       |          [01;31m[K^~~~~[m[K
[56.812s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[56.813s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.813s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.813s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.814s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.814s]       |         [01;36m[K^~~~~~~[m[K
[56.814s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.814s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[56.815s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[56.815s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[56.815s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.816s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.816s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.816s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.816s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[56.817s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[56.817s]       |           [01;31m[K^~~~~~~~~~~[m[K
[56.817s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[56.818s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.818s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.818s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.818s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.819s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.819s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.819s]       |         [01;36m[K^~~~~~~[m[K
[56.819s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.820s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[56.820s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.820s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.820s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.821s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.821s]       |         [01;36m[K^~~~~~~[m[K
[56.821s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.821s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.822s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.822s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.822s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.823s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.823s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.823s]       |         [01;36m[K^~~~~~~[m[K
[56.823s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.824s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.824s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.824s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.824s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.825s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.825s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.825s]       |                                                 [01;36m[K^~~~~~~[m[K
[56.825s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.826s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.826s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[56.826s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.827s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[56.827s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.827s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.827s]       |                                           [01;36m[K^~~~~~~[m[K
[56.828s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.828s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[56.828s]   135 |       >::[01;31m[Kvalue[m[K)
[56.828s]       |          [01;31m[K^~~~~[m[K
[56.829s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[56.829s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.829s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.830s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.830s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.830s]       |         [01;36m[K^~~~~~~[m[K
[56.831s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.831s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[56.831s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[56.832s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[56.832s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.832s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.832s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.833s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.833s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[56.834s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[56.834s]       |           [01;31m[K^~~~~~~~~~~[m[K
[56.834s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[56.834s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.835s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.835s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.835s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.835s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.836s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.836s]       |         [01;36m[K^~~~~~~[m[K
[56.836s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.836s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[56.837s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.837s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.837s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.837s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.837s]       |         [01;36m[K^~~~~~~[m[K
[56.838s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.838s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.838s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.838s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.839s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.839s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.839s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.839s]       |         [01;36m[K^~~~~~~[m[K
[56.840s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.840s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.840s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.841s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.841s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.841s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.841s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.842s]       |                                                 [01;36m[K^~~~~~~[m[K
[56.842s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.842s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.842s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[56.843s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.843s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.843s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.844s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.844s]       |                                           [01;36m[K^~~~~~~[m[K
[56.844s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.844s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[56.845s]   142 |       >::[01;31m[Kvalue[m[K)
[56.845s]       |          [01;31m[K^~~~~[m[K
[56.845s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[56.845s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.846s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.846s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.846s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.847s]       |         [01;36m[K^~~~~~~[m[K
[56.847s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.847s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[56.848s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[56.848s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[56.848s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.849s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.849s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.849s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.850s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[56.850s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[56.851s]       |           [01;31m[K^~~~~~~~~~~[m[K
[56.851s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[56.851s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.852s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.852s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.852s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.853s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.853s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.853s]       |         [01;36m[K^~~~~~~[m[K
[56.854s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.854s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[56.854s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.854s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.855s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.855s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[56.855s]       |         [01;36m[K^~~~~~~[m[K
[56.855s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.856s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.856s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.856s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.857s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.857s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.857s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[56.857s]       |         [01;36m[K^~~~~~~[m[K
[56.858s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.858s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.858s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.859s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.859s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.859s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.859s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.860s]       |                                                 [01;36m[K^~~~~~~[m[K
[56.860s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.860s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.860s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[56.861s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[56.861s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[56.861s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[56.862s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[56.862s]       |                                           [01;36m[K^~~~~~~[m[K
[56.862s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.862s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™)
[56.863s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[56.863s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[56.864s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.864s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[56.864s]       |         [01;36m[K^~~~~~~~[m[K
[56.864s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[56.865s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[56.865s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[56.866s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[56.866s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.866s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.867s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.867s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.868s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[56.868s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[56.868s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[56.869s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[56.869s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.869s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[56.870s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[56.870s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[56.870s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.871s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[56.872s]       |                [01;36m[K^~~~~~~~[m[K
[56.872s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[56.873s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[56.874s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[56.875s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[56.875s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[56.875s]       |                [01;36m[K^~~~~~~~[m[K
[56.876s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[56.876s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[56.876s]       |                          [01;36m[K^~~~~~~~~[m[K
[57.115s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42[m[K,
[57.115s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[57.115s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K:
[57.116s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>[m[Kâ€™:
[57.116s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[57.117s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[57.118s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.118s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.118s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.119s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.119s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[57.119s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[57.120s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[57.120s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[57.120s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[57.121s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37[m[K,
[57.121s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28[m[K:
[57.121s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[57.122s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.122s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.122s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.123s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.123s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[57.123s]   121 |       >::[01;31m[Kvalue[m[K)
[57.124s]       |          [01;31m[K^~~~~[m[K
[57.124s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[57.125s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.127s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.127s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K:
[57.128s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.128s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.128s]       |         [01;36m[K^~~~~~~[m[K
[57.129s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.129s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[57.129s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[57.129s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[57.130s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.130s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.131s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.131s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.131s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[57.132s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[57.132s]       |           [01;31m[K^~~~~~~~~~~[m[K
[57.133s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[57.134s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.135s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.136s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.137s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.137s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.140s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.144s]       |         [01;36m[K^~~~~~~[m[K
[57.144s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.145s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[57.146s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.146s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.147s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.147s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.148s]       |         [01;36m[K^~~~~~~[m[K
[57.148s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.151s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.151s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.151s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.152s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.152s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.154s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.155s]       |         [01;36m[K^~~~~~~[m[K
[57.155s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.155s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.156s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.156s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.157s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.157s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.157s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.158s]       |                                                 [01;36m[K^~~~~~~[m[K
[57.159s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.160s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.160s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.160s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.161s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.161s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.161s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.162s]       |                                           [01;36m[K^~~~~~~[m[K
[57.162s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.162s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[57.163s]   128 |       >::[01;31m[Kvalue[m[K)
[57.163s]       |          [01;31m[K^~~~~[m[K
[57.164s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[57.164s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.164s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.165s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.165s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.165s]       |         [01;36m[K^~~~~~~[m[K
[57.166s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.166s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[57.167s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[57.167s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[57.167s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.168s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.168s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.168s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.168s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[57.169s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[57.169s]       |           [01;31m[K^~~~~~~~~~~[m[K
[57.169s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[57.170s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.172s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.172s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.173s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.173s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.173s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.174s]       |         [01;36m[K^~~~~~~[m[K
[57.174s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.174s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[57.174s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.175s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.175s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.175s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.176s]       |         [01;36m[K^~~~~~~[m[K
[57.176s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.176s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.177s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.177s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.177s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.178s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.178s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.178s]       |         [01;36m[K^~~~~~~[m[K
[57.178s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.179s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.181s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.182s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.182s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.182s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.183s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.183s]       |                                                 [01;36m[K^~~~~~~[m[K
[57.183s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.184s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.184s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.185s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.186s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.186s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.187s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.187s]       |                                           [01;36m[K^~~~~~~[m[K
[57.187s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.188s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[57.188s]   135 |       >::[01;31m[Kvalue[m[K)
[57.188s]       |          [01;31m[K^~~~~[m[K
[57.189s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[57.190s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.190s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.191s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.191s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.191s]       |         [01;36m[K^~~~~~~[m[K
[57.191s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.192s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[57.192s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[57.192s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[57.193s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.194s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.196s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.196s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.196s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[57.197s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[57.197s]       |           [01;31m[K^~~~~~~~~~~[m[K
[57.197s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[57.197s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.198s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.198s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.198s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.199s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.200s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.201s]       |         [01;36m[K^~~~~~~[m[K
[57.201s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.201s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[57.201s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.202s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.202s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.202s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.203s]       |         [01;36m[K^~~~~~~[m[K
[57.203s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.203s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.203s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.204s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.204s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.204s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.205s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.205s]       |         [01;36m[K^~~~~~~[m[K
[57.205s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.205s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.206s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.206s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.206s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.207s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.207s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.207s]       |                                                 [01;36m[K^~~~~~~[m[K
[57.207s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.208s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.208s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.208s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.208s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.209s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.209s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.209s]       |                                           [01;36m[K^~~~~~~[m[K
[57.210s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.210s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[57.210s]   142 |       >::[01;31m[Kvalue[m[K)
[57.210s]       |          [01;31m[K^~~~~[m[K
[57.211s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[57.211s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.211s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.211s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.212s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.212s]       |         [01;36m[K^~~~~~~[m[K
[57.213s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.213s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[57.213s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[57.213s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[57.214s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.214s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.214s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.215s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.215s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[57.215s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[57.215s]       |           [01;31m[K^~~~~~~~~~~[m[K
[57.216s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[57.216s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.216s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.216s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.217s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.217s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.217s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.217s]       |         [01;36m[K^~~~~~~[m[K
[57.218s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.218s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[57.218s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.218s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.219s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.219s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.219s]       |         [01;36m[K^~~~~~~[m[K
[57.220s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.220s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.220s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.221s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.221s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.221s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.222s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.222s]       |         [01;36m[K^~~~~~~[m[K
[57.222s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.223s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.223s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.223s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.223s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.224s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.224s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.224s]       |                                                 [01;36m[K^~~~~~~[m[K
[57.225s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.225s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.225s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.225s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.226s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.226s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.226s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.226s]       |                                           [01;36m[K^~~~~~~[m[K
[57.227s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.227s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™)
[57.227s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[57.228s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[57.228s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.228s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[57.228s]       |         [01;36m[K^~~~~~~~[m[K
[57.229s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.229s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[57.230s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[57.230s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[57.230s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.230s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.231s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.231s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.231s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[57.232s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[57.232s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[57.233s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[57.233s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.233s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.234s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.234s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[57.234s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.234s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[57.235s]       |                [01;36m[K^~~~~~~~[m[K
[57.235s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[57.235s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[57.235s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[57.237s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.237s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[57.238s]       |                [01;36m[K^~~~~~~~[m[K
[57.238s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[57.238s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[57.238s]       |                          [01;36m[K^~~~~~~~~[m[K
[57.239s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>[m[Kâ€™:
[57.239s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[57.239s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[57.239s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.240s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.242s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.242s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.243s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[57.243s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[57.243s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[57.243s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[57.244s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[57.244s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[57.244s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.244s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.245s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.245s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.245s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[57.246s]   121 |       >::[01;31m[Kvalue[m[K)
[57.246s]       |          [01;31m[K^~~~~[m[K
[57.246s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[57.246s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.247s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.247s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.247s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.247s]       |         [01;36m[K^~~~~~~[m[K
[57.248s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.248s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[57.249s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[57.249s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[57.250s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.250s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.251s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.252s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.252s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[57.253s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[57.254s]       |           [01;31m[K^~~~~~~~~~~[m[K
[57.254s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[57.254s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.255s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.255s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.255s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.256s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.256s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.256s]       |         [01;36m[K^~~~~~~[m[K
[57.257s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.257s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[57.257s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.258s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.258s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.258s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.259s]       |         [01;36m[K^~~~~~~[m[K
[57.259s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.259s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.260s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.260s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.260s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.261s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.261s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.261s]       |         [01;36m[K^~~~~~~[m[K
[57.262s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.262s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.262s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.263s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.263s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.263s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.264s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.265s]       |                                                 [01;36m[K^~~~~~~[m[K
[57.265s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.265s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.266s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[57.266s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.266s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.266s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.267s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.267s]       |                                           [01;36m[K^~~~~~~[m[K
[57.267s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.268s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[57.268s]   128 |       >::[01;31m[Kvalue[m[K)
[57.268s]       |          [01;31m[K^~~~~[m[K
[57.268s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[57.269s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.269s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.269s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.269s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.270s]       |         [01;36m[K^~~~~~~[m[K
[57.270s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.270s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[57.270s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[57.271s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[57.271s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.271s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.271s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.272s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.272s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[57.272s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[57.272s]       |           [01;31m[K^~~~~~~~~~~[m[K
[57.273s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[57.273s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.273s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.273s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.274s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.274s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.274s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.274s]       |         [01;36m[K^~~~~~~[m[K
[57.275s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.275s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[57.275s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.275s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.276s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.276s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.276s]       |         [01;36m[K^~~~~~~[m[K
[57.276s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.277s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.277s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.277s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.277s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.278s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.278s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.278s]       |         [01;36m[K^~~~~~~[m[K
[57.278s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.279s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.279s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.279s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.280s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.280s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.280s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.280s]       |                                                 [01;36m[K^~~~~~~[m[K
[57.281s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.281s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.281s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[57.281s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.282s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[57.282s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.282s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.282s]       |                                           [01;36m[K^~~~~~~[m[K
[57.283s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.283s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[57.283s]   135 |       >::[01;31m[Kvalue[m[K)
[57.283s]       |          [01;31m[K^~~~~[m[K
[57.284s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[57.284s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.284s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.284s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.285s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.285s]       |         [01;36m[K^~~~~~~[m[K
[57.285s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.285s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[57.286s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[57.286s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[57.286s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.286s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.287s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.287s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.287s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[57.287s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[57.288s]       |           [01;31m[K^~~~~~~~~~~[m[K
[57.288s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[57.288s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.288s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.289s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.289s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.289s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.289s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.290s]       |         [01;36m[K^~~~~~~[m[K
[57.291s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.291s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[57.291s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.292s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.292s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.292s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.292s]       |         [01;36m[K^~~~~~~[m[K
[57.293s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.293s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.294s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.294s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.294s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.294s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.295s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.295s]       |         [01;36m[K^~~~~~~[m[K
[57.295s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.295s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.296s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.296s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.296s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.296s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.297s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.297s]       |                                                 [01;36m[K^~~~~~~[m[K
[57.297s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.297s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.298s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[57.298s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.298s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.298s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.299s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.299s]       |                                           [01;36m[K^~~~~~~[m[K
[57.299s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.299s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[57.300s]   142 |       >::[01;31m[Kvalue[m[K)
[57.300s]       |          [01;31m[K^~~~~[m[K
[57.300s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[57.300s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.301s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.301s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.301s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.301s]       |         [01;36m[K^~~~~~~[m[K
[57.302s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.302s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[57.302s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[57.302s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[57.303s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.303s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.303s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.303s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.304s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[57.304s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[57.304s]       |           [01;31m[K^~~~~~~~~~~[m[K
[57.304s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[57.305s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.305s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.305s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.305s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.306s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.306s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.306s]       |         [01;36m[K^~~~~~~[m[K
[57.306s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.307s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[57.307s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.307s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.307s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.308s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[57.308s]       |         [01;36m[K^~~~~~~[m[K
[57.308s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.308s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.309s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.309s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.309s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.309s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.310s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[57.310s]       |         [01;36m[K^~~~~~~[m[K
[57.310s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.310s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.311s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.311s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.311s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.312s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.312s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.313s]       |                                                 [01;36m[K^~~~~~~[m[K
[57.313s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.313s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.314s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[57.314s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[57.315s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[57.315s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[57.316s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[57.316s]       |                                           [01;36m[K^~~~~~~[m[K
[57.316s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.317s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™)
[57.317s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[57.317s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[57.318s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.318s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[57.318s]       |         [01;36m[K^~~~~~~~[m[K
[57.319s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[57.319s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[57.320s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[57.320s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[57.320s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.321s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.321s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.321s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.322s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[57.322s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[57.322s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[57.323s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[57.323s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.323s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[57.324s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[57.324s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[57.324s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.325s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[57.325s]       |                [01;36m[K^~~~~~~~[m[K
[57.326s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[57.326s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[57.326s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[57.326s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[57.327s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[57.327s]       |                [01;36m[K^~~~~~~~[m[K
[57.327s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[57.328s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[57.328s]       |                          [01;36m[K^~~~~~~~~[m[K
[69.088s] gmake[2]: *** [CMakeFiles/new_target.dir/build.make:90: CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o] Error 1
[69.285s] gmake[2]: *** [CMakeFiles/new_target.dir/build.make:76: CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o] Error 1
[69.286s] gmake[1]: *** [CMakeFiles/Makefile2:623: CMakeFiles/new_target.dir/all] Error 2
[69.287s] gmake: *** [Makefile:146: all] Error 2
[69.292s] Invoked command in '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/jazzy DEBUGINFOD_URLS=https://debuginfod.ubuntu.com /usr/bin/cmake --build /home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2 -- -j6 -l6
