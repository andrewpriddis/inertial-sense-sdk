[0.000000] (-) TimerEvent: {}
[0.000244] (inertial_sense_ros2) JobQueued: {'identifier': 'inertial_sense_ros2', 'dependencies': OrderedDict()}
[0.002070] (inertial_sense_ros2) JobStarted: {'identifier': 'inertial_sense_ros2'}
[0.033731] (inertial_sense_ros2) JobProgress: {'identifier': 'inertial_sense_ros2', 'progress': 'cmake'}
[0.036326] (inertial_sense_ros2) JobProgress: {'identifier': 'inertial_sense_ros2', 'progress': 'build'}
[0.038622] (inertial_sense_ros2) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2', '--', '-j6', '-l6'], 'cwd': '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 's', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/s', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'DBUS_STARTER_BUS_TYPE': 'session', 'SYSTEMD_EXEC_PID': '2214', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus,guid=f924f768626b8f5ddd4065286697eb5b', 'COLORTERM': 'truecolor', '_colcon_cd_root': '/opt/ros/jazzy/', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 's', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/app.slice/app-gnome\\x2dsession\\x2dmanager.slice/gnome-session-manager@ubuntu.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 's', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/s-VMware-Virtual-Platform:@/tmp/.ICE-unix/2214,unix/s-VMware-Virtual-Platform:/tmp/.ICE-unix/2214', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/ee79ed63_56cc_414c_b474_a4da542e6115', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.MAC8Q2', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'GNOME_TERMINAL_SERVICE': ':1.120', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '0', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'DBUS_STARTER_ADDRESS': 'unix:path=/run/user/1000/bus,guid=f924f768626b8f5ddd4065286697eb5b', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.099226] (-) TimerEvent: {}
[0.199724] (-) TimerEvent: {}
[0.266029] (inertial_sense_ros2) StdoutLine: {'line': b'[  1%] Built target inertial_sense_ros2__rosidl_generator_type_description\n'}
[0.300039] (-) TimerEvent: {}
[0.314666] (inertial_sense_ros2) StdoutLine: {'line': b'[  1%] Built target ament_cmake_python_copy_inertial_sense_ros2\n'}
[0.365722] (inertial_sense_ros2) StdoutLine: {'line': b'[  1%] Built target inertial_sense_ros2__cpp\n'}
[0.395973] (inertial_sense_ros2) StdoutLine: {'line': b'[  2%] Building CXX object CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o\n'}
[0.396516] (inertial_sense_ros2) StdoutLine: {'line': b'[  2%] Building CXX object CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o\n'}
[0.400232] (-) TimerEvent: {}
[0.405494] (inertial_sense_ros2) StdoutLine: {'line': b'[ 28%] Built target inertial_sense_ros2__rosidl_generator_c\n'}
[0.503223] (-) TimerEvent: {}
[0.574712] (inertial_sense_ros2) StdoutLine: {'line': b'[ 38%] Built target inertial_sense_ros2__rosidl_typesupport_cpp\n'}
[0.593936] (inertial_sense_ros2) StdoutLine: {'line': b'[ 47%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_cpp\n'}
[0.606242] (-) TimerEvent: {}
[0.629055] (inertial_sense_ros2) StdoutLine: {'line': b'[ 57%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_c\n'}
[0.706390] (-) TimerEvent: {}
[0.720522] (inertial_sense_ros2) StdoutLine: {'line': b'[ 67%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_c\n'}
[0.733533] (inertial_sense_ros2) StdoutLine: {'line': b'[ 76%] Built target inertial_sense_ros2__rosidl_typesupport_c\n'}
[0.771073] (inertial_sense_ros2) StdoutLine: {'line': b'[ 85%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_cpp\n'}
[0.806625] (-) TimerEvent: {}
[0.863134] (inertial_sense_ros2) StdoutLine: {'line': b'[ 85%] Built target inertial_sense_ros2\n'}
[0.906869] (-) TimerEvent: {}
[0.961351] (inertial_sense_ros2) StdoutLine: {'line': b'[ 86%] Built target inertial_sense_ros2__py\n'}
[1.007132] (-) TimerEvent: {}
[1.082848] (inertial_sense_ros2) StdoutLine: {'line': b'[ 95%] Built target inertial_sense_ros2__rosidl_generator_py\n'}
[1.090421] (inertial_sense_ros2) StdoutLine: {'line': b'running egg_info\n'}
[1.107314] (-) TimerEvent: {}
[1.162370] (inertial_sense_ros2) StdoutLine: {'line': b'writing inertial_sense_ros2.egg-info/PKG-INFO\n'}
[1.164494] (inertial_sense_ros2) StdoutLine: {'line': b'writing dependency_links to inertial_sense_ros2.egg-info/dependency_links.txt\n'}
[1.166466] (inertial_sense_ros2) StdoutLine: {'line': b'writing top-level names to inertial_sense_ros2.egg-info/top_level.txt\n'}
[1.175175] (inertial_sense_ros2) StdoutLine: {'line': b'[ 96%] Built target inertial_sense_ros2_s__rosidl_typesupport_c\n'}
[1.183412] (inertial_sense_ros2) StdoutLine: {'line': b'[ 97%] Built target inertial_sense_ros2_s__rosidl_typesupport_fastrtps_c\n'}
[1.189475] (inertial_sense_ros2) StdoutLine: {'line': b'[ 98%] Built target inertial_sense_ros2_s__rosidl_typesupport_introspection_c\n'}
[1.207506] (-) TimerEvent: {}
[1.307876] (-) TimerEvent: {}
[1.363601] (inertial_sense_ros2) StdoutLine: {'line': b"reading manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'\n"}
[1.366254] (inertial_sense_ros2) StdoutLine: {'line': b"writing manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'\n"}
[1.408204] (-) TimerEvent: {}
[1.447581] (inertial_sense_ros2) StdoutLine: {'line': b'[ 98%] Built target ament_cmake_python_build_inertial_sense_ros2_egg\n'}
[1.508334] (-) TimerEvent: {}
[1.608863] (-) TimerEvent: {}
[1.710211] (-) TimerEvent: {}
[1.810864] (-) TimerEvent: {}
[1.911357] (-) TimerEvent: {}
[2.012203] (-) TimerEvent: {}
[2.112666] (-) TimerEvent: {}
[2.213209] (-) TimerEvent: {}
[2.313739] (-) TimerEvent: {}
[2.414256] (-) TimerEvent: {}
[2.514721] (-) TimerEvent: {}
[2.615238] (-) TimerEvent: {}
[2.715784] (-) TimerEvent: {}
[2.816284] (-) TimerEvent: {}
[2.916797] (-) TimerEvent: {}
[3.017504] (-) TimerEvent: {}
[3.117960] (-) TimerEvent: {}
[3.218457] (-) TimerEvent: {}
[3.319053] (-) TimerEvent: {}
[3.419544] (-) TimerEvent: {}
[3.520001] (-) TimerEvent: {}
[3.620619] (-) TimerEvent: {}
[3.721235] (-) TimerEvent: {}
[3.821806] (-) TimerEvent: {}
[3.922355] (-) TimerEvent: {}
[4.022960] (-) TimerEvent: {}
[4.123481] (-) TimerEvent: {}
[4.224179] (-) TimerEvent: {}
[4.324680] (-) TimerEvent: {}
[4.425219] (-) TimerEvent: {}
[4.525694] (-) TimerEvent: {}
[4.626227] (-) TimerEvent: {}
[4.726757] (-) TimerEvent: {}
[4.827166] (-) TimerEvent: {}
[4.927775] (-) TimerEvent: {}
[5.028307] (-) TimerEvent: {}
[5.128813] (-) TimerEvent: {}
[5.229317] (-) TimerEvent: {}
[5.329821] (-) TimerEvent: {}
[5.430320] (-) TimerEvent: {}
[5.530780] (-) TimerEvent: {}
[5.637240] (-) TimerEvent: {}
[5.737582] (-) TimerEvent: {}
[5.837940] (-) TimerEvent: {}
[5.938371] (-) TimerEvent: {}
[6.038752] (-) TimerEvent: {}
[6.139344] (-) TimerEvent: {}
[6.239893] (-) TimerEvent: {}
[6.341168] (-) TimerEvent: {}
[6.441698] (-) TimerEvent: {}
[6.542291] (-) TimerEvent: {}
[6.644971] (-) TimerEvent: {}
[6.749911] (-) TimerEvent: {}
[6.850248] (-) TimerEvent: {}
[6.950624] (-) TimerEvent: {}
[7.052258] (-) TimerEvent: {}
[7.154249] (-) TimerEvent: {}
[7.254708] (-) TimerEvent: {}
[7.355198] (-) TimerEvent: {}
[7.455642] (-) TimerEvent: {}
[7.556099] (-) TimerEvent: {}
[7.656623] (-) TimerEvent: {}
[7.757212] (-) TimerEvent: {}
[7.857714] (-) TimerEvent: {}
[7.958196] (-) TimerEvent: {}
[8.060295] (-) TimerEvent: {}
[8.160779] (-) TimerEvent: {}
[8.261322] (-) TimerEvent: {}
[8.361783] (-) TimerEvent: {}
[8.462266] (-) TimerEvent: {}
[8.562785] (-) TimerEvent: {}
[8.663375] (-) TimerEvent: {}
[8.763917] (-) TimerEvent: {}
[8.867844] (-) TimerEvent: {}
[8.968356] (-) TimerEvent: {}
[9.068868] (-) TimerEvent: {}
[9.169312] (-) TimerEvent: {}
[9.270006] (-) TimerEvent: {}
[9.370688] (-) TimerEvent: {}
[9.471307] (-) TimerEvent: {}
[9.571780] (-) TimerEvent: {}
[9.672313] (-) TimerEvent: {}
[9.772794] (-) TimerEvent: {}
[9.873448] (-) TimerEvent: {}
[9.974020] (-) TimerEvent: {}
[10.076294] (-) TimerEvent: {}
[10.176847] (-) TimerEvent: {}
[10.277494] (-) TimerEvent: {}
[10.379243] (-) TimerEvent: {}
[10.479813] (-) TimerEvent: {}
[10.580400] (-) TimerEvent: {}
[10.680980] (-) TimerEvent: {}
[10.781585] (-) TimerEvent: {}
[10.882202] (-) TimerEvent: {}
[10.982706] (-) TimerEvent: {}
[11.083477] (-) TimerEvent: {}
[11.184261] (-) TimerEvent: {}
[11.284819] (-) TimerEvent: {}
[11.385490] (-) TimerEvent: {}
[11.485990] (-) TimerEvent: {}
[11.586559] (-) TimerEvent: {}
[11.687054] (-) TimerEvent: {}
[11.787682] (-) TimerEvent: {}
[11.888252] (-) TimerEvent: {}
[11.988788] (-) TimerEvent: {}
[12.089313] (-) TimerEvent: {}
[12.189849] (-) TimerEvent: {}
[12.290440] (-) TimerEvent: {}
[12.390913] (-) TimerEvent: {}
[12.491561] (-) TimerEvent: {}
[12.592194] (-) TimerEvent: {}
[12.692698] (-) TimerEvent: {}
[12.793270] (-) TimerEvent: {}
[12.893808] (-) TimerEvent: {}
[12.994362] (-) TimerEvent: {}
[13.094936] (-) TimerEvent: {}
[13.195429] (-) TimerEvent: {}
[13.295952] (-) TimerEvent: {}
[13.396574] (-) TimerEvent: {}
[13.497283] (-) TimerEvent: {}
[13.597699] (-) TimerEvent: {}
[13.698248] (-) TimerEvent: {}
[13.798662] (-) TimerEvent: {}
[13.899228] (-) TimerEvent: {}
[13.999787] (-) TimerEvent: {}
[14.100575] (-) TimerEvent: {}
[14.201237] (-) TimerEvent: {}
[14.301860] (-) TimerEvent: {}
[14.402424] (-) TimerEvent: {}
[14.503049] (-) TimerEvent: {}
[14.603716] (-) TimerEvent: {}
[14.704234] (-) TimerEvent: {}
[14.804704] (-) TimerEvent: {}
[14.905237] (-) TimerEvent: {}
[15.005906] (-) TimerEvent: {}
[15.106457] (-) TimerEvent: {}
[15.206951] (-) TimerEvent: {}
[15.307531] (-) TimerEvent: {}
[15.408032] (-) TimerEvent: {}
[15.508659] (-) TimerEvent: {}
[15.609294] (-) TimerEvent: {}
[15.687807] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:2102:6: error: no declaration matches \xe2\x80\x98bool InertialSenseROS::set_refLLA_to_value(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >::SharedPtr&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >::SharedPtr&)\xe2\x80\x99\n'}
[15.688509] (inertial_sense_ros2) StderrLine: {'line': b' 2102 | bool InertialSenseROS::set_refLLA_to_value(inertial_sense_ros2::srv::RefLLAUpdate::Request::SharedPtr &req, inertial_sense_ros2::srv::RefLLAUpdate::Response::SharedPtr &res)\n'}
[15.688862] (inertial_sense_ros2) StderrLine: {'line': b'      |      ^~~~~~~~~~~~~~~~\n'}
[15.689197] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:19:\n'}
[15.689524] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:278:10: note: candidate is: \xe2\x80\x98bool InertialSenseROS::set_refLLA_to_value(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >::SharedPtr&, inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >::SharedPtr&)\xe2\x80\x99\n'}
[15.689810] (inertial_sense_ros2) StderrLine: {'line': b'  278 |     bool set_refLLA_to_value(inertial_sense_ros2::srv::RefLLAUpdate::Request::SharedPtr &req, inertial_sense_ros2::srv::RefLLAUpdate::Request::SharedPtr &res);\n'}
[15.690068] (inertial_sense_ros2) StderrLine: {'line': b'      |          ^~~~~~~~~~~~~~~~~~~\n'}
[15.690385] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:93:7: note: \xe2\x80\x98class InertialSenseROS\xe2\x80\x99 defined here\n'}
[15.690657] (inertial_sense_ros2) StderrLine: {'line': b'   93 | class InertialSenseROS //: SerialListener\n'}
[15.691180] (inertial_sense_ros2) StderrLine: {'line': b'      |       ^~~~~~~~~~~~~~~~\n'}
[15.709557] (-) TimerEvent: {}
[15.809945] (-) TimerEvent: {}
[15.910475] (-) TimerEvent: {}
[16.010962] (-) TimerEvent: {}
[16.111491] (-) TimerEvent: {}
[16.212152] (-) TimerEvent: {}
[16.312734] (-) TimerEvent: {}
[16.413245] (-) TimerEvent: {}
[16.513774] (-) TimerEvent: {}
[16.549326] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:20:\n'}
[16.549932] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:2102:6: error: no declaration matches \xe2\x80\x98bool InertialSenseROS::set_refLLA_to_value(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >::SharedPtr&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >::SharedPtr&)\xe2\x80\x99\n'}
[16.550367] (inertial_sense_ros2) StderrLine: {'line': b' 2102 | bool InertialSenseROS::set_refLLA_to_value(inertial_sense_ros2::srv::RefLLAUpdate::Request::SharedPtr &req, inertial_sense_ros2::srv::RefLLAUpdate::Response::SharedPtr &res)\n'}
[16.550778] (inertial_sense_ros2) StderrLine: {'line': b'      |      ^~~~~~~~~~~~~~~~\n'}
[16.551994] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:19:\n'}
[16.552698] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:278:10: note: candidate is: \xe2\x80\x98bool InertialSenseROS::set_refLLA_to_value(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >::SharedPtr&, inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >::SharedPtr&)\xe2\x80\x99\n'}
[16.553273] (inertial_sense_ros2) StderrLine: {'line': b'  278 |     bool set_refLLA_to_value(inertial_sense_ros2::srv::RefLLAUpdate::Request::SharedPtr &req, inertial_sense_ros2::srv::RefLLAUpdate::Request::SharedPtr &res);\n'}
[16.553728] (inertial_sense_ros2) StderrLine: {'line': b'      |          ^~~~~~~~~~~~~~~~~~~\n'}
[16.553999] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:93:7: note: \xe2\x80\x98class InertialSenseROS\xe2\x80\x99 defined here\n'}
[16.554385] (inertial_sense_ros2) StderrLine: {'line': b'   93 | class InertialSenseROS //: SerialListener\n'}
[16.554752] (inertial_sense_ros2) StderrLine: {'line': b'      |       ^~~~~~~~~~~~~~~~\n'}
[16.614161] (-) TimerEvent: {}
[16.714574] (-) TimerEvent: {}
[16.815399] (-) TimerEvent: {}
[16.916011] (-) TimerEvent: {}
[17.016808] (-) TimerEvent: {}
[17.117312] (-) TimerEvent: {}
[17.217762] (-) TimerEvent: {}
[17.318314] (-) TimerEvent: {}
[17.418787] (-) TimerEvent: {}
[17.519251] (-) TimerEvent: {}
[17.619709] (-) TimerEvent: {}
[17.720224] (-) TimerEvent: {}
[17.820720] (-) TimerEvent: {}
[17.921238] (-) TimerEvent: {}
[18.021816] (-) TimerEvent: {}
[18.122297] (-) TimerEvent: {}
[18.222742] (-) TimerEvent: {}
[18.323250] (-) TimerEvent: {}
[18.423717] (-) TimerEvent: {}
[18.524311] (-) TimerEvent: {}
[18.624830] (-) TimerEvent: {}
[18.725333] (-) TimerEvent: {}
[18.825871] (-) TimerEvent: {}
[18.926405] (-) TimerEvent: {}
[19.026877] (-) TimerEvent: {}
[19.127322] (-) TimerEvent: {}
[19.227884] (-) TimerEvent: {}
[19.328521] (-) TimerEvent: {}
[19.428995] (-) TimerEvent: {}
[19.529536] (-) TimerEvent: {}
[19.630367] (-) TimerEvent: {}
[19.730917] (-) TimerEvent: {}
[19.831461] (-) TimerEvent: {}
[19.932031] (-) TimerEvent: {}
[20.032633] (-) TimerEvent: {}
[20.133242] (-) TimerEvent: {}
[20.233713] (-) TimerEvent: {}
[20.334244] (-) TimerEvent: {}
[20.434834] (-) TimerEvent: {}
[20.535380] (-) TimerEvent: {}
[20.635911] (-) TimerEvent: {}
[20.736581] (-) TimerEvent: {}
[20.837238] (-) TimerEvent: {}
[20.938153] (-) TimerEvent: {}
[21.038848] (-) TimerEvent: {}
[21.141318] (-) TimerEvent: {}
[21.244565] (-) TimerEvent: {}
[21.345053] (-) TimerEvent: {}
[21.445792] (-) TimerEvent: {}
[21.546319] (-) TimerEvent: {}
[21.583723] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37,\n'}
[21.584657] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28,\n'}
[21.585322] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20,\n'}
[21.585690] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25,\n'}
[21.586003] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18,\n'}
[21.586350] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22,\n'}
[21.586650] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38,\n'}
[21.586967] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,\n'}
[21.587351] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21,\n'}
[21.588699] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172,\n'}
[21.589061] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25,\n'}
[21.589413] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29:\n'}
[21.590061] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99:\n'}
[21.592027] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.592574] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.592943] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[21.593351] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[21.593680] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17: error: no match for \xe2\x80\x98operator=\xe2\x80\x99 (operand types are \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\xe2\x80\x99 and \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>\xe2\x80\x99)\n'}
[21.594020] (inertial_sense_ros2) StderrLine: {'line': b'  103 |       callback_ = std::forward<CallbackT>(callback);\n'}
[21.594355] (inertial_sense_ros2) StderrLine: {'line': b'      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'}
[21.594734] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29,\n'}
[21.595212] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24:\n'}
[21.595588] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note: candidate: \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[21.595918] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         operator=(_Tp&& __rhs)\n'}
[21.596237] (inertial_sense_ros2) StderrLine: {'line': b'      |         ^~~~~~~~\n'}
[21.596517] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:\n'}
[21.596772] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99:\n'}
[21.597244] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1490:14:   required by substitution of \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>]\xe2\x80\x99\n'}
[21.597890] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:   required from \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99\n'}
[21.598329] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.598663] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.599032] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[21.599689] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[21.599988] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1407:15: error: no type named \xe2\x80\x98type\xe2\x80\x99 in \xe2\x80\x98struct std::enable_if<false, void>\xe2\x80\x99\n'}
[21.600319] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;\n'}
[21.600599] (inertial_sense_ros2) StderrLine: {'line': b'      |               ^~~~~~~~~~~~~~~\n'}
[21.600854] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99:\n'}
[21.601190] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.601472] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.601795] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[21.602083] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[21.602575] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[21.602868] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[21.603215] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[21.603509] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>\xe2\x80\x99 to \xe2\x80\x98const std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&\xe2\x80\x99\n'}
[21.603799] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[21.604055] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~~~~~~\n'}
[21.604665] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[21.605010] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[21.605451] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[21.605946] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>\xe2\x80\x99 to \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&\xe2\x80\x99\n'}
[21.606643] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[21.607178] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~\n'}
[21.646473] (-) TimerEvent: {}
[21.655082] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99:\n'}
[21.655794] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.656164] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.656530] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[21.656880] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[21.657216] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17: error: no match for \xe2\x80\x98operator=\xe2\x80\x99 (operand types are \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\xe2\x80\x99 and \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99)\n'}
[21.657548] (inertial_sense_ros2) StderrLine: {'line': b'  103 |       callback_ = std::forward<CallbackT>(callback);\n'}
[21.657861] (inertial_sense_ros2) StderrLine: {'line': b'      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'}
[21.658163] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note: candidate: \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[21.658542] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         operator=(_Tp&& __rhs)\n'}
[21.658816] (inertial_sense_ros2) StderrLine: {'line': b'      |         ^~~~~~~~\n'}
[21.659138] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:\n'}
[21.659442] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99:\n'}
[21.659728] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1490:14:   required by substitution of \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>]\xe2\x80\x99\n'}
[21.660190] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:   required from \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99\n'}
[21.660494] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.660773] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.661056] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[21.661397] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[21.661673] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1407:15: error: no type named \xe2\x80\x98type\xe2\x80\x99 in \xe2\x80\x98struct std::enable_if<false, void>\xe2\x80\x99\n'}
[21.661933] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;\n'}
[21.662368] (inertial_sense_ros2) StderrLine: {'line': b'      |               ^~~~~~~~~~~~~~~\n'}
[21.662661] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99:\n'}
[21.662928] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.663293] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[21.663574] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[21.663869] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[21.664167] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[21.664492] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[21.664749] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[21.664998] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99 to \xe2\x80\x98const std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&\xe2\x80\x99\n'}
[21.665388] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[21.665657] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~~~~~~\n'}
[21.665913] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[21.666234] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[21.666513] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[21.666769] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99 to \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&\xe2\x80\x99\n'}
[21.667087] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[21.667472] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~\n'}
[21.746795] (-) TimerEvent: {}
[21.847266] (-) TimerEvent: {}
[21.947950] (-) TimerEvent: {}
[22.048561] (-) TimerEvent: {}
[22.149222] (-) TimerEvent: {}
[22.249738] (-) TimerEvent: {}
[22.349387] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37,\n'}
[22.351583] (-) TimerEvent: {}
[22.351656] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28,\n'}
[22.351951] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20,\n'}
[22.352668] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25,\n'}
[22.353005] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18,\n'}
[22.353343] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22,\n'}
[22.353609] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38,\n'}
[22.353876] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,\n'}
[22.354189] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21,\n'}
[22.354589] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172,\n'}
[22.354960] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25,\n'}
[22.355308] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29:\n'}
[22.355592] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99:\n'}
[22.355868] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.356233] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.356561] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[22.357238] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[22.357566] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17: error: no match for \xe2\x80\x98operator=\xe2\x80\x99 (operand types are \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\xe2\x80\x99 and \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>\xe2\x80\x99)\n'}
[22.357885] (inertial_sense_ros2) StderrLine: {'line': b'  103 |       callback_ = std::forward<CallbackT>(callback);\n'}
[22.358196] (inertial_sense_ros2) StderrLine: {'line': b'      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'}
[22.358503] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29,\n'}
[22.358763] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24:\n'}
[22.359011] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note: candidate: \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[22.359397] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         operator=(_Tp&& __rhs)\n'}
[22.359689] (inertial_sense_ros2) StderrLine: {'line': b'      |         ^~~~~~~~\n'}
[22.360000] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:\n'}
[22.360330] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99:\n'}
[22.360631] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1490:14:   required by substitution of \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>]\xe2\x80\x99\n'}
[22.361071] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:   required from \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99\n'}
[22.361491] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.362174] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.362752] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[22.363130] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[22.363436] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1407:15: error: no type named \xe2\x80\x98type\xe2\x80\x99 in \xe2\x80\x98struct std::enable_if<false, void>\xe2\x80\x99\n'}
[22.363705] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;\n'}
[22.363960] (inertial_sense_ros2) StderrLine: {'line': b'      |               ^~~~~~~~~~~~~~~\n'}
[22.364379] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99:\n'}
[22.364914] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.365442] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.365743] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[22.366013] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[22.366315] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[22.366576] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[22.366823] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[22.367082] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>\xe2\x80\x99 to \xe2\x80\x98const std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&\xe2\x80\x99\n'}
[22.367648] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[22.367912] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~~~~~~\n'}
[22.368205] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[22.368496] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[22.368734] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[22.368979] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&)>\xe2\x80\x99 to \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&\xe2\x80\x99\n'}
[22.369364] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[22.369788] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~\n'}
[22.391812] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99:\n'}
[22.393863] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.394379] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.394716] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[22.395042] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[22.395398] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17: error: no match for \xe2\x80\x98operator=\xe2\x80\x99 (operand types are \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\xe2\x80\x99 and \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99)\n'}
[22.395713] (inertial_sense_ros2) StderrLine: {'line': b'  103 |       callback_ = std::forward<CallbackT>(callback);\n'}
[22.396160] (inertial_sense_ros2) StderrLine: {'line': b'      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'}
[22.396492] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note: candidate: \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[22.396808] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         operator=(_Tp&& __rhs)\n'}
[22.397077] (inertial_sense_ros2) StderrLine: {'line': b'      |         ^~~~~~~~\n'}
[22.397415] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:\n'}
[22.397742] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99:\n'}
[22.398333] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1490:14:   required by substitution of \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>]\xe2\x80\x99\n'}
[22.398806] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:   required from \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99\n'}
[22.399063] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.399384] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.399669] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[22.399931] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[22.400299] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1407:15: error: no type named \xe2\x80\x98type\xe2\x80\x99 in \xe2\x80\x98struct std::enable_if<false, void>\xe2\x80\x99\n'}
[22.400656] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;\n'}
[22.400908] (inertial_sense_ros2) StderrLine: {'line': b'      |               ^~~~~~~~~~~~~~~\n'}
[22.401196] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99:\n'}
[22.401504] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.401768] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[22.402041] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[22.402399] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[22.402723] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[22.403253] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[22.403541] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[22.403806] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99 to \xe2\x80\x98const std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&\xe2\x80\x99\n'}
[22.404163] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[22.404449] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~~~~~~\n'}
[22.404895] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[22.405471] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[22.405783] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[22.406193] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99 to \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&\xe2\x80\x99\n'}
[22.406719] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[22.407138] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~\n'}
[22.451868] (-) TimerEvent: {}
[22.552310] (-) TimerEvent: {}
[22.652774] (-) TimerEvent: {}
[22.753319] (-) TimerEvent: {}
[22.853884] (-) TimerEvent: {}
[22.954314] (-) TimerEvent: {}
[23.054777] (-) TimerEvent: {}
[23.155479] (-) TimerEvent: {}
[23.255935] (-) TimerEvent: {}
[23.356537] (-) TimerEvent: {}
[23.457022] (-) TimerEvent: {}
[23.557574] (-) TimerEvent: {}
[23.658081] (-) TimerEvent: {}
[23.758704] (-) TimerEvent: {}
[23.859216] (-) TimerEvent: {}
[23.959677] (-) TimerEvent: {}
[24.060407] (-) TimerEvent: {}
[24.160872] (-) TimerEvent: {}
[24.261436] (-) TimerEvent: {}
[24.361964] (-) TimerEvent: {}
[24.462726] (-) TimerEvent: {}
[24.563221] (-) TimerEvent: {}
[24.663887] (-) TimerEvent: {}
[24.764555] (-) TimerEvent: {}
[24.865309] (-) TimerEvent: {}
[24.965869] (-) TimerEvent: {}
[25.066438] (-) TimerEvent: {}
[25.166826] (-) TimerEvent: {}
[25.267460] (-) TimerEvent: {}
[25.368629] (-) TimerEvent: {}
[25.469235] (-) TimerEvent: {}
[25.569765] (-) TimerEvent: {}
[25.670317] (-) TimerEvent: {}
[25.770909] (-) TimerEvent: {}
[25.871291] (-) TimerEvent: {}
[25.971807] (-) TimerEvent: {}
[26.072279] (-) TimerEvent: {}
[26.172777] (-) TimerEvent: {}
[26.273341] (-) TimerEvent: {}
[26.373795] (-) TimerEvent: {}
[26.474247] (-) TimerEvent: {}
[26.574769] (-) TimerEvent: {}
[26.675285] (-) TimerEvent: {}
[26.775750] (-) TimerEvent: {}
[26.876428] (-) TimerEvent: {}
[26.976877] (-) TimerEvent: {}
[27.077523] (-) TimerEvent: {}
[27.177956] (-) TimerEvent: {}
[27.278575] (-) TimerEvent: {}
[27.379145] (-) TimerEvent: {}
[27.479561] (-) TimerEvent: {}
[27.580068] (-) TimerEvent: {}
[27.680575] (-) TimerEvent: {}
[27.781013] (-) TimerEvent: {}
[27.881614] (-) TimerEvent: {}
[27.982050] (-) TimerEvent: {}
[28.083013] (-) TimerEvent: {}
[28.183794] (-) TimerEvent: {}
[28.284442] (-) TimerEvent: {}
[28.384842] (-) TimerEvent: {}
[28.485464] (-) TimerEvent: {}
[28.586032] (-) TimerEvent: {}
[28.686608] (-) TimerEvent: {}
[28.787045] (-) TimerEvent: {}
[28.887553] (-) TimerEvent: {}
[28.988005] (-) TimerEvent: {}
[29.088613] (-) TimerEvent: {}
[29.189215] (-) TimerEvent: {}
[29.289712] (-) TimerEvent: {}
[29.390214] (-) TimerEvent: {}
[29.490797] (-) TimerEvent: {}
[29.591368] (-) TimerEvent: {}
[29.691983] (-) TimerEvent: {}
[29.792650] (-) TimerEvent: {}
[29.893470] (-) TimerEvent: {}
[29.994181] (-) TimerEvent: {}
[30.094707] (-) TimerEvent: {}
[30.195230] (-) TimerEvent: {}
[30.296016] (-) TimerEvent: {}
[30.396853] (-) TimerEvent: {}
[30.497464] (-) TimerEvent: {}
[30.597866] (-) TimerEvent: {}
[30.698431] (-) TimerEvent: {}
[30.799011] (-) TimerEvent: {}
[30.899645] (-) TimerEvent: {}
[31.000365] (-) TimerEvent: {}
[31.100842] (-) TimerEvent: {}
[31.201352] (-) TimerEvent: {}
[31.301916] (-) TimerEvent: {}
[31.402879] (-) TimerEvent: {}
[31.503480] (-) TimerEvent: {}
[31.603883] (-) TimerEvent: {}
[31.704482] (-) TimerEvent: {}
[31.805034] (-) TimerEvent: {}
[31.905587] (-) TimerEvent: {}
[32.006304] (-) TimerEvent: {}
[32.106809] (-) TimerEvent: {}
[32.207563] (-) TimerEvent: {}
[32.308020] (-) TimerEvent: {}
[32.408598] (-) TimerEvent: {}
[32.509144] (-) TimerEvent: {}
[32.609684] (-) TimerEvent: {}
[32.710232] (-) TimerEvent: {}
[32.810729] (-) TimerEvent: {}
[32.911254] (-) TimerEvent: {}
[33.011749] (-) TimerEvent: {}
[33.112318] (-) TimerEvent: {}
[33.212845] (-) TimerEvent: {}
[33.313360] (-) TimerEvent: {}
[33.413860] (-) TimerEvent: {}
[33.514358] (-) TimerEvent: {}
[33.614947] (-) TimerEvent: {}
[33.715645] (-) TimerEvent: {}
[33.816035] (-) TimerEvent: {}
[33.916648] (-) TimerEvent: {}
[34.017201] (-) TimerEvent: {}
[34.117732] (-) TimerEvent: {}
[34.218238] (-) TimerEvent: {}
[34.318745] (-) TimerEvent: {}
[34.419405] (-) TimerEvent: {}
[34.519957] (-) TimerEvent: {}
[34.620619] (-) TimerEvent: {}
[34.721177] (-) TimerEvent: {}
[34.821701] (-) TimerEvent: {}
[34.922255] (-) TimerEvent: {}
[35.022824] (-) TimerEvent: {}
[35.123582] (-) TimerEvent: {}
[35.224241] (-) TimerEvent: {}
[35.324787] (-) TimerEvent: {}
[35.425255] (-) TimerEvent: {}
[35.525916] (-) TimerEvent: {}
[35.626285] (-) TimerEvent: {}
[35.728242] (-) TimerEvent: {}
[35.828713] (-) TimerEvent: {}
[35.929255] (-) TimerEvent: {}
[36.029790] (-) TimerEvent: {}
[36.130432] (-) TimerEvent: {}
[36.233339] (-) TimerEvent: {}
[36.333778] (-) TimerEvent: {}
[36.434255] (-) TimerEvent: {}
[36.534791] (-) TimerEvent: {}
[36.635179] (-) TimerEvent: {}
[36.692945] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/new_target.dir/build.make:90: CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o] Error 1\n'}
[36.693509] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** Waiting for unfinished jobs....\n'}
[36.735587] (-) TimerEvent: {}
[36.825582] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/new_target.dir/build.make:76: CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o] Error 1\n'}
[36.826792] (inertial_sense_ros2) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:623: CMakeFiles/new_target.dir/all] Error 2\n'}
[36.827971] (inertial_sense_ros2) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[36.831194] (inertial_sense_ros2) CommandEnded: {'returncode': 2}
[36.835906] (-) TimerEvent: {}
[36.936198] (-) TimerEvent: {}
[37.036720] (-) TimerEvent: {}
[37.137348] (-) TimerEvent: {}
[37.237834] (-) TimerEvent: {}
[37.338336] (-) TimerEvent: {}
[37.438836] (-) TimerEvent: {}
[37.539287] (-) TimerEvent: {}
[37.639846] (-) TimerEvent: {}
[37.740357] (-) TimerEvent: {}
[37.840900] (-) TimerEvent: {}
[37.941480] (-) TimerEvent: {}
[38.041937] (-) TimerEvent: {}
[38.142407] (-) TimerEvent: {}
[38.242899] (-) TimerEvent: {}
[38.344002] (-) TimerEvent: {}
[38.444399] (-) TimerEvent: {}
[38.545050] (-) TimerEvent: {}
[38.645550] (-) TimerEvent: {}
[38.746000] (-) TimerEvent: {}
[38.846483] (-) TimerEvent: {}
[38.947010] (-) TimerEvent: {}
[39.047419] (-) TimerEvent: {}
[39.148337] (-) TimerEvent: {}
[39.248885] (-) TimerEvent: {}
[39.349437] (-) TimerEvent: {}
[39.450065] (-) TimerEvent: {}
[39.550512] (-) TimerEvent: {}
[39.651036] (-) TimerEvent: {}
[39.751447] (-) TimerEvent: {}
[39.851979] (-) TimerEvent: {}
[39.952427] (-) TimerEvent: {}
[40.053185] (-) TimerEvent: {}
[40.152396] (inertial_sense_ros2) JobEnded: {'identifier': 'inertial_sense_ros2', 'rc': 2}
[40.155434] (-) TimerEvent: {}
[40.163915] (-) EventReactorShutdown: {}
