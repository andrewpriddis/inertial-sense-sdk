In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.cpp:19:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:70:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
   84 |     rclcpp::is_ros_compatible_type<MessageT>::value,
      |                                               ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:71:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:72:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:73:47:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<nav_msgs::msg::Odometry_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:74:60:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:75:54:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:76:45:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<sensor_msgs::msg::Imu_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:55:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:53:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:80:51:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:81:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::value’ evaluates to false
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:19:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:70:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
   84 |     rclcpp::is_ros_compatible_type<MessageT>::value,
      |                                               ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:71:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:72:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:73:47:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<nav_msgs::msg::Odometry_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:74:60:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:75:54:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:76:45:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<sensor_msgs::msg::Imu_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:55:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:53:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:80:51:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:81:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::value’ evaluates to false
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:19:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:70:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
   84 |     rclcpp::is_ros_compatible_type<MessageT>::value,
      |                                               ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:71:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:72:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:73:47:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<nav_msgs::msg::Odometry_<std::allocator<void> > >::value’ evaluates to false
In file included from /opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/imu.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:44:
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8: error: specialization of ‘rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >’ after instantiation
  277 | struct is_message<sensor_msgs::msg::Imu>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >’
In file included from /opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__traits.hpp:18,
                 from /opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/list_parameters.hpp:9,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:21,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171:
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:74:60:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::value’ evaluates to false
In file included from /opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/magnetic_field.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:45:
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8: error: specialization of ‘rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >’ after instantiation
  166 | struct is_message<sensor_msgs::msg::MagneticField>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:75:54:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:76:45:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<sensor_msgs::msg::Imu_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:55:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:53:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::value’ evaluates to false
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:80:51:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::value’ evaluates to false
In file included from /opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/nav_sat_fix.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:48:
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8: error: specialization of ‘rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >’ after instantiation
  234 | struct is_message<sensor_msgs::msg::NavSatFix>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of ‘class rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >’:
/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:81:57:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: error: static assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47: note: ‘rclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::value’ evaluates to false
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:49:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >’ after instantiation
  349 | struct is_message<inertial_sense_ros2::msg::GPS>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps_info.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:51:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >’ after instantiation
  166 | struct is_message<inertial_sense_ros2::msg::GPSInfo>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/pimu.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:52:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >’ after instantiation
  162 | struct is_message<inertial_sense_ros2::msg::PIMU>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/inl2_states.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:61:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >’ after instantiation
  248 | struct is_message<inertial_sense_ros2::msg::INL2States>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins2.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:62:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >’ after instantiation
  292 | struct is_message<inertial_sense_ros2::msg::DIDINS2>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins1.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:63:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >’ after instantiation
  330 | struct is_message<inertial_sense_ros2::msg::DIDINS1>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/imu.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:44:
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8: error: specialization of ‘rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >’ after instantiation
  277 | struct is_message<sensor_msgs::msg::Imu>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >’
In file included from /opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__traits.hpp:18,
                 from /opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/list_parameters.hpp:9,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:21,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171:
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins4.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:64:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >’ after instantiation
  292 | struct is_message<inertial_sense_ros2::msg::DIDINS4>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/magnetic_field.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:45:
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8: error: specialization of ‘rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >’ after instantiation
  166 | struct is_message<sensor_msgs::msg::MagneticField>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/odometry.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:65:
/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8: error: specialization of ‘rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >’ after instantiation
  163 | struct is_message<nav_msgs::msg::Odometry>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/nav_sat_fix.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:48:
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8: error: specialization of ‘rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >’ after instantiation
  234 | struct is_message<sensor_msgs::msg::NavSatFix>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:49:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >’ after instantiation
  349 | struct is_message<inertial_sense_ros2::msg::GPS>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps_info.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:51:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >’ after instantiation
  166 | struct is_message<inertial_sense_ros2::msg::GPSInfo>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/pimu.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:52:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >’ after instantiation
  162 | struct is_message<inertial_sense_ros2::msg::PIMU>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/inl2_states.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:61:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >’ after instantiation
  248 | struct is_message<inertial_sense_ros2::msg::INL2States>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins2.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:62:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >’ after instantiation
  292 | struct is_message<inertial_sense_ros2::msg::DIDINS2>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins1.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:63:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >’ after instantiation
  330 | struct is_message<inertial_sense_ros2::msg::DIDINS1>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins4.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:64:
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8: error: specialization of ‘rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >’ after instantiation
  292 | struct is_message<inertial_sense_ros2::msg::DIDINS4>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
gmake[2]: *** [CMakeFiles/new_target.dir/build.make:104: CMakeFiles/new_target.dir/include/TopicHelper.cpp.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
In file included from /opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/odometry.hpp:9,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:65:
/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8: error: specialization of ‘rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >’ after instantiation
  163 | struct is_message<nav_msgs::msg::Odometry>
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8: error: redefinition of ‘struct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >’
/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8: note: previous definition of ‘struct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >’
  165 | struct is_message : std::false_type {};
      |        ^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘bool InertialSenseROS::firmware_compatiblity_check()’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28: error: ‘Level’ is not a member of ‘rclcpp::Logger::Level’
  568 |     rclcpp::Logger::Level::Level protocol_fault = rclcpp::Logger::Level::Debug; // none
      |                            ^~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32: error: ‘protocol_fault’ was not declared in this scope; did you mean ‘protocol_type_t’?
  569 |     if (diff_protocol[0] != 0) protocol_fault = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
      |                                ^~~~~~~~~~~~~~
      |                                protocol_type_t
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37: error: ‘protocol_fault’ was not declared in this scope; did you mean ‘protocol_type_t’?
  570 |     else if (diff_protocol[1] != 0) protocol_fault = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
      |                                     ^~~~~~~~~~~~~~
      |                                     protocol_type_t
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37: error: ‘protocol_fault’ was not declared in this scope; did you mean ‘protocol_type_t’?
  571 |     else if (diff_protocol[2] != 0) protocol_fault = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
      |                                     ^~~~~~~~~~~~~~
      |                                     protocol_type_t
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37: error: ‘protocol_fault’ was not declared in this scope; did you mean ‘protocol_type_t’?
  572 |     else if (diff_protocol[3] != 0) protocol_fault = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
      |                                     ^~~~~~~~~~~~~~
      |                                     protocol_type_t
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28: error: ‘Level’ is not a member of ‘rclcpp::Logger::Level’
  574 |     rclcpp::Logger::Level::Level firmware_fault = rclcpp::Logger::Level::Debug; // none
      |                            ^~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32: error: ‘firmware_fault’ was not declared in this scope
  575 |     if (diff_firmware[0] != 0) firmware_fault = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
      |                                ^~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37: error: ‘firmware_fault’ was not declared in this scope
  576 |     else if (diff_firmware[1] != 0) firmware_fault = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
      |                                     ^~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37: error: ‘firmware_fault’ was not declared in this scope
  577 |     else if (diff_firmware[2] != 0) firmware_fault = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
      |                                     ^~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28: error: ‘Level’ is not a member of ‘rclcpp::Logger::Level’
  579 |     rclcpp::Logger::Level::Level final_fault = std::max(firmware_fault, protocol_fault);
      |                            ^~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12: error: ‘final_fault’ was not declared in this scope
  599 |     return final_fault == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
      |            ^~~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::INS1_callback(eDataIDs, const ins_1_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS1&)’
  955 |             rs_.did_ins1.pub_didins1->publish(msg_did_ins1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46: note:   ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >’
  955 |             rs_.did_ins1.pub_didins1->publish(msg_did_ins1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/13/bits/move.h:37,
                 from /usr/include/c++/13/bits/exception_ptr.h:41,
                 from /usr/include/c++/13/exception:164,
                 from /usr/include/c++/13/ios:41,
                 from /usr/include/c++/13/ostream:40,
                 from /usr/include/c++/13/iostream:41,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:   required by substitution of ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value), void> rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::publish(const T&) [with T = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46: note:   ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >’
  955 |             rs_.did_ins1.pub_didins1->publish(msg_did_ins1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS1’ {aka ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS1’ {aka ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS1’ {aka ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::INS2_callback(eDataIDs, const ins_2_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS2&)’
  982 |             rs_.did_ins2.pub_didins2->publish(msg_did_ins2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46: note:   ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >’
  982 |             rs_.did_ins2.pub_didins2->publish(msg_did_ins2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46: note:   ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >’
  982 |             rs_.did_ins2.pub_didins2->publish(msg_did_ins2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS2’ {aka ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS2’ {aka ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS2’ {aka ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::INS4_callback(eDataIDs, const ins_4_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS4&)’
 1009 |             rs_.did_ins4.pub_didins4->publish(msg_did_ins4);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46: note:   ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >’
 1009 |             rs_.did_ins4.pub_didins4->publish(msg_did_ins4);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46: note:   ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >’
 1009 |             rs_.did_ins4.pub_didins4->publish(msg_did_ins4);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS4’ {aka ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS4’ {aka ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS4’ {aka ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52: error: no matching function for call to ‘rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)’
 1078 |             rs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1078 |             rs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1078 |             rs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55: error: no matching function for call to ‘rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)’
 1165 |                 rs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1165 |                 rs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1165 |                 rs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55: error: no matching function for call to ‘rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)’
 1259 |                 rs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1259 |                 rs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1259 |                 rs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::INL2_states_callback(eDataIDs, const inl2_states_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::INL2States&)’
 1312 |             rs_.inl2_states.pub_inl2->publish(msg_inl2_states);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46: note:   ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >’
 1312 |             rs_.inl2_states.pub_inl2->publish(msg_inl2_states);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46: note:   ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >’
 1312 |             rs_.inl2_states.pub_inl2->publish(msg_inl2_states);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::INL2States’ {aka ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::INL2States’ {aka ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::INL2States’ {aka ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::GPS_pos_callback(eDataIDs, const gps_pos_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48: error: no matching function for call to ‘rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::publish(sensor_msgs::msg::NavSatFix&)’
 1455 |             rs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48: note:   ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >’
 1455 |             rs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48: note:   ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >’
 1455 |             rs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::NavSatFix’ {aka ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::NavSatFix’ {aka ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::NavSatFix_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::NavSatFix’ {aka ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::publishGPS1()’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)’
 1500 |             rs_.gps1.pub_gps->publish(msg_gps1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38: note:   ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >’
 1500 |             rs_.gps1.pub_gps->publish(msg_gps1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38: note:   ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >’
 1500 |             rs_.gps1.pub_gps->publish(msg_gps1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::publishGPS2()’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)’
 1512 |             rs_.gps2.pub_gps->publish(msg_gps2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38: note:   ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >’
 1512 |             rs_.gps2.pub_gps->publish(msg_gps2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38: note:   ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >’
 1512 |             rs_.gps2.pub_gps->publish(msg_gps2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::GPS_info_callback(eDataIDs, const gps_sat_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)’
 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59: note:   ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >’
 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59: note:   ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >’
 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)’
 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59: note:   ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >’
 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59: note:   ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >’
 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::mag_callback(eDataIDs, const magnetometer_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41: error: no matching function for call to ‘rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::publish(sensor_msgs::msg::MagneticField&)’
 1588 |     rs_.magnetometer.pub_bfield->publish(mag_msg);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41: note:   ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >’
 1588 |     rs_.magnetometer.pub_bfield->publish(mag_msg);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41: note:   ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >’
 1588 |     rs_.magnetometer.pub_bfield->publish(mag_msg);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::MagneticField’ {aka ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::MagneticField’ {aka ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::MagneticField_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::MagneticField’ {aka ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::preint_IMU_callback(eDataIDs, const pimu_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::PIMU&)’
 1623 |         rs_.pimu.pub_pimu->publish(msg_pimu);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35: note:   ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >’
 1623 |         rs_.pimu.pub_pimu->publish(msg_pimu);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35: note:   ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >’
 1623 |         rs_.pimu.pub_pimu->publish(msg_pimu);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::PIMU’ {aka ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::PIMU’ {aka ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::PIMU’ {aka ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37: error: no matching function for call to ‘rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >::publish(sensor_msgs::msg::Imu&)’
 1640 |             rs_.imu.pub_imu->publish(msg_imu);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37: note:   ‘sensor_msgs::msg::Imu_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >’
 1640 |             rs_.imu.pub_imu->publish(msg_imu);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37: note:   ‘sensor_msgs::msg::Imu_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >’
 1640 |             rs_.imu.pub_imu->publish(msg_imu);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::Imu’ {aka ‘sensor_msgs::msg::Imu_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::Imu’ {aka ‘sensor_msgs::msg::Imu_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Imu_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::Imu’ {aka ‘sensor_msgs::msg::Imu_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
In file included from /home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:20:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘bool InertialSenseROS::firmware_compatiblity_check()’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28: error: ‘Level’ is not a member of ‘rclcpp::Logger::Level’
  568 |     rclcpp::Logger::Level::Level protocol_fault = rclcpp::Logger::Level::Debug; // none
      |                            ^~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32: error: ‘protocol_fault’ was not declared in this scope; did you mean ‘protocol_type_t’?
  569 |     if (diff_protocol[0] != 0) protocol_fault = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
      |                                ^~~~~~~~~~~~~~
      |                                protocol_type_t
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37: error: ‘protocol_fault’ was not declared in this scope; did you mean ‘protocol_type_t’?
  570 |     else if (diff_protocol[1] != 0) protocol_fault = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
      |                                     ^~~~~~~~~~~~~~
      |                                     protocol_type_t
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37: error: ‘protocol_fault’ was not declared in this scope; did you mean ‘protocol_type_t’?
  571 |     else if (diff_protocol[2] != 0) protocol_fault = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
      |                                     ^~~~~~~~~~~~~~
      |                                     protocol_type_t
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37: error: ‘protocol_fault’ was not declared in this scope; did you mean ‘protocol_type_t’?
  572 |     else if (diff_protocol[3] != 0) protocol_fault = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
      |                                     ^~~~~~~~~~~~~~
      |                                     protocol_type_t
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28: error: ‘Level’ is not a member of ‘rclcpp::Logger::Level’
  574 |     rclcpp::Logger::Level::Level firmware_fault = rclcpp::Logger::Level::Debug; // none
      |                            ^~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32: error: ‘firmware_fault’ was not declared in this scope
  575 |     if (diff_firmware[0] != 0) firmware_fault = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
      |                                ^~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37: error: ‘firmware_fault’ was not declared in this scope
  576 |     else if (diff_firmware[1] != 0) firmware_fault = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
      |                                     ^~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37: error: ‘firmware_fault’ was not declared in this scope
  577 |     else if (diff_firmware[2] != 0) firmware_fault = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
      |                                     ^~~~~~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28: error: ‘Level’ is not a member of ‘rclcpp::Logger::Level’
  579 |     rclcpp::Logger::Level::Level final_fault = std::max(firmware_fault, protocol_fault);
      |                            ^~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12: error: ‘final_fault’ was not declared in this scope
  599 |     return final_fault == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
      |            ^~~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::INS1_callback(eDataIDs, const ins_1_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS1&)’
  955 |             rs_.did_ins1.pub_didins1->publish(msg_did_ins1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46: note:   ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >’
  955 |             rs_.did_ins1.pub_didins1->publish(msg_did_ins1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/13/bits/move.h:37,
                 from /usr/include/c++/13/bits/exception_ptr.h:41,
                 from /usr/include/c++/13/exception:164,
                 from /usr/include/c++/13/ios:41,
                 from /usr/include/c++/13/ostream:40,
                 from /usr/include/c++/13/iostream:41,
                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:   required by substitution of ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value), void> rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::publish(const T&) [with T = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46: note:   ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >’
  955 |             rs_.did_ins1.pub_didins1->publish(msg_did_ins1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS1’ {aka ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS1’ {aka ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS1’ {aka ‘inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::INS2_callback(eDataIDs, const ins_2_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS2&)’
  982 |             rs_.did_ins2.pub_didins2->publish(msg_did_ins2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46: note:   ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >’
  982 |             rs_.did_ins2.pub_didins2->publish(msg_did_ins2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46: note:   ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >’
  982 |             rs_.did_ins2.pub_didins2->publish(msg_did_ins2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS2’ {aka ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS2’ {aka ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS2’ {aka ‘inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::INS4_callback(eDataIDs, const ins_4_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS4&)’
 1009 |             rs_.did_ins4.pub_didins4->publish(msg_did_ins4);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46: note:   ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >’
 1009 |             rs_.did_ins4.pub_didins4->publish(msg_did_ins4);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46: note:   ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >’
 1009 |             rs_.did_ins4.pub_didins4->publish(msg_did_ins4);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS4’ {aka ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS4’ {aka ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::DIDINS4’ {aka ‘inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52: error: no matching function for call to ‘rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)’
 1078 |             rs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1078 |             rs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1078 |             rs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55: error: no matching function for call to ‘rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)’
 1165 |                 rs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1165 |                 rs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1165 |                 rs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55: error: no matching function for call to ‘rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)’
 1259 |                 rs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1259 |                 rs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55: note:   ‘nav_msgs::msg::Odometry_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >’
 1259 |                 rs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘nav_msgs::msg::Odometry’ {aka ‘nav_msgs::msg::Odometry_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::INL2_states_callback(eDataIDs, const inl2_states_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::INL2States&)’
 1312 |             rs_.inl2_states.pub_inl2->publish(msg_inl2_states);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46: note:   ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >’
 1312 |             rs_.inl2_states.pub_inl2->publish(msg_inl2_states);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46: note:   ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >’
 1312 |             rs_.inl2_states.pub_inl2->publish(msg_inl2_states);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::INL2States’ {aka ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::INL2States’ {aka ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::INL2States’ {aka ‘inertial_sense_ros2::msg::INL2States_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::GPS_pos_callback(eDataIDs, const gps_pos_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48: error: no matching function for call to ‘rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::publish(sensor_msgs::msg::NavSatFix&)’
 1455 |             rs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48: note:   ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >’
 1455 |             rs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48: note:   ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >’
 1455 |             rs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::NavSatFix’ {aka ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::NavSatFix’ {aka ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::NavSatFix_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::NavSatFix’ {aka ‘sensor_msgs::msg::NavSatFix_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::publishGPS1()’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)’
 1500 |             rs_.gps1.pub_gps->publish(msg_gps1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38: note:   ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >’
 1500 |             rs_.gps1.pub_gps->publish(msg_gps1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38: note:   ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >’
 1500 |             rs_.gps1.pub_gps->publish(msg_gps1);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::publishGPS2()’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)’
 1512 |             rs_.gps2.pub_gps->publish(msg_gps2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38: note:   ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >’
 1512 |             rs_.gps2.pub_gps->publish(msg_gps2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38: note:   ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >’
 1512 |             rs_.gps2.pub_gps->publish(msg_gps2);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPS’ {aka ‘inertial_sense_ros2::msg::GPS_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::GPS_info_callback(eDataIDs, const gps_sat_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)’
 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59: note:   ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >’
 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59: note:   ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >’
 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)’
 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59: note:   ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >’
 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59: note:   ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >’
 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info);    break;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::GPSInfo’ {aka ‘inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::mag_callback(eDataIDs, const magnetometer_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41: error: no matching function for call to ‘rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::publish(sensor_msgs::msg::MagneticField&)’
 1588 |     rs_.magnetometer.pub_bfield->publish(mag_msg);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41: note:   ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >’
 1588 |     rs_.magnetometer.pub_bfield->publish(mag_msg);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41: note:   ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >’
 1588 |     rs_.magnetometer.pub_bfield->publish(mag_msg);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::MagneticField’ {aka ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::MagneticField’ {aka ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::MagneticField_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::MagneticField’ {aka ‘sensor_msgs::msg::MagneticField_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp: In member function ‘void InertialSenseROS::preint_IMU_callback(eDataIDs, const pimu_t*)’:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35: error: no matching function for call to ‘rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::PIMU&)’
 1623 |         rs_.pimu.pub_pimu->publish(msg_pimu);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35: note:   ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >’
 1623 |         rs_.pimu.pub_pimu->publish(msg_pimu);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35: note:   ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >’
 1623 |         rs_.pimu.pub_pimu->publish(msg_pimu);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::PIMU’ {aka ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::PIMU’ {aka ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘inertial_sense_ros2::msg::PIMU’ {aka ‘inertial_sense_ros2::msg::PIMU_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37: error: no matching function for call to ‘rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >::publish(sensor_msgs::msg::Imu&)’
 1640 |             rs_.imu.pub_imu->publish(msg_imu);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  239 |   publish(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37: note:   ‘sensor_msgs::msg::Imu_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >’
 1640 |             rs_.imu.pub_imu->publish(msg_imu);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note: candidate: ‘template<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  289 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  319 |   publish(std::unique_ptr<T, PublishedTypeDeleter> msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3: note:   template argument deduction/substitution failed:
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37: note:   ‘sensor_msgs::msg::Imu_<std::allocator<void> >’ is not derived from ‘std::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >’
 1640 |             rs_.imu.pub_imu->publish(msg_imu);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note: candidate: ‘template<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  366 |   publish(const T & msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]’
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::Imu’ {aka ‘sensor_msgs::msg::Imu_<std::allocator<void> >’} to ‘const rcl_serialized_message_t&’ {aka ‘const rcutils_uint8_array_s&’}
  384 |   publish(const rcl_serialized_message_t & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>]’
  390 |   publish(const SerializedMessage & serialized_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::Imu’ {aka ‘sensor_msgs::msg::Imu_<std::allocator<void> >’} to ‘const rclcpp::SerializedMessage&’
  390 |   publish(const SerializedMessage & serialized_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3: note: candidate: ‘void rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Imu_<std::allocator<void> >]’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |   ^~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64: note:   no known conversion for argument 1 from ‘sensor_msgs::msg::Imu’ {aka ‘sensor_msgs::msg::Imu_<std::allocator<void> >’} to ‘rclcpp::LoanedMessage<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >&&’
  404 |   publish(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20:
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of ‘struct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>’:
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:   required from ‘struct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
   52 |     typename function_traits<decltype( &FunctionT::operator())>::arguments>::type;
      |                                        ^~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >’
  121 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29:
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >’
  128 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >’
  135 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >’
  142 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17: error: no match for ‘operator=’ (operand types are ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’)
  148 |       callback_ = std::forward<CallbackT>(callback);
      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/13/variant:1494:9: note: candidate: ‘template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1494 |         operator=(_Tp&& __rhs)
      |         ^~~~~~~~
/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/variant: In substitution of ‘template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’:
/usr/include/c++/13/variant:1490:14:   required by substitution of ‘template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1407:15: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;
      |               ^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1430:16: note: candidate: ‘std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1430 |       variant& operator=(const variant&) = default;
      |                ^~~~~~~~
/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’ to ‘const std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&’
 1430 |       variant& operator=(const variant&) = default;
      |                          ^~~~~~~~~~~~~~
/usr/include/c++/13/variant:1431:16: note: candidate: ‘std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1431 |       variant& operator=(variant&&) = default;
      |                ^~~~~~~~
/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’ to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&’
 1431 |       variant& operator=(variant&&) = default;
      |                          ^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of ‘struct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>’:
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:   required from ‘struct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
   52 |     typename function_traits<decltype( &FunctionT::operator())>::arguments>::type;
      |                                        ^~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >’
  121 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >’
  128 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >’
  135 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >’
  142 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17: error: no match for ‘operator=’ (operand types are ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’)
  148 |       callback_ = std::forward<CallbackT>(callback);
      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/13/variant:1494:9: note: candidate: ‘template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1494 |         operator=(_Tp&& __rhs)
      |         ^~~~~~~~
/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/variant: In substitution of ‘template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’:
/usr/include/c++/13/variant:1490:14:   required by substitution of ‘template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1407:15: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;
      |               ^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1430:16: note: candidate: ‘std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1430 |       variant& operator=(const variant&) = default;
      |                ^~~~~~~~
/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’ to ‘const std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&’
 1430 |       variant& operator=(const variant&) = default;
      |                          ^~~~~~~~~~~~~~
/usr/include/c++/13/variant:1431:16: note: candidate: ‘std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1431 |       variant& operator=(variant&&) = default;
      |                ^~~~~~~~
/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’ to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&’
 1431 |       variant& operator=(variant&&) = default;
      |                          ^~~~~~~~~
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20:
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of ‘struct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>’:
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:   required from ‘struct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
   52 |     typename function_traits<decltype( &FunctionT::operator())>::arguments>::type;
      |                                        ^~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >’
  121 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29:
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >’
  128 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >’
  135 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >’
  142 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17: error: no match for ‘operator=’ (operand types are ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >’ and ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’)
  148 |       callback_ = std::forward<CallbackT>(callback);
      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/13/variant:1494:9: note: candidate: ‘template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1494 |         operator=(_Tp&& __rhs)
      |         ^~~~~~~~
/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/variant: In substitution of ‘template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’:
/usr/include/c++/13/variant:1490:14:   required by substitution of ‘template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1407:15: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;
      |               ^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here
/usr/include/c++/13/variant:1430:16: note: candidate: ‘std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1430 |       variant& operator=(const variant&) = default;
      |                ^~~~~~~~
/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’ to ‘const std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&’
 1430 |       variant& operator=(const variant&) = default;
      |                          ^~~~~~~~~~~~~~
/usr/include/c++/13/variant:1431:16: note: candidate: ‘std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]’
 1431 |       variant& operator=(variant&&) = default;
      |                ^~~~~~~~
/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from ‘bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)’ to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&’
 1431 |       variant& operator=(variant&&) = default;
      |                          ^~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of ‘struct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>’:
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:   required from ‘struct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
   52 |     typename function_traits<decltype( &FunctionT::operator())>::arguments>::type;
      |                                        ^~~~~~~~~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40: error: ‘operator()’ is not a member of ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >’
  121 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  123 |       callback_.template emplace<SharedPtrCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback’ {aka ‘std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >’
  128 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  130 |       callback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >’
  135 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  137 |       callback_.template emplace<SharedPtrDeferResponseCallback>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback’ {aka ‘std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10: error: ‘value’ is not a member of ‘rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >’
  142 |       >::value)
      |          ^~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: no matching function for call to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1519:9: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1519 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1519:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/type_traits: In substitution of ‘template<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]’:
/usr/include/c++/13/variant:1519:2:   required by substitution of ‘template<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace(_Args&& ...) [with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/type_traits:2610:11: error: no type named ‘type’ in ‘struct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>’
 2610 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1530:9: note: candidate: ‘template<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1530 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1530:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   mismatched types ‘std::initializer_list<_Value>’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/usr/include/c++/13/variant:1540:9: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1540 |         emplace(_Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1540:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1580:9: note: candidate: ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1580 |         emplace(initializer_list<_Up> __il, _Args&&... __args)
      |         ^~~~~~~
/usr/include/c++/13/variant:1580:9: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::emplace(std::initializer_list<_Up>, _Args&& ...) [with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1613:49: note: candidate: ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> emplace(_Args&&...) = delete;
      |                                                 ^~~~~~~
/usr/include/c++/13/variant:1613:49: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: error: type/value mismatch at argument 1 in template parameter list for ‘template<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::emplace(_Args&& ...) [with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
  144 |       callback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback);
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82: note:   expected a constant of type ‘long unsigned int’, got ‘rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle’ {aka ‘std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>’}
/usr/include/c++/13/variant:1616:43: note: candidate: ‘template<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::emplace(_Args&& ...) [with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’ (deleted)
 1616 |         enable_if_t<!__exactly_once<_Tp>> emplace(_Args&&...) = delete;
      |                                           ^~~~~~~
/usr/include/c++/13/variant:1616:43: note:   template argument deduction/substitution failed:
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17: error: no match for ‘operator=’ (operand types are ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >’ and ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’)
  148 |       callback_ = std::forward<CallbackT>(callback);
      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/13/variant:1494:9: note: candidate: ‘template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1494 |         operator=(_Tp&& __rhs)
      |         ^~~~~~~~
/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/variant: In substitution of ‘template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’:
/usr/include/c++/13/variant:1490:14:   required by substitution of ‘template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)]’
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:   required from ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1407:15: error: no type named ‘type’ in ‘struct std::enable_if<false, void>’
 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;
      |               ^~~~~~~~~~~~~~~
/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of ‘void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]’:
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]’
/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from ‘typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]’
/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here
/usr/include/c++/13/variant:1430:16: note: candidate: ‘std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1430 |       variant& operator=(const variant&) = default;
      |                ^~~~~~~~
/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’ to ‘const std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&’
 1430 |       variant& operator=(const variant&) = default;
      |                          ^~~~~~~~~~~~~~
/usr/include/c++/13/variant:1431:16: note: candidate: ‘std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]’
 1431 |       variant& operator=(variant&&) = default;
      |                ^~~~~~~~
/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from ‘bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)’ to ‘std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&’
 1431 |       variant& operator=(variant&&) = default;
      |                          ^~~~~~~~~
gmake[2]: *** [CMakeFiles/new_target.dir/build.make:76: CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o] Error 1
gmake[2]: *** [CMakeFiles/new_target.dir/build.make:90: CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:623: CMakeFiles/new_target.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
