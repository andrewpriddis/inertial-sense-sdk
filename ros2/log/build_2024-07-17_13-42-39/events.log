[0.000000] (-) TimerEvent: {}
[0.000460] (inertial_sense_ros2) JobQueued: {'identifier': 'inertial_sense_ros2', 'dependencies': OrderedDict()}
[0.002350] (inertial_sense_ros2) JobStarted: {'identifier': 'inertial_sense_ros2'}
[0.034823] (inertial_sense_ros2) JobProgress: {'identifier': 'inertial_sense_ros2', 'progress': 'cmake'}
[0.036924] (inertial_sense_ros2) JobProgress: {'identifier': 'inertial_sense_ros2', 'progress': 'build'}
[0.039023] (inertial_sense_ros2) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2', '--', '-j6', '-l6'], 'cwd': '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 's', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/s', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'DBUS_STARTER_BUS_TYPE': 'session', 'SYSTEMD_EXEC_PID': '2214', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus,guid=f924f768626b8f5ddd4065286697eb5b', 'COLORTERM': 'truecolor', '_colcon_cd_root': '/opt/ros/jazzy/', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 's', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/app.slice/app-gnome\\x2dsession\\x2dmanager.slice/gnome-session-manager@ubuntu.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 's', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/s-VMware-Virtual-Platform:@/tmp/.ICE-unix/2214,unix/s-VMware-Virtual-Platform:/tmp/.ICE-unix/2214', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/ee79ed63_56cc_414c_b474_a4da542e6115', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.MAC8Q2', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'GNOME_TERMINAL_SERVICE': ':1.120', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '0', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'DBUS_STARTER_ADDRESS': 'unix:path=/run/user/1000/bus,guid=f924f768626b8f5ddd4065286697eb5b', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.099178] (-) TimerEvent: {}
[0.199765] (-) TimerEvent: {}
[0.289626] (inertial_sense_ros2) StdoutLine: {'line': b'[  1%] Built target inertial_sense_ros2__rosidl_generator_type_description\n'}
[0.299957] (-) TimerEvent: {}
[0.340977] (inertial_sense_ros2) StdoutLine: {'line': b'[  1%] Built target ament_cmake_python_copy_inertial_sense_ros2\n'}
[0.388171] (inertial_sense_ros2) StdoutLine: {'line': b'[  1%] Built target inertial_sense_ros2__cpp\n'}
[0.402569] (-) TimerEvent: {}
[0.417168] (inertial_sense_ros2) StdoutLine: {'line': b'[  2%] Building CXX object CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o\n'}
[0.417613] (inertial_sense_ros2) StdoutLine: {'line': b'[  2%] Building CXX object CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o\n'}
[0.421321] (inertial_sense_ros2) StdoutLine: {'line': b'[ 28%] Built target inertial_sense_ros2__rosidl_generator_c\n'}
[0.503668] (-) TimerEvent: {}
[0.541853] (inertial_sense_ros2) StdoutLine: {'line': b'[ 38%] Built target inertial_sense_ros2__rosidl_typesupport_cpp\n'}
[0.570119] (inertial_sense_ros2) StdoutLine: {'line': b'[ 47%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_cpp\n'}
[0.579823] (inertial_sense_ros2) StdoutLine: {'line': b'[ 57%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_c\n'}
[0.606560] (-) TimerEvent: {}
[0.654518] (inertial_sense_ros2) StdoutLine: {'line': b'[ 67%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_c\n'}
[0.681832] (inertial_sense_ros2) StdoutLine: {'line': b'[ 76%] Built target inertial_sense_ros2__rosidl_typesupport_c\n'}
[0.706855] (-) TimerEvent: {}
[0.709856] (inertial_sense_ros2) StdoutLine: {'line': b'[ 85%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_cpp\n'}
[0.796772] (inertial_sense_ros2) StdoutLine: {'line': b'[ 85%] Built target inertial_sense_ros2\n'}
[0.807117] (-) TimerEvent: {}
[0.891516] (inertial_sense_ros2) StdoutLine: {'line': b'[ 86%] Built target inertial_sense_ros2__py\n'}
[0.908788] (-) TimerEvent: {}
[1.009251] (-) TimerEvent: {}
[1.014692] (inertial_sense_ros2) StdoutLine: {'line': b'[ 95%] Built target inertial_sense_ros2__rosidl_generator_py\n'}
[1.058811] (inertial_sense_ros2) StdoutLine: {'line': b'running egg_info\n'}
[1.109406] (-) TimerEvent: {}
[1.109878] (inertial_sense_ros2) StdoutLine: {'line': b'[ 96%] Built target inertial_sense_ros2_s__rosidl_typesupport_introspection_c\n'}
[1.116426] (inertial_sense_ros2) StdoutLine: {'line': b'[ 97%] Built target inertial_sense_ros2_s__rosidl_typesupport_c\n'}
[1.119077] (inertial_sense_ros2) StdoutLine: {'line': b'[ 98%] Built target inertial_sense_ros2_s__rosidl_typesupport_fastrtps_c\n'}
[1.131909] (inertial_sense_ros2) StdoutLine: {'line': b'writing inertial_sense_ros2.egg-info/PKG-INFO\n'}
[1.133273] (inertial_sense_ros2) StdoutLine: {'line': b'writing dependency_links to inertial_sense_ros2.egg-info/dependency_links.txt\n'}
[1.134626] (inertial_sense_ros2) StdoutLine: {'line': b'writing top-level names to inertial_sense_ros2.egg-info/top_level.txt\n'}
[1.209632] (-) TimerEvent: {}
[1.310090] (-) TimerEvent: {}
[1.346338] (inertial_sense_ros2) StdoutLine: {'line': b"reading manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'\n"}
[1.349256] (inertial_sense_ros2) StdoutLine: {'line': b"writing manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'\n"}
[1.410413] (-) TimerEvent: {}
[1.428938] (inertial_sense_ros2) StdoutLine: {'line': b'[ 98%] Built target ament_cmake_python_build_inertial_sense_ros2_egg\n'}
[1.510645] (-) TimerEvent: {}
[1.611075] (-) TimerEvent: {}
[1.711633] (-) TimerEvent: {}
[1.812159] (-) TimerEvent: {}
[1.912768] (-) TimerEvent: {}
[2.013329] (-) TimerEvent: {}
[2.113923] (-) TimerEvent: {}
[2.214529] (-) TimerEvent: {}
[2.315082] (-) TimerEvent: {}
[2.415558] (-) TimerEvent: {}
[2.516031] (-) TimerEvent: {}
[2.616556] (-) TimerEvent: {}
[2.717022] (-) TimerEvent: {}
[2.817567] (-) TimerEvent: {}
[2.918049] (-) TimerEvent: {}
[3.018548] (-) TimerEvent: {}
[3.119077] (-) TimerEvent: {}
[3.219557] (-) TimerEvent: {}
[3.320058] (-) TimerEvent: {}
[3.420678] (-) TimerEvent: {}
[3.521156] (-) TimerEvent: {}
[3.621623] (-) TimerEvent: {}
[3.722174] (-) TimerEvent: {}
[3.822745] (-) TimerEvent: {}
[3.923255] (-) TimerEvent: {}
[4.023823] (-) TimerEvent: {}
[4.124379] (-) TimerEvent: {}
[4.225094] (-) TimerEvent: {}
[4.325682] (-) TimerEvent: {}
[4.426194] (-) TimerEvent: {}
[4.526731] (-) TimerEvent: {}
[4.627225] (-) TimerEvent: {}
[4.727963] (-) TimerEvent: {}
[4.828595] (-) TimerEvent: {}
[4.929161] (-) TimerEvent: {}
[5.029758] (-) TimerEvent: {}
[5.130275] (-) TimerEvent: {}
[5.230895] (-) TimerEvent: {}
[5.331486] (-) TimerEvent: {}
[5.432017] (-) TimerEvent: {}
[5.532579] (-) TimerEvent: {}
[5.633085] (-) TimerEvent: {}
[5.733641] (-) TimerEvent: {}
[5.834244] (-) TimerEvent: {}
[5.934747] (-) TimerEvent: {}
[6.035174] (-) TimerEvent: {}
[6.135650] (-) TimerEvent: {}
[6.236107] (-) TimerEvent: {}
[6.336663] (-) TimerEvent: {}
[6.437177] (-) TimerEvent: {}
[6.537680] (-) TimerEvent: {}
[6.638217] (-) TimerEvent: {}
[6.738682] (-) TimerEvent: {}
[6.839215] (-) TimerEvent: {}
[6.939656] (-) TimerEvent: {}
[7.040128] (-) TimerEvent: {}
[7.140595] (-) TimerEvent: {}
[7.241270] (-) TimerEvent: {}
[7.341808] (-) TimerEvent: {}
[7.442244] (-) TimerEvent: {}
[7.542704] (-) TimerEvent: {}
[7.643195] (-) TimerEvent: {}
[7.743738] (-) TimerEvent: {}
[7.844293] (-) TimerEvent: {}
[7.944933] (-) TimerEvent: {}
[8.045391] (-) TimerEvent: {}
[8.145865] (-) TimerEvent: {}
[8.246358] (-) TimerEvent: {}
[8.346921] (-) TimerEvent: {}
[8.447430] (-) TimerEvent: {}
[8.548159] (-) TimerEvent: {}
[8.648673] (-) TimerEvent: {}
[8.749238] (-) TimerEvent: {}
[8.849859] (-) TimerEvent: {}
[8.950387] (-) TimerEvent: {}
[9.050951] (-) TimerEvent: {}
[9.151550] (-) TimerEvent: {}
[9.252056] (-) TimerEvent: {}
[9.352564] (-) TimerEvent: {}
[9.453068] (-) TimerEvent: {}
[9.553622] (-) TimerEvent: {}
[9.654014] (-) TimerEvent: {}
[9.754606] (-) TimerEvent: {}
[9.855063] (-) TimerEvent: {}
[9.955572] (-) TimerEvent: {}
[10.056358] (-) TimerEvent: {}
[10.158081] (-) TimerEvent: {}
[10.258575] (-) TimerEvent: {}
[10.359884] (-) TimerEvent: {}
[10.462596] (-) TimerEvent: {}
[10.563135] (-) TimerEvent: {}
[10.663614] (-) TimerEvent: {}
[10.764113] (-) TimerEvent: {}
[10.864578] (-) TimerEvent: {}
[10.965054] (-) TimerEvent: {}
[11.065520] (-) TimerEvent: {}
[11.165985] (-) TimerEvent: {}
[11.269131] (-) TimerEvent: {}
[11.375588] (-) TimerEvent: {}
[11.475962] (-) TimerEvent: {}
[11.576599] (-) TimerEvent: {}
[11.677016] (-) TimerEvent: {}
[11.779592] (-) TimerEvent: {}
[11.880011] (-) TimerEvent: {}
[11.980545] (-) TimerEvent: {}
[12.081161] (-) TimerEvent: {}
[12.181838] (-) TimerEvent: {}
[12.284598] (-) TimerEvent: {}
[12.385665] (-) TimerEvent: {}
[12.486134] (-) TimerEvent: {}
[12.586813] (-) TimerEvent: {}
[12.687547] (-) TimerEvent: {}
[12.788246] (-) TimerEvent: {}
[12.888900] (-) TimerEvent: {}
[12.989373] (-) TimerEvent: {}
[13.090014] (-) TimerEvent: {}
[13.190547] (-) TimerEvent: {}
[13.291048] (-) TimerEvent: {}
[13.391589] (-) TimerEvent: {}
[13.492060] (-) TimerEvent: {}
[13.592429] (-) TimerEvent: {}
[13.699052] (-) TimerEvent: {}
[13.799388] (-) TimerEvent: {}
[13.900596] (-) TimerEvent: {}
[14.002776] (-) TimerEvent: {}
[14.103213] (-) TimerEvent: {}
[14.204569] (-) TimerEvent: {}
[14.306634] (-) TimerEvent: {}
[14.407125] (-) TimerEvent: {}
[14.507575] (-) TimerEvent: {}
[14.610620] (-) TimerEvent: {}
[14.711073] (-) TimerEvent: {}
[14.811616] (-) TimerEvent: {}
[14.917001] (-) TimerEvent: {}
[15.017597] (-) TimerEvent: {}
[15.118067] (-) TimerEvent: {}
[15.218586] (-) TimerEvent: {}
[15.319067] (-) TimerEvent: {}
[15.419619] (-) TimerEvent: {}
[15.520146] (-) TimerEvent: {}
[15.620611] (-) TimerEvent: {}
[15.721255] (-) TimerEvent: {}
[15.822132] (-) TimerEvent: {}
[15.922670] (-) TimerEvent: {}
[16.023186] (-) TimerEvent: {}
[16.123724] (-) TimerEvent: {}
[16.224207] (-) TimerEvent: {}
[16.324697] (-) TimerEvent: {}
[16.425160] (-) TimerEvent: {}
[16.525647] (-) TimerEvent: {}
[16.626123] (-) TimerEvent: {}
[16.726792] (-) TimerEvent: {}
[16.827554] (-) TimerEvent: {}
[16.928193] (-) TimerEvent: {}
[17.028963] (-) TimerEvent: {}
[17.129569] (-) TimerEvent: {}
[17.230023] (-) TimerEvent: {}
[17.330596] (-) TimerEvent: {}
[17.431056] (-) TimerEvent: {}
[17.531642] (-) TimerEvent: {}
[17.632142] (-) TimerEvent: {}
[17.732743] (-) TimerEvent: {}
[17.833247] (-) TimerEvent: {}
[17.933853] (-) TimerEvent: {}
[18.034550] (-) TimerEvent: {}
[18.135091] (-) TimerEvent: {}
[18.235603] (-) TimerEvent: {}
[18.336063] (-) TimerEvent: {}
[18.436570] (-) TimerEvent: {}
[18.537067] (-) TimerEvent: {}
[18.637604] (-) TimerEvent: {}
[18.738091] (-) TimerEvent: {}
[18.838601] (-) TimerEvent: {}
[18.939166] (-) TimerEvent: {}
[19.039697] (-) TimerEvent: {}
[19.140217] (-) TimerEvent: {}
[19.240851] (-) TimerEvent: {}
[19.341416] (-) TimerEvent: {}
[19.442147] (-) TimerEvent: {}
[19.542802] (-) TimerEvent: {}
[19.643394] (-) TimerEvent: {}
[19.743969] (-) TimerEvent: {}
[19.844552] (-) TimerEvent: {}
[19.945047] (-) TimerEvent: {}
[20.045672] (-) TimerEvent: {}
[20.146278] (-) TimerEvent: {}
[20.246858] (-) TimerEvent: {}
[20.347433] (-) TimerEvent: {}
[20.448025] (-) TimerEvent: {}
[20.548544] (-) TimerEvent: {}
[20.649021] (-) TimerEvent: {}
[20.659570] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37,\n'}
[20.660206] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28,\n'}
[20.660558] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20,\n'}
[20.660830] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25,\n'}
[20.661082] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18,\n'}
[20.661340] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22,\n'}
[20.661650] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38,\n'}
[20.661920] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,\n'}
[20.662170] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21,\n'}
[20.662410] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172,\n'}
[20.662703] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25,\n'}
[20.662985] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29,\n'}
[20.663227] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:19:\n'}
[20.663597] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99:\n'}
[20.663948] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.664292] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.664724] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.665075] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[20.665351] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17: error: no match for \xe2\x80\x98operator=\xe2\x80\x99 (operand types are \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\xe2\x80\x99 and \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>\xe2\x80\x99)\n'}
[20.665693] (inertial_sense_ros2) StderrLine: {'line': b'  103 |       callback_ = std::forward<CallbackT>(callback);\n'}
[20.665940] (inertial_sense_ros2) StderrLine: {'line': b'      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'}
[20.666188] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29,\n'}
[20.666468] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24:\n'}
[20.666726] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note: candidate: \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.667028] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         operator=(_Tp&& __rhs)\n'}
[20.667267] (inertial_sense_ros2) StderrLine: {'line': b'      |         ^~~~~~~~\n'}
[20.667545] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:\n'}
[20.667799] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99:\n'}
[20.668082] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1490:14:   required by substitution of \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>]\xe2\x80\x99\n'}
[20.668494] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:   required from \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99\n'}
[20.668814] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.669130] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.669428] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.669788] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[20.670037] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1407:15: error: no type named \xe2\x80\x98type\xe2\x80\x99 in \xe2\x80\x98struct std::enable_if<false, void>\xe2\x80\x99\n'}
[20.670276] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;\n'}
[20.670692] (inertial_sense_ros2) StderrLine: {'line': b'      |               ^~~~~~~~~~~~~~~\n'}
[20.670970] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99:\n'}
[20.671249] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.671575] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.671889] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.672157] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[20.672392] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.672704] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[20.673010] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[20.673463] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>\xe2\x80\x99 to \xe2\x80\x98const std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&\xe2\x80\x99\n'}
[20.673839] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[20.674108] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~~~~~~\n'}
[20.674351] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.674774] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[20.675038] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[20.675274] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>\xe2\x80\x99 to \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&\xe2\x80\x99\n'}
[20.675619] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[20.675868] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~\n'}
[20.702889] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99:\n'}
[20.704117] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.704978] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.706418] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.707037] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[20.707336] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17: error: no match for \xe2\x80\x98operator=\xe2\x80\x99 (operand types are \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\xe2\x80\x99 and \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99)\n'}
[20.707685] (inertial_sense_ros2) StderrLine: {'line': b'  103 |       callback_ = std::forward<CallbackT>(callback);\n'}
[20.707938] (inertial_sense_ros2) StderrLine: {'line': b'      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'}
[20.708176] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note: candidate: \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.708545] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         operator=(_Tp&& __rhs)\n'}
[20.708801] (inertial_sense_ros2) StderrLine: {'line': b'      |         ^~~~~~~~\n'}
[20.709043] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:\n'}
[20.709283] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99:\n'}
[20.709633] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1490:14:   required by substitution of \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>]\xe2\x80\x99\n'}
[20.710195] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:   required from \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99\n'}
[20.710605] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.710913] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.711168] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.711482] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[20.711758] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1407:15: error: no type named \xe2\x80\x98type\xe2\x80\x99 in \xe2\x80\x98struct std::enable_if<false, void>\xe2\x80\x99\n'}
[20.711998] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;\n'}
[20.712252] (inertial_sense_ros2) StderrLine: {'line': b'      |               ^~~~~~~~~~~~~~~\n'}
[20.712551] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99:\n'}
[20.712845] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.713144] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.713407] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.713851] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[20.714100] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.714367] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[20.714666] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[20.714907] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99 to \xe2\x80\x98const std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&\xe2\x80\x99\n'}
[20.715181] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[20.715412] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~~~~~~\n'}
[20.715694] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.715946] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[20.716206] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[20.716472] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99 to \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&\xe2\x80\x99\n'}
[20.716764] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[20.716997] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~\n'}
[20.749377] (-) TimerEvent: {}
[20.793603] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37,\n'}
[20.795618] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28,\n'}
[20.796067] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20,\n'}
[20.796399] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25,\n'}
[20.796746] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18,\n'}
[20.797023] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22,\n'}
[20.797293] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38,\n'}
[20.797595] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,\n'}
[20.797865] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21,\n'}
[20.798107] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172,\n'}
[20.798348] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25,\n'}
[20.798679] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29,\n'}
[20.798956] (inertial_sense_ros2) StderrLine: {'line': b'                 from /home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:19:\n'}
[20.799252] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99:\n'}
[20.799609] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.799944] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.800248] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.800647] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[20.800950] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17: error: no match for \xe2\x80\x98operator=\xe2\x80\x99 (operand types are \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\xe2\x80\x99 and \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>\xe2\x80\x99)\n'}
[20.801272] (inertial_sense_ros2) StderrLine: {'line': b'  103 |       callback_ = std::forward<CallbackT>(callback);\n'}
[20.801645] (inertial_sense_ros2) StderrLine: {'line': b'      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'}
[20.801933] (inertial_sense_ros2) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29,\n'}
[20.802229] (inertial_sense_ros2) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24:\n'}
[20.802541] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note: candidate: \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.802875] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         operator=(_Tp&& __rhs)\n'}
[20.803133] (inertial_sense_ros2) StderrLine: {'line': b'      |         ^~~~~~~~\n'}
[20.803378] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:\n'}
[20.803823] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99:\n'}
[20.804507] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1490:14:   required by substitution of \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>]\xe2\x80\x99\n'}
[20.805071] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:   required from \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99\n'}
[20.805350] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.805715] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.805996] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.806273] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[20.806581] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1407:15: error: no type named \xe2\x80\x98type\xe2\x80\x99 in \xe2\x80\x98struct std::enable_if<false, void>\xe2\x80\x99\n'}
[20.806862] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;\n'}
[20.807122] (inertial_sense_ros2) StderrLine: {'line': b'      |               ^~~~~~~~~~~~~~~\n'}
[20.807376] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\xe2\x80\x99:\n'}
[20.807717] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.808040] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.808311] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.808659] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:   required from here\n'}
[20.808926] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.809178] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[20.809417] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[20.809926] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>\xe2\x80\x99 to \xe2\x80\x98const std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&\xe2\x80\x99\n'}
[20.810271] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[20.810582] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~~~~~~\n'}
[20.810859] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.811131] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[20.811388] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[20.811831] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >&, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >&)>\xe2\x80\x99 to \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&\xe2\x80\x99\n'}
[20.812146] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[20.812424] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~\n'}
[20.837892] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99:\n'}
[20.838970] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.839935] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.841222] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.842194] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[20.843354] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17: error: no match for \xe2\x80\x98operator=\xe2\x80\x99 (operand types are \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\xe2\x80\x99 and \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99)\n'}
[20.843822] (inertial_sense_ros2) StderrLine: {'line': b'  103 |       callback_ = std::forward<CallbackT>(callback);\n'}
[20.844108] (inertial_sense_ros2) StderrLine: {'line': b'      |       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'}
[20.844370] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note: candidate: \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.844762] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         operator=(_Tp&& __rhs)\n'}
[20.845035] (inertial_sense_ros2) StderrLine: {'line': b'      |         ^~~~~~~~\n'}
[20.845289] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:\n'}
[20.845823] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99:\n'}
[20.846186] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1490:14:   required by substitution of \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::operator=(_Tp&&) [with _Tp = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>]\xe2\x80\x99\n'}
[20.846744] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:   required from \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99\n'}
[20.847067] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.847361] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.847914] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.848214] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[20.848517] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1407:15: error: no type named \xe2\x80\x98type\xe2\x80\x99 in \xe2\x80\x98struct std::enable_if<false, void>\xe2\x80\x99\n'}
[20.848810] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;\n'}
[20.849056] (inertial_sense_ros2) StderrLine: {'line': b'      |               ^~~~~~~~~~~~~~~\n'}
[20.849304] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98void rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\xe2\x80\x99:\n'}
[20.849611] (-) TimerEvent: {}
[20.849666] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.849938] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\xe2\x80\x99\n'}
[20.850196] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:   required from \xe2\x80\x98typename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::Trigger; CallbackT = std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\xe2\x80\x99\n'}
[20.850510] (inertial_sense_ros2) StderrLine: {'line': b'/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:   required from here\n'}
[20.850796] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.851075] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[20.851386] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[20.851696] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99 to \xe2\x80\x98const std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&\xe2\x80\x99\n'}
[20.851972] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[20.852230] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~~~~~~\n'}
[20.852536] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\xe2\x80\x99\n'}
[20.852854] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[20.853251] (inertial_sense_ros2) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[20.853550] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from \xe2\x80\x98std::_Bind<bool (InertialSenseROS::*(InertialSenseROS*, std::_Placeholder<1>, std::_Placeholder<2>))(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\xe2\x80\x99 to \xe2\x80\x98std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&\xe2\x80\x99\n'}
[20.853847] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[20.854080] (inertial_sense_ros2) StderrLine: {'line': b'      |                          ^~~~~~~~~\n'}
[20.949881] (-) TimerEvent: {}
[21.050337] (-) TimerEvent: {}
[21.150910] (-) TimerEvent: {}
[21.251533] (-) TimerEvent: {}
[21.352035] (-) TimerEvent: {}
[21.452634] (-) TimerEvent: {}
[21.553136] (-) TimerEvent: {}
[21.653712] (-) TimerEvent: {}
[21.754280] (-) TimerEvent: {}
[21.854934] (-) TimerEvent: {}
[21.955535] (-) TimerEvent: {}
[22.055998] (-) TimerEvent: {}
[22.156589] (-) TimerEvent: {}
[22.257133] (-) TimerEvent: {}
[22.357857] (-) TimerEvent: {}
[22.458337] (-) TimerEvent: {}
[22.560145] (-) TimerEvent: {}
[22.660554] (-) TimerEvent: {}
[22.761018] (-) TimerEvent: {}
[22.861549] (-) TimerEvent: {}
[22.962239] (-) TimerEvent: {}
[23.062887] (-) TimerEvent: {}
[23.163333] (-) TimerEvent: {}
[23.263863] (-) TimerEvent: {}
[23.364372] (-) TimerEvent: {}
[23.464877] (-) TimerEvent: {}
[23.565532] (-) TimerEvent: {}
[23.666013] (-) TimerEvent: {}
[23.766535] (-) TimerEvent: {}
[23.867031] (-) TimerEvent: {}
[23.967616] (-) TimerEvent: {}
[24.068219] (-) TimerEvent: {}
[24.168921] (-) TimerEvent: {}
[24.269375] (-) TimerEvent: {}
[24.369874] (-) TimerEvent: {}
[24.470290] (-) TimerEvent: {}
[24.570830] (-) TimerEvent: {}
[24.671352] (-) TimerEvent: {}
[24.771904] (-) TimerEvent: {}
[24.874089] (-) TimerEvent: {}
[24.974577] (-) TimerEvent: {}
[25.075075] (-) TimerEvent: {}
[25.175946] (-) TimerEvent: {}
[25.279629] (-) TimerEvent: {}
[25.380138] (-) TimerEvent: {}
[25.480576] (-) TimerEvent: {}
[25.580961] (-) TimerEvent: {}
[25.681354] (-) TimerEvent: {}
[25.782031] (-) TimerEvent: {}
[25.882619] (-) TimerEvent: {}
[25.983375] (-) TimerEvent: {}
[26.084217] (-) TimerEvent: {}
[26.184664] (-) TimerEvent: {}
[26.285108] (-) TimerEvent: {}
[26.385468] (-) TimerEvent: {}
[26.485920] (-) TimerEvent: {}
[26.586304] (-) TimerEvent: {}
[26.687099] (-) TimerEvent: {}
[26.787571] (-) TimerEvent: {}
[26.887981] (-) TimerEvent: {}
[26.988546] (-) TimerEvent: {}
[27.089339] (-) TimerEvent: {}
[27.189817] (-) TimerEvent: {}
[27.290291] (-) TimerEvent: {}
[27.390751] (-) TimerEvent: {}
[27.491133] (-) TimerEvent: {}
[27.591888] (-) TimerEvent: {}
[27.692258] (-) TimerEvent: {}
[27.792797] (-) TimerEvent: {}
[27.893195] (-) TimerEvent: {}
[27.993770] (-) TimerEvent: {}
[28.094328] (-) TimerEvent: {}
[28.194864] (-) TimerEvent: {}
[28.295313] (-) TimerEvent: {}
[28.396049] (-) TimerEvent: {}
[28.496570] (-) TimerEvent: {}
[28.596981] (-) TimerEvent: {}
[28.697386] (-) TimerEvent: {}
[28.797932] (-) TimerEvent: {}
[28.898357] (-) TimerEvent: {}
[28.999084] (-) TimerEvent: {}
[29.099652] (-) TimerEvent: {}
[29.200147] (-) TimerEvent: {}
[29.300787] (-) TimerEvent: {}
[29.401282] (-) TimerEvent: {}
[29.501889] (-) TimerEvent: {}
[29.602251] (-) TimerEvent: {}
[29.703026] (-) TimerEvent: {}
[29.803941] (-) TimerEvent: {}
[29.904705] (-) TimerEvent: {}
[30.005374] (-) TimerEvent: {}
[30.105950] (-) TimerEvent: {}
[30.206424] (-) TimerEvent: {}
[30.306930] (-) TimerEvent: {}
[30.407379] (-) TimerEvent: {}
[30.507817] (-) TimerEvent: {}
[30.608286] (-) TimerEvent: {}
[30.709268] (-) TimerEvent: {}
[30.809872] (-) TimerEvent: {}
[30.910349] (-) TimerEvent: {}
[31.010781] (-) TimerEvent: {}
[31.111420] (-) TimerEvent: {}
[31.211914] (-) TimerEvent: {}
[31.312621] (-) TimerEvent: {}
[31.413053] (-) TimerEvent: {}
[31.513517] (-) TimerEvent: {}
[31.613865] (-) TimerEvent: {}
[31.714379] (-) TimerEvent: {}
[31.814855] (-) TimerEvent: {}
[31.915388] (-) TimerEvent: {}
[32.016091] (-) TimerEvent: {}
[32.116811] (-) TimerEvent: {}
[32.217283] (-) TimerEvent: {}
[32.317837] (-) TimerEvent: {}
[32.418274] (-) TimerEvent: {}
[32.518691] (-) TimerEvent: {}
[32.619290] (-) TimerEvent: {}
[32.719761] (-) TimerEvent: {}
[32.820267] (-) TimerEvent: {}
[32.920777] (-) TimerEvent: {}
[33.021346] (-) TimerEvent: {}
[33.121896] (-) TimerEvent: {}
[33.222524] (-) TimerEvent: {}
[33.322973] (-) TimerEvent: {}
[33.423381] (-) TimerEvent: {}
[33.523898] (-) TimerEvent: {}
[33.624355] (-) TimerEvent: {}
[33.724863] (-) TimerEvent: {}
[33.825563] (-) TimerEvent: {}
[33.925975] (-) TimerEvent: {}
[34.026415] (-) TimerEvent: {}
[34.127056] (-) TimerEvent: {}
[34.227506] (-) TimerEvent: {}
[34.327985] (-) TimerEvent: {}
[34.428421] (-) TimerEvent: {}
[34.530333] (-) TimerEvent: {}
[34.630936] (-) TimerEvent: {}
[34.739588] (-) TimerEvent: {}
[34.840011] (-) TimerEvent: {}
[34.940408] (-) TimerEvent: {}
[35.040866] (-) TimerEvent: {}
[35.141362] (-) TimerEvent: {}
[35.242121] (-) TimerEvent: {}
[35.342589] (-) TimerEvent: {}
[35.443175] (-) TimerEvent: {}
[35.543744] (-) TimerEvent: {}
[35.644112] (-) TimerEvent: {}
[35.744658] (-) TimerEvent: {}
[35.845077] (-) TimerEvent: {}
[35.945566] (-) TimerEvent: {}
[36.046125] (-) TimerEvent: {}
[36.146696] (-) TimerEvent: {}
[36.247083] (-) TimerEvent: {}
[36.347565] (-) TimerEvent: {}
[36.448577] (-) TimerEvent: {}
[36.549009] (-) TimerEvent: {}
[36.649746] (-) TimerEvent: {}
[36.750511] (-) TimerEvent: {}
[36.851961] (-) TimerEvent: {}
[36.952531] (-) TimerEvent: {}
[37.052932] (-) TimerEvent: {}
[37.153541] (-) TimerEvent: {}
[37.254233] (-) TimerEvent: {}
[37.354927] (-) TimerEvent: {}
[37.455622] (-) TimerEvent: {}
[37.556048] (-) TimerEvent: {}
[37.656448] (-) TimerEvent: {}
[37.756817] (-) TimerEvent: {}
[37.857182] (-) TimerEvent: {}
[37.957531] (-) TimerEvent: {}
[38.057926] (-) TimerEvent: {}
[38.158258] (-) TimerEvent: {}
[38.228653] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/new_target.dir/build.make:76: CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o] Error 1\n'}
[38.228958] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** Waiting for unfinished jobs....\n'}
[38.258463] (-) TimerEvent: {}
[38.358886] (-) TimerEvent: {}
[38.461091] (-) TimerEvent: {}
[38.476858] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/new_target.dir/build.make:90: CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o] Error 1\n'}
[38.477658] (inertial_sense_ros2) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:623: CMakeFiles/new_target.dir/all] Error 2\n'}
[38.478673] (inertial_sense_ros2) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[38.482374] (inertial_sense_ros2) CommandEnded: {'returncode': 2}
[38.561410] (-) TimerEvent: {}
[38.661809] (-) TimerEvent: {}
[38.762184] (-) TimerEvent: {}
[38.862534] (-) TimerEvent: {}
[38.962945] (-) TimerEvent: {}
[39.063371] (-) TimerEvent: {}
[39.163852] (-) TimerEvent: {}
[39.264286] (-) TimerEvent: {}
[39.365150] (-) TimerEvent: {}
[39.465677] (-) TimerEvent: {}
[39.566171] (-) TimerEvent: {}
[39.666629] (-) TimerEvent: {}
[39.767137] (-) TimerEvent: {}
[39.867620] (-) TimerEvent: {}
[39.968096] (-) TimerEvent: {}
[40.068650] (-) TimerEvent: {}
[40.169153] (-) TimerEvent: {}
[40.271890] (-) TimerEvent: {}
[40.372227] (-) TimerEvent: {}
[40.472768] (-) TimerEvent: {}
[40.574152] (-) TimerEvent: {}
[40.674601] (-) TimerEvent: {}
[40.775056] (-) TimerEvent: {}
[40.875513] (-) TimerEvent: {}
[40.976009] (-) TimerEvent: {}
[41.076458] (-) TimerEvent: {}
[41.177046] (-) TimerEvent: {}
[41.277660] (-) TimerEvent: {}
[41.378104] (-) TimerEvent: {}
[41.478601] (-) TimerEvent: {}
[41.579144] (-) TimerEvent: {}
[41.679658] (-) TimerEvent: {}
[41.780142] (-) TimerEvent: {}
[41.880604] (-) TimerEvent: {}
[41.981049] (-) TimerEvent: {}
[42.080274] (inertial_sense_ros2) JobEnded: {'identifier': 'inertial_sense_ros2', 'rc': 2}
[42.085239] (-) TimerEvent: {}
[42.085332] (-) EventReactorShutdown: {}
