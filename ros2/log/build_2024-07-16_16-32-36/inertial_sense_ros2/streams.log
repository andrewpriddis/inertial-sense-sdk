[0.044s] Invoking command in '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/jazzy DEBUGINFOD_URLS=https://debuginfod.ubuntu.com /usr/bin/cmake --build /home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2 -- -j16 -l16
[0.183s] -- Found std_msgs: 5.3.5 (/opt/ros/jazzy/share/std_msgs/cmake)
[0.270s] -- Found Python3: /usr/bin/python3 (found version "3.12.3") found components: Interpreter 
[0.615s] -- Found rosidl_generator_c: 4.6.2 (/opt/ros/jazzy/share/rosidl_generator_c/cmake)
[0.650s] -- Found rosidl_generator_cpp: 4.6.2 (/opt/ros/jazzy/share/rosidl_generator_cpp/cmake)
[0.691s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[0.743s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[0.839s] -- Found std_srvs: 5.3.5 (/opt/ros/jazzy/share/std_srvs/cmake)
[0.965s] -- Found geometry_msgs: 5.3.5 (/opt/ros/jazzy/share/geometry_msgs/cmake)
[1.020s] -- Found rclcpp: 28.1.2 (/opt/ros/jazzy/share/rclcpp/cmake)
[1.158s] -- Found rmw_implementation_cmake: 7.3.1 (/opt/ros/jazzy/share/rmw_implementation_cmake/cmake)
[1.163s] -- Found rmw_fastrtps_cpp: 8.4.0 (/opt/ros/jazzy/share/rmw_fastrtps_cpp/cmake)
[1.394s] -- Using RMW implementation 'rmw_fastrtps_cpp' as default
[1.613s] -- Found rclpy: 7.1.1 (/opt/ros/jazzy/share/rclpy/cmake)
[1.614s] -- Found sensor_msgs: 5.3.5 (/opt/ros/jazzy/share/sensor_msgs/cmake)
[1.701s] -- Found nav_msgs: 5.3.5 (/opt/ros/jazzy/share/nav_msgs/cmake)
[1.797s] -- Found diagnostic_msgs: 5.3.5 (/opt/ros/jazzy/share/diagnostic_msgs/cmake)
[1.861s] -- Found rosidl_default_generators: 1.6.0 (/opt/ros/jazzy/share/rosidl_default_generators/cmake)
[1.888s] -- Found rosidl_adapter: 4.6.2 (/opt/ros/jazzy/share/rosidl_adapter/cmake)
[1.894s] -- Found tf2: 0.36.4 (/opt/ros/jazzy/share/tf2/cmake)
[3.149s] -- Found ament_cmake_ros: 0.12.0 (/opt/ros/jazzy/share/ament_cmake_ros/cmake)
[4.281s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[4.719s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[4.725s] -- Found python_cmake_module: 0.11.1 (/opt/ros/jazzy/share/python_cmake_module/cmake)
[5.562s] -- Found Python3: /usr/bin/python3 (found version "3.12.3") found components: Interpreter Development NumPy Development.Module Development.Embed 
[5.729s] -- Configuring done (5.6s)
[6.031s] -- Generating done (0.2s)
[6.060s] -- Build files have been written to: /home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2
[6.226s] [  1%] Built target inertial_sense_ros2__rosidl_generator_type_description
[6.279s] [  1%] Built target ament_cmake_python_copy_inertial_sense_ros2
[6.325s] [  1%] Built target inertial_sense_ros2__cpp
[6.345s] [  2%] [32mBuilding CXX object CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o[0m
[6.349s] [  2%] [32mBuilding CXX object CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o[0m
[6.353s] [  3%] [32mBuilding CXX object CMakeFiles/new_target.dir/include/TopicHelper.cpp.o[0m
[6.420s] [ 29%] Built target inertial_sense_ros2__rosidl_generator_c
[6.610s] [ 39%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_c
[6.674s] [ 48%] Built target inertial_sense_ros2__rosidl_typesupport_c
[6.686s] [ 58%] Built target inertial_sense_ros2__rosidl_typesupport_cpp
[6.691s] [ 67%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_cpp
[6.693s] [ 77%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_c
[6.704s] [ 86%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_cpp
[6.788s] [ 86%] Built target inertial_sense_ros2
[6.884s] [ 87%] Built target inertial_sense_ros2__py
[7.082s] [ 96%] Built target inertial_sense_ros2__rosidl_generator_py
[7.120s] running egg_info
[7.197s] writing inertial_sense_ros2.egg-info/PKG-INFO
[7.200s] writing dependency_links to inertial_sense_ros2.egg-info/dependency_links.txt
[7.200s] writing top-level names to inertial_sense_ros2.egg-info/top_level.txt
[7.207s] [ 98%] Built target inertial_sense_ros2_s__rosidl_typesupport_introspection_c
[7.207s] [ 98%] Built target inertial_sense_ros2_s__rosidl_typesupport_fastrtps_c
[7.208s] [ 99%] Built target inertial_sense_ros2_s__rosidl_typesupport_c
[7.420s] reading manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'
[7.423s] writing manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'
[7.511s] [ 99%] Built target ament_cmake_python_build_inertial_sense_ros2_egg
[21.812s] In file included from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:20[m[K:
[21.812s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KinitializeROS[m[K()[m[Kâ€™:
[21.813s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:140:59:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[KTopicHelper[m[Kâ€™
[21.813s]   140 |     if (rs_.did_ins1.enabled)               { rs_.did_ins1[01;31m[K->[m[Kpub    = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS1>(rs_.did_ins1.topic, 1); }
[21.813s]       |                                                           [01;31m[K^~[m[K
[21.840s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[21.841s]   141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1[01;31m[K)[m[K; }
[21.843s]       |                                                                                                                                                     [01;31m[K^[m[K
[21.844s] In file included from [01m[K/usr/include/c++/13/memory:80[m[K,
[21.845s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/../src/yaml-cpp/parser.h:11[m[K,
[21.845s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/../src/yaml-cpp/yaml.h:10[m[K,
[21.845s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:26[m[K,
[21.846s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:19[m[K:
[21.846s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.846s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[21.846s]       |         [01;36m[K^~~~~~~~[m[K
[21.847s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.847s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.847s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.847s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K   required from here
[21.848s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.848s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.848s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.849s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.849s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[21.849s]       |         [01;36m[K^~~~~~~~[m[K
[21.850s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.850s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[21.850s]   141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1[01;36m[K)[m[K; }
[21.851s]       |                                                                                                                                                     [01;36m[K^[m[K
[21.851s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.851s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[21.852s]       |         [01;36m[K^~~~~~~~[m[K
[21.852s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.852s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.853s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.853s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K   required from here
[21.853s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.854s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.854s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.854s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.855s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[21.855s]       |         [01;36m[K^~~~~~~~[m[K
[21.855s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.856s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[21.856s]   141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1[01;36m[K)[m[K; }
[21.856s]       |                                                                                                                                                     [01;36m[K^[m[K
[21.856s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.857s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[21.857s]       |                   [01;36m[K^~~~~~~~[m[K
[21.857s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[21.857s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[21.858s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.858s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.858s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[21.858s]       |       [01;36m[K^~~~~~~~[m[K
[21.859s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[21.859s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[21.859s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[21.865s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[21.866s]   142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1[01;31m[K)[m[K; }
[21.867s]       |                                                                                                                                                     [01;31m[K^[m[K
[21.867s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.868s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[21.868s]       |         [01;36m[K^~~~~~~~[m[K
[21.868s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.869s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.869s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.869s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K   required from here
[21.869s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.870s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.870s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.870s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.871s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[21.871s]       |         [01;36m[K^~~~~~~~[m[K
[21.871s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.872s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[21.872s]   142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1[01;36m[K)[m[K; }
[21.872s]       |                                                                                                                                                     [01;36m[K^[m[K
[21.872s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.873s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[21.873s]       |         [01;36m[K^~~~~~~~[m[K
[21.873s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.874s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.874s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.874s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K   required from here
[21.874s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.875s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.875s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.875s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.876s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[21.876s]       |         [01;36m[K^~~~~~~~[m[K
[21.876s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.877s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[21.878s]   142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1[01;36m[K)[m[K; }
[21.878s]       |                                                                                                                                                     [01;36m[K^[m[K
[21.878s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.879s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[21.879s]       |                   [01;36m[K^~~~~~~~[m[K
[21.879s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[21.880s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[21.880s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.880s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.881s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[21.881s]       |       [01;36m[K^~~~~~~~[m[K
[21.882s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[21.882s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[21.882s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[21.888s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[21.889s]   143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1[01;31m[K)[m[K; }
[21.890s]       |                                                                                                                                               [01;31m[K^[m[K
[21.891s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.891s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[21.891s]       |         [01;36m[K^~~~~~~~[m[K
[21.892s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.894s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.895s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.895s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K   required from here
[21.896s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.896s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.896s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.897s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.897s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[21.897s]       |         [01;36m[K^~~~~~~~[m[K
[21.897s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.898s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[21.898s]   143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1[01;36m[K)[m[K; }
[21.899s]       |                                                                                                                                               [01;36m[K^[m[K
[21.899s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.899s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[21.900s]       |         [01;36m[K^~~~~~~~[m[K
[21.900s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.900s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.901s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.901s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K   required from here
[21.902s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.902s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.903s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.903s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.903s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[21.904s]       |         [01;36m[K^~~~~~~~[m[K
[21.904s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.904s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[21.905s]   143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1[01;36m[K)[m[K; }
[21.905s]       |                                                                                                                                               [01;36m[K^[m[K
[21.905s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.906s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[21.906s]       |                   [01;36m[K^~~~~~~~[m[K
[21.906s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[21.906s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[21.907s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.907s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.907s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[21.908s]       |       [01;36m[K^~~~~~~~[m[K
[21.908s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[21.908s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[21.909s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[21.910s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:143:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[21.910s]   144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1[01;31m[K)[m[K; }
[21.910s]       |                                                                                                                                               [01;31m[K^[m[K
[21.911s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.911s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[21.912s]       |         [01;36m[K^~~~~~~~[m[K
[21.912s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.913s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.913s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[21.913s]       |         [01;36m[K^~~~~~~~[m[K
[21.914s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.914s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:143:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[21.914s]   144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1[01;36m[K)[m[K; }
[21.915s]       |                                                                                                                                               [01;36m[K^[m[K
[21.915s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.915s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[21.916s]       |         [01;36m[K^~~~~~~~[m[K
[21.916s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.916s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.917s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[21.917s]       |         [01;36m[K^~~~~~~~[m[K
[21.917s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.918s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:143:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[21.919s]   144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1[01;36m[K)[m[K; }
[21.920s]       |                                                                                                                                               [01;36m[K^[m[K
[21.921s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.921s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[21.922s]       |                   [01;36m[K^~~~~~~~[m[K
[21.922s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[21.922s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[21.922s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.923s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.923s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[21.923s]       |       [01;36m[K^~~~~~~~[m[K
[21.924s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[21.924s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[21.924s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[21.925s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:144:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[21.925s]   145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.pub = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1[01;31m[K)[m[K; }
[21.925s]       |                                                                                                                                                [01;31m[K^[m[K
[21.926s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.926s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[21.926s]       |         [01;36m[K^~~~~~~~[m[K
[21.927s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.927s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.927s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[21.927s]       |         [01;36m[K^~~~~~~~[m[K
[21.928s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.928s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:144:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[21.929s]   145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.pub = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1[01;36m[K)[m[K; }
[21.929s]       |                                                                                                                                                [01;36m[K^[m[K
[21.929s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.930s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[21.930s]       |         [01;36m[K^~~~~~~~[m[K
[21.931s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.931s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.931s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[21.931s]       |         [01;36m[K^~~~~~~~[m[K
[21.932s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.932s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:144:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[21.933s]   145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.pub = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1[01;36m[K)[m[K; }
[21.933s]       |                                                                                                                                                [01;36m[K^[m[K
[21.934s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.934s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[21.934s]       |                   [01;36m[K^~~~~~~~[m[K
[21.935s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[21.935s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[21.935s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.936s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.936s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[21.936s]       |       [01;36m[K^~~~~~~~[m[K
[21.937s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[21.937s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[21.937s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[21.938s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[21.938s]   146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.pub   = nh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1[01;31m[K)[m[K; }
[21.939s]       |                                                                                                                                                           [01;31m[K^[m[K
[21.939s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.939s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[21.940s]       |         [01;36m[K^~~~~~~~[m[K
[21.940s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.940s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.941s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.944s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K   required from here
[21.944s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.945s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.945s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.946s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.946s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[21.947s]       |         [01;36m[K^~~~~~~~[m[K
[21.947s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.947s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[21.948s]   146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.pub   = nh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1[01;36m[K)[m[K; }
[21.948s]       |                                                                                                                                                           [01;36m[K^[m[K
[21.948s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.949s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[21.949s]       |         [01;36m[K^~~~~~~~[m[K
[21.950s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.950s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.951s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.952s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K   required from here
[21.952s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.952s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.953s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.953s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.953s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[21.954s]       |         [01;36m[K^~~~~~~~[m[K
[21.954s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.954s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[21.955s]   146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.pub   = nh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1[01;36m[K)[m[K; }
[21.955s]       |                                                                                                                                                           [01;36m[K^[m[K
[21.956s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.956s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[21.956s]       |                   [01;36m[K^~~~~~~~[m[K
[21.957s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[21.957s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[21.957s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.958s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.958s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[21.958s]       |       [01;36m[K^~~~~~~~[m[K
[21.959s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[21.959s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[21.959s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[21.960s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[21.960s]   148 |     if (rs_.pimu.enabled)                   { rs_.pimu.pub = nh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1[01;31m[K)[m[K; }
[21.960s]       |                                                                                                                                     [01;31m[K^[m[K
[21.961s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.961s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[21.961s]       |         [01;36m[K^~~~~~~~[m[K
[21.962s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.962s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.962s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.963s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K   required from here
[21.963s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.963s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.964s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.964s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.964s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[21.965s]       |         [01;36m[K^~~~~~~~[m[K
[21.965s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.966s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[21.967s]   148 |     if (rs_.pimu.enabled)                   { rs_.pimu.pub = nh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1[01;36m[K)[m[K; }
[21.969s]       |                                                                                                                                     [01;36m[K^[m[K
[21.970s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.970s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[21.970s]       |         [01;36m[K^~~~~~~~[m[K
[21.970s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.971s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.971s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.971s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K   required from here
[21.972s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.972s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.972s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.972s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.973s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[21.973s]       |         [01;36m[K^~~~~~~~[m[K
[21.973s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.974s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[21.974s]   148 |     if (rs_.pimu.enabled)                   { rs_.pimu.pub = nh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1[01;36m[K)[m[K; }
[21.974s]       |                                                                                                                                     [01;36m[K^[m[K
[21.975s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.975s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[21.975s]       |                   [01;36m[K^~~~~~~~[m[K
[21.976s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[21.976s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[21.976s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.976s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.977s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[21.978s]       |       [01;36m[K^~~~~~~~[m[K
[21.978s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[21.978s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[21.979s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[21.979s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[21.980s]   149 |     if (rs_.imu.enabled)                    { rs_.imu.pub = nh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1[01;31m[K)[m[K; }
[21.980s]       |                                                                                                                          [01;31m[K^[m[K
[21.980s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.981s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[21.981s]       |         [01;36m[K^~~~~~~~[m[K
[21.981s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.982s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.982s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.982s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K   required from here
[21.983s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.983s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.983s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.984s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.984s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[21.984s]       |         [01;36m[K^~~~~~~~[m[K
[21.984s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.985s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[21.985s]   149 |     if (rs_.imu.enabled)                    { rs_.imu.pub = nh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1[01;36m[K)[m[K; }
[21.985s]       |                                                                                                                          [01;36m[K^[m[K
[21.986s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.986s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[21.986s]       |         [01;36m[K^~~~~~~~[m[K
[21.987s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.987s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[21.988s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[21.988s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K   required from here
[21.988s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[21.988s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[21.989s]       |               [01;31m[K^~~~~~~~~~~[m[K
[21.989s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.989s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[21.990s]       |         [01;36m[K^~~~~~~~[m[K
[21.990s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.990s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[21.991s]   149 |     if (rs_.imu.enabled)                    { rs_.imu.pub = nh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1[01;36m[K)[m[K; }
[21.992s]       |                                                                                                                          [01;36m[K^[m[K
[21.993s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.994s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[21.995s]       |                   [01;36m[K^~~~~~~~[m[K
[21.995s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[21.996s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[21.996s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.996s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.996s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[21.997s]       |       [01;36m[K^~~~~~~~[m[K
[21.997s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[21.997s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[21.997s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[21.998s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[21.998s]   150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.pub = nh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1[01;31m[K)[m[K; }
[21.998s]       |                                                                                                                                                      [01;31m[K^[m[K
[21.999s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[21.999s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[21.999s]       |         [01;36m[K^~~~~~~~[m[K
[21.999s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.000s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.000s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.000s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K   required from here
[22.001s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.001s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.001s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.002s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.002s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.002s]       |         [01;36m[K^~~~~~~~[m[K
[22.003s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.003s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.004s]   150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.pub = nh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1[01;36m[K)[m[K; }
[22.004s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.005s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.005s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.005s]       |         [01;36m[K^~~~~~~~[m[K
[22.006s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.006s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.006s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.007s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K   required from here
[22.007s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.007s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.007s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.008s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.008s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.008s]       |         [01;36m[K^~~~~~~~[m[K
[22.009s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.009s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.009s]   150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.pub = nh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1[01;36m[K)[m[K; }
[22.009s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.010s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.010s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.010s]       |                   [01;36m[K^~~~~~~~[m[K
[22.011s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.011s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.011s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.012s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.012s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.013s]       |       [01;36m[K^~~~~~~~[m[K
[22.013s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.014s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.014s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.019s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.021s]   151 |     if (rs_.barometer.enabled)              { rs_.barometer.pub = nh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1[01;31m[K)[m[K; }
[22.021s]       |                                                                                                                                                [01;31m[K^[m[K
[22.021s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.021s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.022s]       |         [01;36m[K^~~~~~~~[m[K
[22.022s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.022s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.022s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.023s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K   required from here
[22.023s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.023s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.023s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.024s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.024s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.024s]       |         [01;36m[K^~~~~~~~[m[K
[22.025s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.025s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.025s]   151 |     if (rs_.barometer.enabled)              { rs_.barometer.pub = nh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1[01;36m[K)[m[K; }
[22.026s]       |                                                                                                                                                [01;36m[K^[m[K
[22.026s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.026s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.026s]       |         [01;36m[K^~~~~~~~[m[K
[22.027s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.027s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.027s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.028s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K   required from here
[22.028s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.028s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.029s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.029s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.029s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.030s]       |         [01;36m[K^~~~~~~~[m[K
[22.030s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.030s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.031s]   151 |     if (rs_.barometer.enabled)              { rs_.barometer.pub = nh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1[01;36m[K)[m[K; }
[22.031s]       |                                                                                                                                                [01;36m[K^[m[K
[22.031s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.032s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.032s]       |                   [01;36m[K^~~~~~~~[m[K
[22.032s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.032s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.033s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.033s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.033s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.034s]       |       [01;36m[K^~~~~~~~[m[K
[22.034s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.034s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.035s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.043s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.045s]   153 |     if (rs_.gps1.enabled)                   { rs_.gps1.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1[01;31m[K)[m[K; }
[22.045s]       |                                                                                                                                    [01;31m[K^[m[K
[22.046s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.047s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.047s]       |         [01;36m[K^~~~~~~~[m[K
[22.048s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.048s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.048s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.049s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K   required from here
[22.049s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.049s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.050s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.050s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.050s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.051s]       |         [01;36m[K^~~~~~~~[m[K
[22.051s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.051s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.052s]   153 |     if (rs_.gps1.enabled)                   { rs_.gps1.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1[01;36m[K)[m[K; }
[22.052s]       |                                                                                                                                    [01;36m[K^[m[K
[22.052s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.053s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.053s]       |         [01;36m[K^~~~~~~~[m[K
[22.053s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.053s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.054s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.054s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K   required from here
[22.054s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.055s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.055s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.055s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.056s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.056s]       |         [01;36m[K^~~~~~~~[m[K
[22.056s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.056s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.057s]   153 |     if (rs_.gps1.enabled)                   { rs_.gps1.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1[01;36m[K)[m[K; }
[22.057s]       |                                                                                                                                    [01;36m[K^[m[K
[22.057s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.057s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.058s]       |                   [01;36m[K^~~~~~~~[m[K
[22.058s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.058s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.059s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.059s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.059s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.060s]       |       [01;36m[K^~~~~~~~[m[K
[22.060s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.060s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.061s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.061s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KinitializeROS[m[K()[m[Kâ€™:
[22.061s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:140:59:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[KTopicHelper[m[Kâ€™
[22.062s]   140 |     if (rs_.did_ins1.enabled)               { rs_.did_ins1[01;31m[K->[m[Kpub    = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS1>(rs_.did_ins1.topic, 1); }
[22.062s]       |                                                           [01;31m[K^~[m[K
[22.070s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.070s]   154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1[01;31m[K)[m[K; }
[22.071s]       |                                                                                                                                                      [01;31m[K^[m[K
[22.071s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.071s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.071s]       |         [01;36m[K^~~~~~~~[m[K
[22.072s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.072s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.072s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.073s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K   required from here
[22.073s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.073s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.073s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.074s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.074s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.075s]       |         [01;36m[K^~~~~~~~[m[K
[22.075s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.076s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.076s]   154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1[01;36m[K)[m[K; }
[22.076s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.078s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.079s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.079s]       |         [01;36m[K^~~~~~~~[m[K
[22.080s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.080s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.081s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.081s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K   required from here
[22.081s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.082s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.082s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.083s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.083s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.083s]       |         [01;36m[K^~~~~~~~[m[K
[22.084s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.084s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.084s]   154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1[01;36m[K)[m[K; }
[22.085s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.085s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.086s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.086s]       |                   [01;36m[K^~~~~~~~[m[K
[22.086s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.088s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.088s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.089s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.089s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.089s]       |       [01;36m[K^~~~~~~~[m[K
[22.090s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.090s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.090s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.091s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.091s]   141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1[01;31m[K)[m[K; }
[22.091s]       |                                                                                                                                                     [01;31m[K^[m[K
[22.092s] In file included from [01m[K/usr/include/c++/13/memory:80[m[K,
[22.092s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/../src/yaml-cpp/parser.h:11[m[K,
[22.093s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/../src/yaml-cpp/yaml.h:10[m[K,
[22.093s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:26[m[K,
[22.093s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:19[m[K:
[22.094s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.094s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.095s]       |         [01;36m[K^~~~~~~~[m[K
[22.096s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.098s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.100s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.102s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K   required from here
[22.103s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.105s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.105s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.106s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.108s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.108s]       |         [01;36m[K^~~~~~~~[m[K
[22.109s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.109s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.110s]   141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1[01;36m[K)[m[K; }
[22.110s]       |                                                                                                                                                     [01;36m[K^[m[K
[22.111s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.111s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.111s]       |         [01;36m[K^~~~~~~~[m[K
[22.112s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.112s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.112s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.113s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K   required from here
[22.113s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.113s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.114s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.114s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.115s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.115s]       |         [01;36m[K^~~~~~~~[m[K
[22.115s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.116s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:149:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.116s]   141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1[01;36m[K)[m[K; }
[22.116s]       |                                                                                                                                                     [01;36m[K^[m[K
[22.118s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.119s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.120s]       |                   [01;36m[K^~~~~~~~[m[K
[22.121s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.122s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.122s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.122s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.123s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.123s]       |       [01;36m[K^~~~~~~~[m[K
[22.123s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.124s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.124s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.124s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.125s]   155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1[01;31m[K)[m[K; }
[22.125s]       |                                                                                                                                                  [01;31m[K^[m[K
[22.125s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.126s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.126s]       |         [01;36m[K^~~~~~~~[m[K
[22.126s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.126s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.127s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.127s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K   required from here
[22.127s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.128s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.128s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.128s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.129s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.129s]       |         [01;36m[K^~~~~~~~[m[K
[22.129s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.130s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.132s]   155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1[01;36m[K)[m[K; }
[22.132s]       |                                                                                                                                                  [01;36m[K^[m[K
[22.134s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.136s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.137s]       |         [01;36m[K^~~~~~~~[m[K
[22.138s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.139s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.139s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.139s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K   required from here
[22.140s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.140s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.140s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.141s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.141s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.141s]       |         [01;36m[K^~~~~~~~[m[K
[22.141s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.142s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.142s]   155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1[01;36m[K)[m[K; }
[22.142s]       |                                                                                                                                                  [01;36m[K^[m[K
[22.143s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.143s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.143s]       |                   [01;36m[K^~~~~~~~[m[K
[22.144s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.144s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.144s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.145s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.145s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.145s]       |       [01;36m[K^~~~~~~~[m[K
[22.146s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.146s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.146s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.146s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:132:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.147s]   157 |     if (rs_.gps2.enabled)                   { rs_.gps2.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1[01;31m[K)[m[K; }
[22.147s]       |                                                                                                                                    [01;31m[K^[m[K
[22.147s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.148s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.148s]       |         [01;36m[K^~~~~~~~[m[K
[22.148s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.148s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.149s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.149s]       |         [01;36m[K^~~~~~~~[m[K
[22.149s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.150s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:132:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.150s]   157 |     if (rs_.gps2.enabled)                   { rs_.gps2.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1[01;36m[K)[m[K; }
[22.150s]       |                                                                                                                                    [01;36m[K^[m[K
[22.151s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.151s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.151s]       |         [01;36m[K^~~~~~~~[m[K
[22.152s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.152s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.152s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.153s]       |         [01;36m[K^~~~~~~~[m[K
[22.153s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.153s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:132:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.154s]   157 |     if (rs_.gps2.enabled)                   { rs_.gps2.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1[01;36m[K)[m[K; }
[22.154s]       |                                                                                                                                    [01;36m[K^[m[K
[22.154s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.155s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.155s]       |                   [01;36m[K^~~~~~~~[m[K
[22.155s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.156s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.156s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.156s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.156s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.157s]       |       [01;36m[K^~~~~~~~[m[K
[22.157s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.158s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.158s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.158s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:150:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.159s]   158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1[01;31m[K)[m[K; }
[22.159s]       |                                                                                                                                                      [01;31m[K^[m[K
[22.159s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.160s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.162s]       |         [01;36m[K^~~~~~~~[m[K
[22.163s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.164s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.164s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.164s]       |         [01;36m[K^~~~~~~~[m[K
[22.165s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.165s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.165s]   158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1[01;36m[K)[m[K; }
[22.165s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.166s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.166s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.166s]       |         [01;36m[K^~~~~~~~[m[K
[22.167s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.167s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.167s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.168s]       |         [01;36m[K^~~~~~~~[m[K
[22.168s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.168s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.168s]   158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1[01;36m[K)[m[K; }
[22.169s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.169s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.169s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.170s]       |                   [01;36m[K^~~~~~~~[m[K
[22.170s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.170s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.171s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.171s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.171s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.171s]       |       [01;36m[K^~~~~~~~[m[K
[22.172s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.172s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.172s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.172s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.173s]   142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1[01;31m[K)[m[K; }
[22.173s]       |                                                                                                                                                     [01;31m[K^[m[K
[22.173s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.174s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.174s]       |         [01;36m[K^~~~~~~~[m[K
[22.174s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.174s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:146:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.175s]   159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1[01;31m[K)[m[K; }
[22.175s]       |                                                                                                                                                  [01;31m[K^[m[K
[22.175s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.175s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.176s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K   required from here
[22.176s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.176s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.176s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.177s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.178s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.178s]       |         [01;36m[K^~~~~~~~[m[K
[22.178s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.179s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.179s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.179s]       |         [01;36m[K^~~~~~~~[m[K
[22.180s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.180s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.180s]       |         [01;36m[K^~~~~~~~[m[K
[22.181s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.181s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.181s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:146:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.182s]   159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1[01;36m[K)[m[K; }
[22.182s]       |                                                                                                                                                  [01;36m[K^[m[K
[22.182s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.182s]   142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1[01;36m[K)[m[K; }
[22.183s]       |                                                                                                                                                     [01;36m[K^[m[K
[22.183s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.183s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.183s]       |         [01;36m[K^~~~~~~~[m[K
[22.184s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.184s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.184s]       |         [01;36m[K^~~~~~~~[m[K
[22.185s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.185s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.186s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.187s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.187s]       |         [01;36m[K^~~~~~~~[m[K
[22.187s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.188s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.188s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.188s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K   required from here
[22.189s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.189s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.189s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.190s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:146:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.190s]   159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1[01;36m[K)[m[K; }
[22.190s]       |                                                                                                                                                  [01;36m[K^[m[K
[22.190s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.191s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.191s]       |                   [01;36m[K^~~~~~~~[m[K
[22.191s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.191s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.192s]       |         [01;36m[K^~~~~~~~[m[K
[22.192s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.192s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.193s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.193s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.193s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.193s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.194s]       |       [01;36m[K^~~~~~~~[m[K
[22.194s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.194s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.195s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.195s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:149:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.195s]   142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.pub      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1[01;36m[K)[m[K; }
[22.195s]       |                                                                                                                                                     [01;36m[K^[m[K
[22.196s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.196s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.196s]       |                   [01;36m[K^~~~~~~~[m[K
[22.197s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.197s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.197s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.198s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.198s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.198s]       |       [01;36m[K^~~~~~~~[m[K
[22.198s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.199s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.199s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.199s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™)
[22.200s]   188 |         rs_.gpsbase_raw.pubObs = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50[01;31m[K)[m[K;
[22.200s]       |                                                                                                                       [01;31m[K^[m[K
[22.200s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.201s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.201s]       |         [01;36m[K^~~~~~~~[m[K
[22.201s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.202s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >&; _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.202s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > >][m[K[m[Kâ€™
[22.203s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K   required from here
[22.203s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >&>[m[Kâ€™
[22.204s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.204s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.205s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.205s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.205s]       |         [01;36m[K^~~~~~~~[m[K
[22.206s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.206s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.206s]   188 |         rs_.gpsbase_raw.pubObs = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50[01;36m[K)[m[K;
[22.207s]       |                                                                                                                       [01;36m[K^[m[K
[22.207s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.207s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.207s]       |         [01;36m[K^~~~~~~~[m[K
[22.208s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.208s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >; _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.210s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > >][m[K[m[Kâ€™
[22.211s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K   required from here
[22.211s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >&>[m[Kâ€™
[22.212s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.212s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.212s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.213s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.213s]       |         [01;36m[K^~~~~~~~[m[K
[22.214s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.214s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.214s]   188 |         rs_.gpsbase_raw.pubObs = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50[01;36m[K)[m[K;
[22.215s]       |                                                                                                                       [01;36m[K^[m[K
[22.215s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.215s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.216s]       |                   [01;36m[K^~~~~~~~[m[K
[22.216s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >&[m[Kâ€™
[22.216s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.216s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.217s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.217s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.217s]       |       [01;36m[K^~~~~~~~[m[K
[22.217s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >&&[m[Kâ€™
[22.218s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.218s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.218s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.219s]   143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1[01;31m[K)[m[K; }
[22.219s]       |                                                                                                                                               [01;31m[K^[m[K
[22.219s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.220s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.220s]       |         [01;36m[K^~~~~~~~[m[K
[22.220s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.220s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.221s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.221s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K   required from here
[22.221s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.222s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.222s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.222s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.222s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.223s]       |         [01;36m[K^~~~~~~~[m[K
[22.223s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.223s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.224s]   143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1[01;36m[K)[m[K; }
[22.224s]       |                                                                                                                                               [01;36m[K^[m[K
[22.224s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.225s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.225s]       |         [01;36m[K^~~~~~~~[m[K
[22.225s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.225s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.226s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.226s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K   required from here
[22.226s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.227s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.227s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.227s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.227s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.228s]       |         [01;36m[K^~~~~~~~[m[K
[22.228s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.228s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:143:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.228s]   143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1[01;36m[K)[m[K; }
[22.229s]       |                                                                                                                                               [01;36m[K^[m[K
[22.229s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.230s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.230s]       |                   [01;36m[K^~~~~~~~[m[K
[22.230s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.230s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.231s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.231s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.231s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.231s]       |       [01;36m[K^~~~~~~~[m[K
[22.232s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.232s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.233s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.234s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:143:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.235s]   144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1[01;31m[K)[m[K; }
[22.236s]       |                                                                                                                                               [01;31m[K^[m[K
[22.236s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.236s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.237s]       |         [01;36m[K^~~~~~~~[m[K
[22.237s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.237s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.238s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.238s]       |         [01;36m[K^~~~~~~~[m[K
[22.238s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.239s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:143:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.239s]   144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1[01;36m[K)[m[K; }
[22.239s]       |                                                                                                                                               [01;36m[K^[m[K
[22.240s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.240s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.240s]       |         [01;36m[K^~~~~~~~[m[K
[22.240s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.241s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.241s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.241s]       |         [01;36m[K^~~~~~~~[m[K
[22.242s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.242s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:143:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.242s]   144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.pub  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1[01;36m[K)[m[K; }
[22.242s]       |                                                                                                                                               [01;36m[K^[m[K
[22.243s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.243s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.243s]       |                   [01;36m[K^~~~~~~~[m[K
[22.243s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.244s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.244s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.244s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.245s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.245s]       |       [01;36m[K^~~~~~~~[m[K
[22.245s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.246s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.246s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.246s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:144:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.247s]   145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.pub = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1[01;31m[K)[m[K; }
[22.247s]       |                                                                                                                                                [01;31m[K^[m[K
[22.247s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.247s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.248s]       |         [01;36m[K^~~~~~~~[m[K
[22.248s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.248s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.248s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.249s]       |         [01;36m[K^~~~~~~~[m[K
[22.249s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.249s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:144:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.250s]   145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.pub = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1[01;36m[K)[m[K; }
[22.250s]       |                                                                                                                                                [01;36m[K^[m[K
[22.250s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.250s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.251s]       |         [01;36m[K^~~~~~~~[m[K
[22.251s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.251s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.252s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.252s]       |         [01;36m[K^~~~~~~~[m[K
[22.252s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.253s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:144:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.253s]   145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.pub = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1[01;36m[K)[m[K; }
[22.253s]       |                                                                                                                                                [01;36m[K^[m[K
[22.254s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.254s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.254s]       |                   [01;36m[K^~~~~~~~[m[K
[22.254s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.255s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.255s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.256s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.256s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.256s]       |       [01;36m[K^~~~~~~~[m[K
[22.257s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.257s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.257s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.258s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.258s]   146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.pub   = nh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1[01;31m[K)[m[K; }
[22.258s]       |                                                                                                                                                           [01;31m[K^[m[K
[22.258s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.259s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.259s]       |         [01;36m[K^~~~~~~~[m[K
[22.259s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.261s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.262s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.263s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K   required from here
[22.263s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.263s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.264s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.264s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.264s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.265s]       |         [01;36m[K^~~~~~~~[m[K
[22.265s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.266s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.266s]   146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.pub   = nh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1[01;36m[K)[m[K; }
[22.266s]       |                                                                                                                                                           [01;36m[K^[m[K
[22.266s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.267s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.267s]       |         [01;36m[K^~~~~~~~[m[K
[22.267s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.268s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.268s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.268s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K   required from here
[22.269s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.269s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.269s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.270s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.270s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.270s]       |         [01;36m[K^~~~~~~~[m[K
[22.271s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.271s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:155:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.271s]   146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.pub   = nh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1[01;36m[K)[m[K; }
[22.272s]       |                                                                                                                                                           [01;36m[K^[m[K
[22.272s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.272s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.272s]       |                   [01;36m[K^~~~~~~~[m[K
[22.273s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.273s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.273s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.274s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.274s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.274s]       |       [01;36m[K^~~~~~~~[m[K
[22.275s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.275s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.275s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.276s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.276s]   148 |     if (rs_.pimu.enabled)                   { rs_.pimu.pub = nh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1[01;31m[K)[m[K; }
[22.276s]       |                                                                                                                                     [01;31m[K^[m[K
[22.276s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.277s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.278s]       |         [01;36m[K^~~~~~~~[m[K
[22.278s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.278s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.279s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.279s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K   required from here
[22.280s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.280s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.280s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.281s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.281s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.282s]       |         [01;36m[K^~~~~~~~[m[K
[22.282s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.282s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.283s]   148 |     if (rs_.pimu.enabled)                   { rs_.pimu.pub = nh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1[01;36m[K)[m[K; }
[22.283s]       |                                                                                                                                     [01;36m[K^[m[K
[22.283s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.284s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.284s]       |         [01;36m[K^~~~~~~~[m[K
[22.284s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.284s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.285s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.285s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K   required from here
[22.287s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.288s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.289s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.289s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.289s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.290s]       |         [01;36m[K^~~~~~~~[m[K
[22.290s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.290s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:133:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.291s]   148 |     if (rs_.pimu.enabled)                   { rs_.pimu.pub = nh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1[01;36m[K)[m[K; }
[22.291s]       |                                                                                                                                     [01;36m[K^[m[K
[22.291s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.292s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.292s]       |                   [01;36m[K^~~~~~~~[m[K
[22.292s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.292s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.293s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.293s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.293s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.294s]       |       [01;36m[K^~~~~~~~[m[K
[22.294s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.294s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.294s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.295s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.295s]   149 |     if (rs_.imu.enabled)                    { rs_.imu.pub = nh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1[01;31m[K)[m[K; }
[22.295s]       |                                                                                                                          [01;31m[K^[m[K
[22.296s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.296s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.296s]       |         [01;36m[K^~~~~~~~[m[K
[22.297s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.297s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.297s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.298s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K   required from here
[22.298s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.298s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.298s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.299s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.299s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.299s]       |         [01;36m[K^~~~~~~~[m[K
[22.300s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.300s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.300s]   149 |     if (rs_.imu.enabled)                    { rs_.imu.pub = nh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1[01;36m[K)[m[K; }
[22.301s]       |                                                                                                                          [01;36m[K^[m[K
[22.301s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.301s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.302s]       |         [01;36m[K^~~~~~~~[m[K
[22.302s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.303s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.303s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.304s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K   required from here
[22.304s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.304s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.305s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.305s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.305s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.306s]       |         [01;36m[K^~~~~~~~[m[K
[22.306s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.306s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:122:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.307s]   149 |     if (rs_.imu.enabled)                    { rs_.imu.pub = nh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1[01;36m[K)[m[K; }
[22.307s]       |                                                                                                                          [01;36m[K^[m[K
[22.307s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.308s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.308s]       |                   [01;36m[K^~~~~~~~[m[K
[22.308s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.308s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.309s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.309s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.309s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.310s]       |       [01;36m[K^~~~~~~~[m[K
[22.310s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.311s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.311s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.312s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.314s]   150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.pub = nh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1[01;31m[K)[m[K; }
[22.315s]       |                                                                                                                                                      [01;31m[K^[m[K
[22.316s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.316s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.316s]       |         [01;36m[K^~~~~~~~[m[K
[22.316s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.317s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.317s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.317s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K   required from here
[22.318s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.318s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.318s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.319s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.319s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.319s]       |         [01;36m[K^~~~~~~~[m[K
[22.320s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.320s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.320s]   150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.pub = nh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1[01;36m[K)[m[K; }
[22.321s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.321s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.322s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.322s]       |         [01;36m[K^~~~~~~~[m[K
[22.322s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.323s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.323s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.323s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K   required from here
[22.324s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.324s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.325s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.325s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.325s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.326s]       |         [01;36m[K^~~~~~~~[m[K
[22.326s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.326s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.326s]   150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.pub = nh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1[01;36m[K)[m[K; }
[22.327s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.327s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.327s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.328s]       |                   [01;36m[K^~~~~~~~[m[K
[22.328s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.328s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.329s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.329s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.330s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.330s]       |       [01;36m[K^~~~~~~~[m[K
[22.330s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.331s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.331s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.331s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.331s]   151 |     if (rs_.barometer.enabled)              { rs_.barometer.pub = nh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1[01;31m[K)[m[K; }
[22.332s]       |                                                                                                                                                [01;31m[K^[m[K
[22.332s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.332s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.333s]       |         [01;36m[K^~~~~~~~[m[K
[22.333s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.333s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.334s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.334s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K   required from here
[22.334s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.335s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.335s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.338s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.338s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.339s]       |         [01;36m[K^~~~~~~~[m[K
[22.341s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.341s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.343s]   151 |     if (rs_.barometer.enabled)              { rs_.barometer.pub = nh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1[01;36m[K)[m[K; }
[22.344s]       |                                                                                                                                                [01;36m[K^[m[K
[22.346s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.346s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.348s]       |         [01;36m[K^~~~~~~~[m[K
[22.348s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.348s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.349s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.349s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K   required from here
[22.349s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.350s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.350s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.350s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.350s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.351s]       |         [01;36m[K^~~~~~~~[m[K
[22.351s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.351s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:144:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.352s]   151 |     if (rs_.barometer.enabled)              { rs_.barometer.pub = nh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1[01;36m[K)[m[K; }
[22.352s]       |                                                                                                                                                [01;36m[K^[m[K
[22.352s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.353s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.353s]       |                   [01;36m[K^~~~~~~~[m[K
[22.353s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.353s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.354s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.354s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.354s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.355s]       |       [01;36m[K^~~~~~~~[m[K
[22.355s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::FluidPressure_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.355s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.356s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.356s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.356s]   153 |     if (rs_.gps1.enabled)                   { rs_.gps1.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1[01;31m[K)[m[K; }
[22.356s]       |                                                                                                                                    [01;31m[K^[m[K
[22.357s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.357s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.357s]       |         [01;36m[K^~~~~~~~[m[K
[22.358s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.358s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.359s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.359s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K   required from here
[22.360s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.361s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.362s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.362s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.362s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.363s]       |         [01;36m[K^~~~~~~~[m[K
[22.363s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.363s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.364s]   153 |     if (rs_.gps1.enabled)                   { rs_.gps1.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1[01;36m[K)[m[K; }
[22.364s]       |                                                                                                                                    [01;36m[K^[m[K
[22.364s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.365s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.365s]       |         [01;36m[K^~~~~~~~[m[K
[22.365s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.366s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.366s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.366s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K   required from here
[22.367s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.367s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.368s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.368s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.369s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.369s]       |         [01;36m[K^~~~~~~~[m[K
[22.369s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.370s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:132:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.370s]   153 |     if (rs_.gps1.enabled)                   { rs_.gps1.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1[01;36m[K)[m[K; }
[22.370s]       |                                                                                                                                    [01;36m[K^[m[K
[22.371s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.371s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.371s]       |                   [01;36m[K^~~~~~~~[m[K
[22.372s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.372s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.372s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.372s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.373s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.373s]       |       [01;36m[K^~~~~~~~[m[K
[22.373s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.374s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.374s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.374s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.375s]   154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1[01;31m[K)[m[K; }
[22.375s]       |                                                                                                                                                      [01;31m[K^[m[K
[22.375s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.376s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.376s]       |         [01;36m[K^~~~~~~~[m[K
[22.376s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.377s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.377s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.378s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K   required from here
[22.378s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.378s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.379s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.379s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.379s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.380s]       |         [01;36m[K^~~~~~~~[m[K
[22.380s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.380s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.381s]   154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1[01;36m[K)[m[K; }
[22.381s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.381s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.382s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.382s]       |         [01;36m[K^~~~~~~~[m[K
[22.382s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.382s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.383s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.383s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K   required from here
[22.383s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.384s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.384s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.384s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.385s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.385s]       |         [01;36m[K^~~~~~~~[m[K
[22.385s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.386s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.386s]   154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1[01;36m[K)[m[K; }
[22.386s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.387s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.387s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.387s]       |                   [01;36m[K^~~~~~~~[m[K
[22.387s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.388s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.388s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.388s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.388s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.389s]       |       [01;36m[K^~~~~~~~[m[K
[22.389s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.389s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.390s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.390s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.390s]   155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1[01;31m[K)[m[K; }
[22.390s]       |                                                                                                                                                  [01;31m[K^[m[K
[22.391s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.391s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.391s]       |         [01;36m[K^~~~~~~~[m[K
[22.392s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.392s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.392s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.392s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K   required from here
[22.393s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.393s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.393s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.393s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.394s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.394s]       |         [01;36m[K^~~~~~~~[m[K
[22.394s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.394s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.395s]   155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1[01;36m[K)[m[K; }
[22.395s]       |                                                                                                                                                  [01;36m[K^[m[K
[22.395s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.396s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.396s]       |         [01;36m[K^~~~~~~~[m[K
[22.396s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.397s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.397s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >][m[K[m[Kâ€™
[22.397s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K   required from here
[22.397s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&>[m[Kâ€™
[22.398s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.398s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.398s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.399s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.399s]       |         [01;36m[K^~~~~~~~[m[K
[22.399s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.399s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:146:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.400s]   155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1[01;36m[K)[m[K; }
[22.400s]       |                                                                                                                                                  [01;36m[K^[m[K
[22.401s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.401s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.401s]       |                   [01;36m[K^~~~~~~~[m[K
[22.401s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.402s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.402s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.402s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.403s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.403s]       |       [01;36m[K^~~~~~~~[m[K
[22.403s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.404s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.404s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.405s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:132:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.405s]   157 |     if (rs_.gps2.enabled)                   { rs_.gps2.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1[01;31m[K)[m[K; }
[22.406s]       |                                                                                                                                    [01;31m[K^[m[K
[22.406s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.406s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.407s]       |         [01;36m[K^~~~~~~~[m[K
[22.407s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.407s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.407s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.408s]       |         [01;36m[K^~~~~~~~[m[K
[22.408s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.408s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:132:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.409s]   157 |     if (rs_.gps2.enabled)                   { rs_.gps2.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1[01;36m[K)[m[K; }
[22.410s]       |                                                                                                                                    [01;36m[K^[m[K
[22.410s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.410s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.411s]       |         [01;36m[K^~~~~~~~[m[K
[22.411s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.411s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.412s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.412s]       |         [01;36m[K^~~~~~~~[m[K
[22.412s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.412s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:132:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.413s]   157 |     if (rs_.gps2.enabled)                   { rs_.gps2.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1[01;36m[K)[m[K; }
[22.413s]       |                                                                                                                                    [01;36m[K^[m[K
[22.413s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.414s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.414s]       |                   [01;36m[K^~~~~~~~[m[K
[22.414s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.415s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.415s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.415s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.416s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.417s]       |       [01;36m[K^~~~~~~~[m[K
[22.417s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.417s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.418s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.418s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:150:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.418s]   158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1[01;31m[K)[m[K; }
[22.419s]       |                                                                                                                                                      [01;31m[K^[m[K
[22.419s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.419s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.420s]       |         [01;36m[K^~~~~~~~[m[K
[22.420s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.420s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.421s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.421s]       |         [01;36m[K^~~~~~~~[m[K
[22.421s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.422s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.422s]   158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1[01;36m[K)[m[K; }
[22.422s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.422s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.423s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.423s]       |         [01;36m[K^~~~~~~~[m[K
[22.423s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.423s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.424s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.424s]       |         [01;36m[K^~~~~~~~[m[K
[22.424s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.424s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:150:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.425s]   158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.pub = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1[01;36m[K)[m[K; }
[22.425s]       |                                                                                                                                                      [01;36m[K^[m[K
[22.425s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.426s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.426s]       |                   [01;36m[K^~~~~~~~[m[K
[22.426s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.427s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.427s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.427s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.427s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.428s]       |       [01;36m[K^~~~~~~~[m[K
[22.428s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.428s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.429s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.429s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:146:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™)
[22.429s]   159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1[01;31m[K)[m[K; }
[22.429s]       |                                                                                                                                                  [01;31m[K^[m[K
[22.430s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.430s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.430s]       |         [01;36m[K^~~~~~~~[m[K
[22.431s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.431s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.431s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.432s]       |         [01;36m[K^~~~~~~~[m[K
[22.432s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.432s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:146:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.432s]   159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1[01;36m[K)[m[K; }
[22.433s]       |                                                                                                                                                  [01;36m[K^[m[K
[22.433s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.433s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.434s]       |         [01;36m[K^~~~~~~~[m[K
[22.434s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.434s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.435s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.435s]       |         [01;36m[K^~~~~~~~[m[K
[22.435s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.436s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:146:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.436s]   159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.pub = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1[01;36m[K)[m[K; }
[22.436s]       |                                                                                                                                                  [01;36m[K^[m[K
[22.437s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.437s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.437s]       |                   [01;36m[K^~~~~~~~[m[K
[22.437s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&[m[Kâ€™
[22.438s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.438s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.438s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >][m[K[m[Kâ€™
[22.439s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.439s]       |       [01;36m[K^~~~~~~~[m[K
[22.439s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >&&[m[Kâ€™
[22.439s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.440s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.440s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™)
[22.440s]   188 |         rs_.gpsbase_raw.pubObs = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50[01;31m[K)[m[K;
[22.441s]       |                                                                                                                       [01;31m[K^[m[K
[22.441s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Yp>&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.441s]   418 |         [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[22.442s]       |         [01;36m[K^~~~~~~~[m[K
[22.442s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.442s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = const std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >&; _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.442s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:418:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > >][m[K[m[Kâ€™
[22.443s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K   required from here
[22.443s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >&>[m[Kâ€™
[22.443s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.444s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.444s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::auto_ptr<_Up>&&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.444s]   429 |         [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[22.444s]       |         [01;36m[K^~~~~~~~[m[K
[22.445s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:429:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.445s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[22.445s]   188 |         rs_.gpsbase_raw.pubObs = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50[01;36m[K)[m[K;
[22.446s]       |                                                                                                                       [01;36m[K^[m[K
[22.446s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Yp>&&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.446s]   446 |         [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[22.446s]       |         [01;36m[K^~~~~~~~[m[K
[22.447s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.447s] /usr/include/c++/13/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using std::shared_ptr<_Tp>::_Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [35m[K[with _Arg = std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >; _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™:
[22.447s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:446:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Yp = rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > >][m[K[m[Kâ€™
[22.448s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K   required from here
[22.448s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:183:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >&>[m[Kâ€™
[22.448s]   183 |         using [01;31m[K_Assignable[m[K = typename enable_if<
[22.449s]       |               [01;31m[K^~~~~~~~~~~[m[K
[22.449s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::unique_ptr<_Up, _Ep>&&) [35m[K[with _Del = _Yp; _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.449s]   454 |         [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[22.450s]       |         [01;36m[K^~~~~~~~[m[K
[22.450s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:454:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.450s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:119:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[22.451s]   188 |         rs_.gpsbase_raw.pubObs = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50[01;36m[K)[m[K;
[22.451s]       |                                                                                                                       [01;36m[K^[m[K
[22.451s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(const std::shared_ptr<_Tp>&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.451s]   414 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[22.452s]       |                   [01;36m[K^~~~~~~~[m[K
[22.452s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:414:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >&[m[Kâ€™
[22.452s]   414 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[22.453s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[22.453s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::[01;32m[Koperator=[m[K(std::shared_ptr<_Tp>&&) [35m[K[with _Tp = rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >][m[K[m[Kâ€™
[22.453s]   438 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[22.453s]       |       [01;36m[K^~~~~~~~[m[K
[22.454s] [01m[K/usr/include/c++/13/bits/shared_ptr.h:438:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris_<std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >&&[m[Kâ€™
[22.454s]   438 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[22.454s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[22.455s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kbool InertialSenseROS::[01;32m[Kfirmware_compatiblity_check[m[K()[m[Kâ€™:
[22.455s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[22.455s]   568 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K protocol_fault = rclcpp::Logger::Level::Debug; // none
[22.455s]       |                            [01;31m[K^~~~~[m[K
[22.456s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[22.456s]   569 |     if (diff_protocol[0] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
[22.456s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[22.457s]       |                                [32m[Kprotocol_type_t[m[K
[22.463s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[22.463s]   570 |     else if (diff_protocol[1] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
[22.463s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[22.464s]       |                                     [32m[Kprotocol_type_t[m[K
[22.510s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[22.511s]   571 |     else if (diff_protocol[2] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[22.511s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[22.511s]       |                                     [32m[Kprotocol_type_t[m[K
[22.556s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[22.557s]   572 |     else if (diff_protocol[3] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
[22.557s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[22.558s]       |                                     [32m[Kprotocol_type_t[m[K
[22.558s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[22.558s]   574 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K firmware_fault = rclcpp::Logger::Level::Debug; // none
[22.559s]       |                            [01;31m[K^~~~~[m[K
[22.599s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kbool InertialSenseROS::[01;32m[Kfirmware_compatiblity_check[m[K()[m[Kâ€™:
[22.599s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[22.599s]   568 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K protocol_fault = rclcpp::Logger::Level::Debug; // none
[22.600s]       |                            [01;31m[K^~~~~[m[K
[22.606s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[22.607s]   575 |     if (diff_firmware[0] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
[22.607s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[22.640s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[22.641s]   569 |     if (diff_protocol[0] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
[22.641s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[22.641s]       |                                [32m[Kprotocol_type_t[m[K
[22.651s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[22.651s]   576 |     else if (diff_firmware[1] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
[22.651s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[22.685s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[22.685s]   570 |     else if (diff_protocol[1] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
[22.685s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[22.686s]       |                                     [32m[Kprotocol_type_t[m[K
[22.700s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[22.701s]   577 |     else if (diff_firmware[2] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[22.701s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[22.702s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[22.702s]   579 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K final_fault = std::max(firmware_fault, protocol_fault);
[22.703s]       |                            [01;31m[K^~~~~[m[K
[22.731s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[22.731s]   571 |     else if (diff_protocol[2] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[22.732s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[22.732s]       |                                     [32m[Kprotocol_type_t[m[K
[22.739s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfinal_fault[m[Kâ€™ was not declared in this scope
[22.739s]   599 |     return [01;31m[Kfinal_fault[m[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
[22.739s]       |            [01;31m[K^~~~~~~~~~~[m[K
[22.774s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[22.774s]   572 |     else if (diff_protocol[3] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
[22.774s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[22.775s]       |                                     [32m[Kprotocol_type_t[m[K
[22.775s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[22.776s]   574 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K firmware_fault = rclcpp::Logger::Level::Debug; // none
[22.776s]       |                            [01;31m[K^~~~~[m[K
[22.828s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[22.828s]   575 |     if (diff_firmware[0] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
[22.829s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[22.863s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS1_callback[m[K(eDataIDs, const ins_1_t*)[m[Kâ€™:
[22.864s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:954:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[KgetNumSubscribers[m[Kâ€™
[22.864s]   954 |         if (rs_.did_ins1.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
[22.865s]       |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[22.866s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS1&)[m[Kâ€™
[22.867s]   955 |             [01;31m[Krs_.did_ins1.pub->publish(msg_did_ins1)[m[K;
[22.868s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.868s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31[m[K,
[22.868s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50[m[K,
[22.868s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25[m[K,
[22.869s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[22.869s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[22.870s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
[22.871s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
[22.872s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[22.872s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[22.873s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
[22.874s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K,
[22.875s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29[m[K:
[22.875s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.876s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[22.877s]       |   [01;36m[K^~~~~~~[m[K
[22.878s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.878s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.880s]   955 |             [01;36m[Krs_.did_ins1.pub->publish(msg_did_ins1)[m[K;
[22.881s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.883s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.884s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[22.885s]       |   [01;36m[K^~~~~~~[m[K
[22.886s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.887s] In file included from [01m[K/usr/include/c++/13/bits/move.h:37[m[K,
[22.888s]                  from [01m[K/usr/include/c++/13/bits/exception_ptr.h:41[m[K,
[22.889s]                  from [01m[K/usr/include/c++/13/exception:164[m[K,
[22.890s]                  from [01m[K/usr/include/c++/13/ios:41[m[K,
[22.891s]                  from [01m[K/usr/include/c++/13/ostream:40[m[K,
[22.891s]                  from [01m[K/usr/include/c++/13/iostream:41[m[K,
[22.892s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22[m[K:
[22.892s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = void][m[K[m[Kâ€™:
[22.892s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K   required by substitution of â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::value), void> rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::[01;32m[Kpublish[m[K(const T&) [35m[K[with T = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[22.893s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:38:[m[K   required from here
[22.893s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[22.893s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[22.894s]       |           [01;31m[K^~~~~~~~~~~[m[K
[22.894s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.895s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[22.895s]       |   [01;36m[K^~~~~~~[m[K
[22.895s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.896s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.896s]   955 |             [01;36m[Krs_.did_ins1.pub->publish(msg_did_ins1)[m[K;
[22.896s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.896s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.897s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[22.898s]       |   [01;36m[K^~~~~~~[m[K
[22.898s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.899s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[22.900s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[22.900s]       |   [01;36m[K^~~~~~~[m[K
[22.901s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[22.901s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[22.901s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.901s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.902s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[22.902s]       |   [01;36m[K^~~~~~~[m[K
[22.902s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[22.903s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[22.903s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.903s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[22.904s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[22.905s]       |   [01;36m[K^~~~~~~[m[K
[22.905s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[22.905s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[22.906s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.906s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS2_callback[m[K(eDataIDs, const ins_2_t*)[m[Kâ€™:
[22.906s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:981:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[KgetNumSubscribers[m[Kâ€™
[22.906s]   981 |         if (rs_.did_ins2.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
[22.907s]       |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[22.907s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS2&)[m[Kâ€™
[22.907s]   982 |             [01;31m[Krs_.did_ins2.pub->publish(msg_did_ins2)[m[K;
[22.908s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.908s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.908s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[22.909s]       |   [01;36m[K^~~~~~~[m[K
[22.909s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.911s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.911s]   982 |             [01;36m[Krs_.did_ins2.pub->publish(msg_did_ins2)[m[K;
[22.912s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.914s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.914s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[22.915s]       |   [01;36m[K^~~~~~~[m[K
[22.915s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.916s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.916s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[22.917s]       |   [01;36m[K^~~~~~~[m[K
[22.917s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.917s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.918s]   982 |             [01;36m[Krs_.did_ins2.pub->publish(msg_did_ins2)[m[K;
[22.918s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.918s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.920s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[22.921s]       |   [01;36m[K^~~~~~~[m[K
[22.922s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.923s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[22.924s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[22.924s]       |   [01;36m[K^~~~~~~[m[K
[22.925s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[22.926s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[22.927s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.928s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.929s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[22.929s]       |   [01;36m[K^~~~~~~[m[K
[22.930s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[22.930s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[22.931s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.931s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[22.931s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[22.932s]       |   [01;36m[K^~~~~~~[m[K
[22.933s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[22.934s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[22.934s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.934s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS4_callback[m[K(eDataIDs, const ins_4_t*)[m[Kâ€™:
[22.935s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1008:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[KgetNumSubscribers[m[Kâ€™
[22.935s]  1008 |         if (rs_.did_ins4.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
[22.935s]       |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[22.935s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS4&)[m[Kâ€™
[22.936s]  1009 |             [01;31m[Krs_.did_ins4.pub->publish(msg_did_ins4)[m[K;
[22.937s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.937s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.938s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[22.938s]       |   [01;36m[K^~~~~~~[m[K
[22.938s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.938s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.939s]  1009 |             [01;36m[Krs_.did_ins4.pub->publish(msg_did_ins4)[m[K;
[22.939s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.939s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.940s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[22.940s]       |   [01;36m[K^~~~~~~[m[K
[22.940s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.940s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.941s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[22.941s]       |   [01;36m[K^~~~~~~[m[K
[22.942s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.942s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.942s]  1009 |             [01;36m[Krs_.did_ins4.pub->publish(msg_did_ins4)[m[K;
[22.943s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.943s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.943s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[22.943s]       |   [01;36m[K^~~~~~~[m[K
[22.944s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.944s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[22.944s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[22.945s]       |   [01;36m[K^~~~~~~[m[K
[22.945s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[22.946s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[22.946s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.946s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.947s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[22.947s]       |   [01;36m[K^~~~~~~[m[K
[22.947s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[22.947s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[22.948s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.948s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[22.948s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[22.949s]       |   [01;36m[K^~~~~~~[m[K
[22.949s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[22.950s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[22.950s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.950s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[22.951s]   576 |     else if (diff_firmware[1] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
[22.951s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[22.951s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:43:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[22.952s]  1078 |             [01;31m[Krs_.odom_ins_ecef.pub->publish(msg_odom_ecef)[m[K;
[22.952s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[22.952s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.952s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[22.953s]       |   [01;36m[K^~~~~~~[m[K
[22.953s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.953s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:43:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.953s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub->publish(msg_odom_ecef)[m[K;
[22.954s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[22.954s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.954s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[22.955s]       |   [01;36m[K^~~~~~~[m[K
[22.955s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.955s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.956s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[22.956s]       |   [01;36m[K^~~~~~~[m[K
[22.956s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.956s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:43:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.957s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub->publish(msg_odom_ecef)[m[K;
[22.957s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[22.957s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.958s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[22.958s]       |   [01;36m[K^~~~~~~[m[K
[22.958s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.958s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[22.959s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[22.959s]       |   [01;36m[K^~~~~~~[m[K
[22.959s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[22.960s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[22.960s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.960s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.961s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[22.961s]       |   [01;36m[K^~~~~~~[m[K
[22.961s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[22.962s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[22.962s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.962s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[22.962s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[22.963s]       |   [01;36m[K^~~~~~~[m[K
[22.963s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[22.963s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[22.964s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.964s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:38:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[22.964s]  1165 |                 rs_.odom_ins_ned.pub.[01;31m[Kpublish[m[K(msg_odom_ned);
[22.965s]       |                                      [01;31m[K^~~~~~~[m[K
[22.965s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:38:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[22.965s]  1259 |                 rs_.odom_ins_enu.pub.[01;31m[Kpublish[m[K(msg_odom_enu);
[22.965s]       |                                      [01;31m[K^~~~~~~[m[K
[22.966s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINL2_states_callback[m[K(eDataIDs, const inl2_states_t*)[m[Kâ€™:
[22.966s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1311:33:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[KgetNumSubscribers[m[Kâ€™
[22.966s]  1311 |         if (rs_.inl2_states.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
[22.967s]       |                                 [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[22.967s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:33:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[22.967s]  1312 |             rs_.inl2_states.pub.[01;31m[Kpublish[m[K(msg_inl2_states);
[22.967s]       |                                 [01;31m[K^~~~~~~[m[K
[22.968s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_pos_callback[m[K(eDataIDs, const gps_pos_t*)[m[Kâ€™:
[22.968s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:36:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[22.968s]  1455 |             rs_.gps1_navsatfix.pub.[01;31m[Kpublish[m[K(msg_NavSatFix);
[22.969s]       |                                    [01;31m[K^~~~~~~[m[K
[22.969s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS1[m[K()[m[Kâ€™:
[22.969s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:34:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[22.969s]  1500 |             [01;31m[Krs_.gps1.pub->publish(msg_gps1)[m[K;
[22.970s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.970s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.970s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[22.970s]       |   [01;36m[K^~~~~~~[m[K
[22.971s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.971s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.971s]  1500 |             [01;36m[Krs_.gps1.pub->publish(msg_gps1)[m[K;
[22.972s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.972s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.972s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[22.972s]       |   [01;36m[K^~~~~~~[m[K
[22.973s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.973s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.973s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[22.973s]       |   [01;36m[K^~~~~~~[m[K
[22.974s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.974s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.974s]  1500 |             [01;36m[Krs_.gps1.pub->publish(msg_gps1)[m[K;
[22.975s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.975s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.975s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[22.976s]       |   [01;36m[K^~~~~~~[m[K
[22.976s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.976s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[22.977s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[22.977s]       |   [01;36m[K^~~~~~~[m[K
[22.977s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[22.978s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[22.978s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.978s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.979s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[22.979s]       |   [01;36m[K^~~~~~~[m[K
[22.980s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[22.981s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[22.982s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.982s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[22.982s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[22.983s]       |   [01;36m[K^~~~~~~[m[K
[22.983s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[22.983s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[22.984s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.984s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS2[m[K()[m[Kâ€™:
[22.984s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:34:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[22.985s]  1512 |             [01;31m[Krs_.gps2.pub->publish(msg_gps2)[m[K;
[22.985s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.985s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.985s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[22.986s]       |   [01;36m[K^~~~~~~[m[K
[22.986s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.986s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.986s]  1512 |             [01;36m[Krs_.gps2.pub->publish(msg_gps2)[m[K;
[22.987s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.987s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.987s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[22.987s]       |   [01;36m[K^~~~~~~[m[K
[22.988s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.988s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.988s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[22.988s]       |   [01;36m[K^~~~~~~[m[K
[22.989s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.989s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[22.989s]  1512 |             [01;36m[Krs_.gps2.pub->publish(msg_gps2)[m[K;
[22.989s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.990s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.990s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[22.990s]       |   [01;36m[K^~~~~~~[m[K
[22.990s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.991s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[22.991s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[22.991s]       |   [01;36m[K^~~~~~~[m[K
[22.991s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[22.992s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[22.992s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.992s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.992s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[22.993s]       |   [01;36m[K^~~~~~~[m[K
[22.993s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[22.993s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[22.993s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[22.994s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[22.994s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[22.994s]       |   [01;36m[K^~~~~~~[m[K
[22.995s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[22.995s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[22.995s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[22.995s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_info_callback[m[K(eDataIDs, const gps_sat_t*)[m[Kâ€™:
[22.996s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish()[m[Kâ€™
[22.996s]  1569 |     case DID_GPS1_SAT:  [01;31m[Krs_.gps1_info.pub->publish()[m[K;    break;
[22.996s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[22.997s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.997s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[22.997s]       |   [01;36m[K^~~~~~~[m[K
[22.997s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[22.998s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[22.998s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub->publish()[m[K;    break;
[22.998s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[22.998s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[22.999s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[22.999s]       |   [01;36m[K^~~~~~~[m[K
[22.999s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.000s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.000s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub->publish()[m[K;    break;
[23.000s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[23.000s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.001s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.001s]       |   [01;36m[K^~~~~~~[m[K
[23.001s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.002s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.002s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub->publish()[m[K;    break;
[23.002s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[23.002s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.003s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.003s]       |   [01;36m[K^~~~~~~[m[K
[23.003s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.004s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.004s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub->publish()[m[K;    break;
[23.004s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[23.005s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.005s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.005s]       |   [01;36m[K^~~~~~~[m[K
[23.006s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.006s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.006s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.007s]       |   [01;36m[K^~~~~~~[m[K
[23.007s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.007s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.007s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.008s]       |   [01;36m[K^~~~~~~[m[K
[23.008s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.008s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:51:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[23.009s]  1570 |     case DID_GPS2_SAT:  [01;31m[Krs_.gps2_info.pub->publish(msg_gps1_info)[m[K;    break;
[23.009s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[23.009s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.010s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.010s]       |   [01;36m[K^~~~~~~[m[K
[23.010s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.011s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:51:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.011s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub->publish(msg_gps1_info)[m[K;    break;
[23.011s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[23.012s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.012s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.012s]       |   [01;36m[K^~~~~~~[m[K
[23.013s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.013s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.013s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.014s]       |   [01;36m[K^~~~~~~[m[K
[23.014s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.014s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:51:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.015s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub->publish(msg_gps1_info)[m[K;    break;
[23.015s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[23.015s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.015s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.016s]       |   [01;36m[K^~~~~~~[m[K
[23.016s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.016s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.016s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.017s]       |   [01;36m[K^~~~~~~[m[K
[23.017s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.017s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.017s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.018s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.018s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.018s]       |   [01;36m[K^~~~~~~[m[K
[23.019s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.019s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.019s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.019s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.020s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.020s]       |   [01;36m[K^~~~~~~[m[K
[23.020s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.021s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.021s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.021s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kmag_callback[m[K(eDataIDs, const magnetometer_t*)[m[Kâ€™:
[23.021s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:34:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(sensor_msgs::msg::MagneticField&)[m[Kâ€™
[23.022s]  1588 |     [01;31m[Krs_.magnetometer.pub->publish(mag_msg)[m[K;
[23.022s]       |     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[23.022s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.022s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.022s]       |   [01;36m[K^~~~~~~[m[K
[23.023s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.023s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.023s]  1588 |     [01;36m[Krs_.magnetometer.pub->publish(mag_msg)[m[K;
[23.023s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[23.024s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.024s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.024s]       |   [01;36m[K^~~~~~~[m[K
[23.024s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.025s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.025s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.025s]       |   [01;36m[K^~~~~~~[m[K
[23.026s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.026s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.026s]  1588 |     [01;36m[Krs_.magnetometer.pub->publish(mag_msg)[m[K;
[23.026s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[23.027s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.027s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.027s]       |   [01;36m[K^~~~~~~[m[K
[23.027s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.028s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.028s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.028s]       |   [01;36m[K^~~~~~~[m[K
[23.029s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.029s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.029s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.030s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.030s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.030s]       |   [01;36m[K^~~~~~~[m[K
[23.031s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.031s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.031s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.032s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.032s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.032s]       |   [01;36m[K^~~~~~~[m[K
[23.033s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.033s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.033s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.033s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kbaro_callback[m[K(eDataIDs, const barometer_t*)[m[Kâ€™:
[23.034s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1604:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.034s]  1604 |     rs_.barometer.pub.[01;31m[Kpublish[m[K(baro_msg);
[23.034s]       |                       [01;31m[K^~~~~~~[m[K
[23.034s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kpreint_IMU_callback[m[K(eDataIDs, const pimu_t*)[m[Kâ€™:
[23.035s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.035s]  1623 |         rs_.pimu.pub.[01;31m[Kpublish[m[K(msg_pimu);
[23.035s]       |                      [01;31m[K^~~~~~~[m[K
[23.036s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[23.036s]   577 |     else if (diff_firmware[2] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[23.036s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[23.036s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[23.037s]   579 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K final_fault = std::max(firmware_fault, protocol_fault);
[23.037s]       |                            [01;31m[K^~~~~[m[K
[23.037s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.038s]  1640 |             rs_.imu.pub.[01;31m[Kpublish[m[K(msg_imu);
[23.038s]       |                         [01;31m[K^~~~~~~[m[K
[23.038s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KRTK_Misc_callback[m[K(eDataIDs, const gps_rtk_misc_t*)[m[Kâ€™:
[23.038s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1672:29:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.039s]  1672 |         rs_.rtk_cmp.pubInfo.[01;31m[Kpublish[m[K(rtk_info);
[23.039s]       |                             [01;31m[K^~~~~~~[m[K
[23.039s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KRTK_Rel_callback[m[K(eDataIDs, const gps_rtk_rel_t*)[m[Kâ€™:
[23.040s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1737:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.040s]  1737 |         rs_.rtk_cmp.pubRel.[01;31m[Kpublish[m[K(rtk_rel);
[23.040s]       |                            [01;31m[K^~~~~~~[m[K
[23.040s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_obs_bundle_timer_callback[m[K()[m[Kâ€™:
[23.041s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1862:33:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.041s]  1862 |             rs_.gps2_raw.pubObs.[01;31m[Kpublish[m[K(gps2_obs_Vec_);
[23.041s]       |                                 [01;31m[K^~~~~~~[m[K
[23.042s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1872:36:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.042s]  1872 |             rs_.gpsbase_raw.pubObs.[01;31m[Kpublish[m[K(base_obs_Vec_);
[23.042s]       |                                    [01;31m[K^~~~~~~[m[K
[23.042s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfinal_fault[m[Kâ€™ was not declared in this scope
[23.042s]   599 |     return [01;31m[Kfinal_fault[m[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
[23.043s]       |            [01;31m[K^~~~~~~~~~~[m[K
[23.132s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS1_callback[m[K(eDataIDs, const ins_1_t*)[m[Kâ€™:
[23.133s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:954:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[KgetNumSubscribers[m[Kâ€™
[23.133s]   954 |         if (rs_.did_ins1.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
[23.134s]       |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[23.135s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS1&)[m[Kâ€™
[23.135s]   955 |             [01;31m[Krs_.did_ins1.pub->publish(msg_did_ins1)[m[K;
[23.136s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.137s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31[m[K,
[23.137s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50[m[K,
[23.138s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25[m[K,
[23.138s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[23.139s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[23.140s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
[23.140s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
[23.142s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[23.143s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[23.143s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
[23.143s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K,
[23.144s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29[m[K:
[23.144s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.144s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.145s]       |   [01;36m[K^~~~~~~[m[K
[23.145s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.145s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.146s]   955 |             [01;36m[Krs_.did_ins1.pub->publish(msg_did_ins1)[m[K;
[23.147s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.148s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.149s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.149s]       |   [01;36m[K^~~~~~~[m[K
[23.150s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.150s] In file included from [01m[K/usr/include/c++/13/bits/move.h:37[m[K,
[23.152s]                  from [01m[K/usr/include/c++/13/bits/exception_ptr.h:41[m[K,
[23.152s]                  from [01m[K/usr/include/c++/13/exception:164[m[K,
[23.153s]                  from [01m[K/usr/include/c++/13/ios:41[m[K,
[23.154s]                  from [01m[K/usr/include/c++/13/ostream:40[m[K,
[23.154s]                  from [01m[K/usr/include/c++/13/iostream:41[m[K,
[23.155s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22[m[K:
[23.155s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = void][m[K[m[Kâ€™:
[23.155s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K   required by substitution of â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::value), void> rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::[01;32m[Kpublish[m[K(const T&) [35m[K[with T = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[23.155s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:38:[m[K   required from here
[23.156s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[23.156s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[23.156s]       |           [01;31m[K^~~~~~~~~~~[m[K
[23.157s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.157s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.158s]       |   [01;36m[K^~~~~~~[m[K
[23.158s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.159s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.159s]   955 |             [01;36m[Krs_.did_ins1.pub->publish(msg_did_ins1)[m[K;
[23.160s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.160s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.160s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.161s]       |   [01;36m[K^~~~~~~[m[K
[23.161s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.161s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.162s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.162s]       |   [01;36m[K^~~~~~~[m[K
[23.163s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.163s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.164s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.164s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.165s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.165s]       |   [01;36m[K^~~~~~~[m[K
[23.166s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.166s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.167s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.168s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.168s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.168s]       |   [01;36m[K^~~~~~~[m[K
[23.169s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.169s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.169s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.170s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS2_callback[m[K(eDataIDs, const ins_2_t*)[m[Kâ€™:
[23.170s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:981:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[KgetNumSubscribers[m[Kâ€™
[23.170s]   981 |         if (rs_.did_ins2.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
[23.170s]       |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[23.171s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS2&)[m[Kâ€™
[23.171s]   982 |             [01;31m[Krs_.did_ins2.pub->publish(msg_did_ins2)[m[K;
[23.171s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.172s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.172s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.172s]       |   [01;36m[K^~~~~~~[m[K
[23.173s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.173s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.173s]   982 |             [01;36m[Krs_.did_ins2.pub->publish(msg_did_ins2)[m[K;
[23.174s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.174s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.174s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.175s]       |   [01;36m[K^~~~~~~[m[K
[23.175s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.175s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.176s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.176s]       |   [01;36m[K^~~~~~~[m[K
[23.176s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.176s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.177s]   982 |             [01;36m[Krs_.did_ins2.pub->publish(msg_did_ins2)[m[K;
[23.177s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.177s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.179s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.179s]       |   [01;36m[K^~~~~~~[m[K
[23.180s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.182s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.183s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.184s]       |   [01;36m[K^~~~~~~[m[K
[23.184s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.185s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.185s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.185s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.186s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.186s]       |   [01;36m[K^~~~~~~[m[K
[23.186s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.187s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.187s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.187s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.187s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.188s]       |   [01;36m[K^~~~~~~[m[K
[23.188s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.188s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.189s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.189s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS4_callback[m[K(eDataIDs, const ins_4_t*)[m[Kâ€™:
[23.189s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1008:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[KgetNumSubscribers[m[Kâ€™
[23.189s]  1008 |         if (rs_.did_ins4.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
[23.190s]       |                              [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[23.190s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS4&)[m[Kâ€™
[23.190s]  1009 |             [01;31m[Krs_.did_ins4.pub->publish(msg_did_ins4)[m[K;
[23.191s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.191s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.191s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.192s]       |   [01;36m[K^~~~~~~[m[K
[23.192s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.192s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.194s]  1009 |             [01;36m[Krs_.did_ins4.pub->publish(msg_did_ins4)[m[K;
[23.195s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.195s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.195s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.196s]       |   [01;36m[K^~~~~~~[m[K
[23.196s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.197s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.197s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.198s]       |   [01;36m[K^~~~~~~[m[K
[23.200s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.200s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.200s]  1009 |             [01;36m[Krs_.did_ins4.pub->publish(msg_did_ins4)[m[K;
[23.201s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.202s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.203s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.204s]       |   [01;36m[K^~~~~~~[m[K
[23.204s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.205s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.205s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.205s]       |   [01;36m[K^~~~~~~[m[K
[23.206s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.207s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.207s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.208s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.208s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.209s]       |   [01;36m[K^~~~~~~[m[K
[23.210s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.210s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.211s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.211s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.212s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.212s]       |   [01;36m[K^~~~~~~[m[K
[23.212s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.213s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.213s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.213s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:43:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[23.214s]  1078 |             [01;31m[Krs_.odom_ins_ecef.pub->publish(msg_odom_ecef)[m[K;
[23.214s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[23.215s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.215s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.216s]       |   [01;36m[K^~~~~~~[m[K
[23.216s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.216s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:43:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.217s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub->publish(msg_odom_ecef)[m[K;
[23.217s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[23.217s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.218s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.218s]       |   [01;36m[K^~~~~~~[m[K
[23.218s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.219s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.219s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.219s]       |   [01;36m[K^~~~~~~[m[K
[23.220s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.220s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:43:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.221s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub->publish(msg_odom_ecef)[m[K;
[23.221s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[23.221s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.222s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.222s]       |   [01;36m[K^~~~~~~[m[K
[23.222s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.223s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.223s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.224s]       |   [01;36m[K^~~~~~~[m[K
[23.224s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.225s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.225s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.225s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.226s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.226s]       |   [01;36m[K^~~~~~~[m[K
[23.227s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.228s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.228s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.229s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.229s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.229s]       |   [01;36m[K^~~~~~~[m[K
[23.230s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.230s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.230s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.231s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:38:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.231s]  1165 |                 rs_.odom_ins_ned.pub.[01;31m[Kpublish[m[K(msg_odom_ned);
[23.231s]       |                                      [01;31m[K^~~~~~~[m[K
[23.232s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:38:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.232s]  1259 |                 rs_.odom_ins_enu.pub.[01;31m[Kpublish[m[K(msg_odom_enu);
[23.233s]       |                                      [01;31m[K^~~~~~~[m[K
[23.233s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINL2_states_callback[m[K(eDataIDs, const inl2_states_t*)[m[Kâ€™:
[23.233s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1311:33:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[KgetNumSubscribers[m[Kâ€™
[23.234s]  1311 |         if (rs_.inl2_states.pub.[01;31m[KgetNumSubscribers[m[K() > 0)
[23.234s]       |                                 [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[23.234s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:33:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.235s]  1312 |             rs_.inl2_states.pub.[01;31m[Kpublish[m[K(msg_inl2_states);
[23.235s]       |                                 [01;31m[K^~~~~~~[m[K
[23.235s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_pos_callback[m[K(eDataIDs, const gps_pos_t*)[m[Kâ€™:
[23.236s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:36:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.236s]  1455 |             rs_.gps1_navsatfix.pub.[01;31m[Kpublish[m[K(msg_NavSatFix);
[23.236s]       |                                    [01;31m[K^~~~~~~[m[K
[23.237s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS1[m[K()[m[Kâ€™:
[23.237s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:34:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[23.237s]  1500 |             [01;31m[Krs_.gps1.pub->publish(msg_gps1)[m[K;
[23.238s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.238s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.238s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.239s]       |   [01;36m[K^~~~~~~[m[K
[23.239s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.239s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.240s]  1500 |             [01;36m[Krs_.gps1.pub->publish(msg_gps1)[m[K;
[23.240s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.240s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.241s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.241s]       |   [01;36m[K^~~~~~~[m[K
[23.241s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.242s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.242s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.242s]       |   [01;36m[K^~~~~~~[m[K
[23.243s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.243s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.243s]  1500 |             [01;36m[Krs_.gps1.pub->publish(msg_gps1)[m[K;
[23.244s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.244s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.244s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.245s]       |   [01;36m[K^~~~~~~[m[K
[23.245s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.245s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.246s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.246s]       |   [01;36m[K^~~~~~~[m[K
[23.247s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.247s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.247s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.248s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.248s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.248s]       |   [01;36m[K^~~~~~~[m[K
[23.249s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.249s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.249s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.250s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.250s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.251s]       |   [01;36m[K^~~~~~~[m[K
[23.251s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.251s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.252s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.252s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS2[m[K()[m[Kâ€™:
[23.252s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:34:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[23.253s]  1512 |             [01;31m[Krs_.gps2.pub->publish(msg_gps2)[m[K;
[23.253s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.253s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.254s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.254s]       |   [01;36m[K^~~~~~~[m[K
[23.254s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.255s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.255s]  1512 |             [01;36m[Krs_.gps2.pub->publish(msg_gps2)[m[K;
[23.255s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.256s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.256s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.256s]       |   [01;36m[K^~~~~~~[m[K
[23.257s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.257s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.257s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.258s]       |   [01;36m[K^~~~~~~[m[K
[23.258s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.258s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.258s]  1512 |             [01;36m[Krs_.gps2.pub->publish(msg_gps2)[m[K;
[23.259s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.259s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.259s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.260s]       |   [01;36m[K^~~~~~~[m[K
[23.260s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.260s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.261s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.261s]       |   [01;36m[K^~~~~~~[m[K
[23.261s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.262s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.262s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.262s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.262s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.263s]       |   [01;36m[K^~~~~~~[m[K
[23.263s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.263s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.264s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.264s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.264s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.265s]       |   [01;36m[K^~~~~~~[m[K
[23.265s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.265s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.266s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.266s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_info_callback[m[K(eDataIDs, const gps_sat_t*)[m[Kâ€™:
[23.266s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish()[m[Kâ€™
[23.267s]  1569 |     case DID_GPS1_SAT:  [01;31m[Krs_.gps1_info.pub->publish()[m[K;    break;
[23.267s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[23.267s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.268s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.268s]       |   [01;36m[K^~~~~~~[m[K
[23.268s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.269s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.269s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub->publish()[m[K;    break;
[23.269s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[23.270s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.270s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.270s]       |   [01;36m[K^~~~~~~[m[K
[23.271s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.271s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.271s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub->publish()[m[K;    break;
[23.271s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[23.272s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.272s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.272s]       |   [01;36m[K^~~~~~~[m[K
[23.273s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.273s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.273s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub->publish()[m[K;    break;
[23.273s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[23.274s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.274s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.274s]       |   [01;36m[K^~~~~~~[m[K
[23.275s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.275s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:51:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.275s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub->publish()[m[K;    break;
[23.276s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[23.276s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.276s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.277s]       |   [01;36m[K^~~~~~~[m[K
[23.277s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.277s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.277s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.278s]       |   [01;36m[K^~~~~~~[m[K
[23.278s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.278s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.279s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.279s]       |   [01;36m[K^~~~~~~[m[K
[23.279s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[23.280s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:51:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[23.280s]  1570 |     case DID_GPS2_SAT:  [01;31m[Krs_.gps2_info.pub->publish(msg_gps1_info)[m[K;    break;
[23.281s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[23.281s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.281s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.282s]       |   [01;36m[K^~~~~~~[m[K
[23.282s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.282s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:51:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.283s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub->publish(msg_gps1_info)[m[K;    break;
[23.283s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[23.284s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.284s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.284s]       |   [01;36m[K^~~~~~~[m[K
[23.284s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.285s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.285s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.285s]       |   [01;36m[K^~~~~~~[m[K
[23.286s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.286s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:51:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.286s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub->publish(msg_gps1_info)[m[K;    break;
[23.287s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[23.287s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.287s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.288s]       |   [01;36m[K^~~~~~~[m[K
[23.288s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.288s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.289s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.289s]       |   [01;36m[K^~~~~~~[m[K
[23.289s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.290s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.290s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.290s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.291s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.291s]       |   [01;36m[K^~~~~~~[m[K
[23.291s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.291s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.292s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.292s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.292s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.293s]       |   [01;36m[K^~~~~~~[m[K
[23.293s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.293s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.294s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.294s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kmag_callback[m[K(eDataIDs, const magnetometer_t*)[m[Kâ€™:
[23.294s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:34:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::publish(sensor_msgs::msg::MagneticField&)[m[Kâ€™
[23.295s]  1588 |     [01;31m[Krs_.magnetometer.pub->publish(mag_msg)[m[K;
[23.295s]       |     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[23.295s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.296s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[23.296s]       |   [01;36m[K^~~~~~~[m[K
[23.296s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.296s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.297s]  1588 |     [01;36m[Krs_.magnetometer.pub->publish(mag_msg)[m[K;
[23.297s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[23.298s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.298s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[23.298s]       |   [01;36m[K^~~~~~~[m[K
[23.298s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.299s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.299s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[23.299s]       |   [01;36m[K^~~~~~~[m[K
[23.300s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.300s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:34:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™
[23.300s]  1588 |     [01;36m[Krs_.magnetometer.pub->publish(mag_msg)[m[K;
[23.301s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[23.301s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.301s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[23.302s]       |   [01;36m[K^~~~~~~[m[K
[23.302s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[23.302s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[23.303s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[23.303s]       |   [01;36m[K^~~~~~~[m[K
[23.304s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[23.304s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[23.304s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.305s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[23.305s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[23.305s]       |   [01;36m[K^~~~~~~[m[K
[23.306s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[23.306s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[23.306s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[23.307s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >][m[K[m[Kâ€™
[23.307s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[23.307s]       |   [01;36m[K^~~~~~~[m[K
[23.308s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[23.308s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[23.308s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[23.309s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kbaro_callback[m[K(eDataIDs, const barometer_t*)[m[Kâ€™:
[23.309s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1604:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.309s]  1604 |     rs_.barometer.pub.[01;31m[Kpublish[m[K(baro_msg);
[23.310s]       |                       [01;31m[K^~~~~~~[m[K
[23.310s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kpreint_IMU_callback[m[K(eDataIDs, const pimu_t*)[m[Kâ€™:
[23.311s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.311s]  1623 |         rs_.pimu.pub.[01;31m[Kpublish[m[K(msg_pimu);
[23.311s]       |                      [01;31m[K^~~~~~~[m[K
[23.312s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:25:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.312s]  1640 |             rs_.imu.pub.[01;31m[Kpublish[m[K(msg_imu);
[23.312s]       |                         [01;31m[K^~~~~~~[m[K
[23.313s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KRTK_Misc_callback[m[K(eDataIDs, const gps_rtk_misc_t*)[m[Kâ€™:
[23.313s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1672:29:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.314s]  1672 |         rs_.rtk_cmp.pubInfo.[01;31m[Kpublish[m[K(rtk_info);
[23.314s]       |                             [01;31m[K^~~~~~~[m[K
[23.314s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KRTK_Rel_callback[m[K(eDataIDs, const gps_rtk_rel_t*)[m[Kâ€™:
[23.315s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1737:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.315s]  1737 |         rs_.rtk_cmp.pubRel.[01;31m[Kpublish[m[K(rtk_rel);
[23.316s]       |                            [01;31m[K^~~~~~~[m[K
[23.316s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_obs_bundle_timer_callback[m[K()[m[Kâ€™:
[23.316s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1862:33:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.317s]  1862 |             rs_.gps2_raw.pubObs.[01;31m[Kpublish[m[K(gps2_obs_Vec_);
[23.317s]       |                                 [01;31m[K^~~~~~~[m[K
[23.318s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1872:36:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > >::SharedPtr = class std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec_<std::allocator<void> > > >[m[Kâ€™} has no member named â€˜[01m[Kpublish[m[Kâ€™
[23.318s]  1872 |             rs_.gpsbase_raw.pubObs.[01;31m[Kpublish[m[K(base_obs_Vec_);
[23.319s]       |                                    [01;31m[K^~~~~~~[m[K
[26.979s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42[m[K,
[26.980s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[26.980s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K:
[26.981s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>[m[Kâ€™:
[26.983s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[26.983s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[26.984s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[26.984s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[26.984s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[26.984s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[26.985s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[26.985s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[26.985s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[26.986s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[26.986s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[26.986s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37[m[K,
[26.987s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28[m[K:
[26.987s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[26.987s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[26.988s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[26.989s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[26.990s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[26.990s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[26.991s]   121 |       >::[01;31m[Kvalue[m[K)
[26.991s]       |          [01;31m[K^~~~~[m[K
[26.992s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[26.992s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[26.993s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[26.994s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K:
[26.994s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[26.994s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[26.996s]       |         [01;36m[K^~~~~~~[m[K
[26.997s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[26.999s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[26.999s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.000s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.001s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.001s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.002s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.002s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.003s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[27.003s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.003s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.004s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.006s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.006s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.007s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.008s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.008s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.008s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.009s]       |         [01;36m[K^~~~~~~[m[K
[27.009s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.009s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.010s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.010s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.010s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.011s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.011s]       |         [01;36m[K^~~~~~~[m[K
[27.011s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.012s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.012s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.012s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.012s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.013s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.013s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.013s]       |         [01;36m[K^~~~~~~[m[K
[27.014s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.014s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.015s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.015s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.015s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.015s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.016s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.016s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.016s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.017s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.017s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.017s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.017s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.018s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.018s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.018s]       |                                           [01;36m[K^~~~~~~[m[K
[27.019s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.019s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.019s]   128 |       >::[01;31m[Kvalue[m[K)
[27.019s]       |          [01;31m[K^~~~~[m[K
[27.020s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[27.020s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.020s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.021s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.021s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.021s]       |         [01;36m[K^~~~~~~[m[K
[27.021s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.022s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.022s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.023s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.023s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.023s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.024s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.024s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.024s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[27.025s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.025s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.030s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.031s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.031s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.031s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.032s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.032s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.033s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.033s]       |         [01;36m[K^~~~~~~[m[K
[27.033s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.034s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.034s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.034s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.035s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.035s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.035s]       |         [01;36m[K^~~~~~~[m[K
[27.036s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.036s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.037s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.037s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.037s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.037s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.038s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.038s]       |         [01;36m[K^~~~~~~[m[K
[27.038s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.039s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.039s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.040s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.040s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.040s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.041s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.041s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.041s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.043s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.043s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.043s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.044s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.044s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.045s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.045s]       |                                           [01;36m[K^~~~~~~[m[K
[27.046s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.046s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[27.046s]   135 |       >::[01;31m[Kvalue[m[K)
[27.047s]       |          [01;31m[K^~~~~[m[K
[27.047s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[27.047s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.048s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.048s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.048s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.049s]       |         [01;36m[K^~~~~~~[m[K
[27.049s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.050s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.050s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.051s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.051s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.054s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.054s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.055s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.055s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[27.056s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.056s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.056s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.057s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.057s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.057s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.058s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.058s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.059s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.059s]       |         [01;36m[K^~~~~~~[m[K
[27.059s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.060s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.060s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.060s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.061s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.062s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.062s]       |         [01;36m[K^~~~~~~[m[K
[27.063s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.063s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.064s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.064s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.064s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.065s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.065s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.066s]       |         [01;36m[K^~~~~~~[m[K
[27.066s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.067s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.068s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.068s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.068s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.069s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.069s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.069s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.070s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.072s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.073s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.073s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.073s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.074s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.074s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.074s]       |                                           [01;36m[K^~~~~~~[m[K
[27.075s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.075s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[27.075s]   142 |       >::[01;31m[Kvalue[m[K)
[27.076s]       |          [01;31m[K^~~~~[m[K
[27.076s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[27.076s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.077s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.077s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.077s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.078s]       |         [01;36m[K^~~~~~~[m[K
[27.080s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.081s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.086s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.088s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.089s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.089s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.090s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.090s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.091s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[27.091s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.091s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.092s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.092s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.093s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.093s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.094s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.094s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.095s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.095s]       |         [01;36m[K^~~~~~~[m[K
[27.096s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.097s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.098s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.099s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.101s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.102s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.103s]       |         [01;36m[K^~~~~~~[m[K
[27.103s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.103s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.104s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.104s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.105s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.105s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.105s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.106s]       |         [01;36m[K^~~~~~~[m[K
[27.106s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.107s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.107s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.108s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.108s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.109s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.109s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.109s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.109s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.110s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.110s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.110s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.111s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.111s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.112s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.112s]       |                                           [01;36m[K^~~~~~~[m[K
[27.113s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.113s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™)
[27.114s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[27.114s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[27.115s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.115s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[27.115s]       |         [01;36m[K^~~~~~~~[m[K
[27.116s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.116s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[27.117s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[27.117s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.118s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.118s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.118s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.119s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.119s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[27.119s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[27.120s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[27.120s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.120s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.121s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.121s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.121s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.122s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.122s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[27.122s]       |                [01;36m[K^~~~~~~~[m[K
[27.123s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[27.123s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[27.126s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[27.127s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.127s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[27.128s]       |                [01;36m[K^~~~~~~~[m[K
[27.129s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[27.130s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[27.130s]       |                          [01;36m[K^~~~~~~~~[m[K
[27.131s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>[m[Kâ€™:
[27.131s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.132s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.132s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.132s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.133s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.133s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.133s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.134s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[27.134s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[27.134s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.135s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.135s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.136s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.136s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.136s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.136s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.137s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.137s]   121 |       >::[01;31m[Kvalue[m[K)
[27.138s]       |          [01;31m[K^~~~~[m[K
[27.138s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[27.138s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.139s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.139s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.139s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.139s]       |         [01;36m[K^~~~~~~[m[K
[27.140s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.140s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.140s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.141s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.141s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.141s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.142s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.142s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.142s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[27.143s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.143s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.143s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.144s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.144s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.144s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.145s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.145s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.146s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.146s]       |         [01;36m[K^~~~~~~[m[K
[27.146s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.147s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.147s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.148s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.148s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.150s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.151s]       |         [01;36m[K^~~~~~~[m[K
[27.151s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.152s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.152s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.153s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.153s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.153s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.154s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.154s]       |         [01;36m[K^~~~~~~[m[K
[27.155s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.155s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.155s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.156s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.156s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.156s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.157s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.157s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.157s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.158s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.158s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.159s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.159s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.160s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.160s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.160s]       |                                           [01;36m[K^~~~~~~[m[K
[27.161s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.161s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.162s]   128 |       >::[01;31m[Kvalue[m[K)
[27.162s]       |          [01;31m[K^~~~~[m[K
[27.162s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[27.163s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.167s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.167s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.168s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.168s]       |         [01;36m[K^~~~~~~[m[K
[27.169s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.169s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.170s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.170s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.170s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.171s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.171s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.172s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.172s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[27.172s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.173s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.173s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.173s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.174s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.174s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.175s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.175s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.175s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.176s]       |         [01;36m[K^~~~~~~[m[K
[27.176s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.176s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.177s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.177s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.178s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.178s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.178s]       |         [01;36m[K^~~~~~~[m[K
[27.179s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.179s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.179s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.180s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.180s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.181s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.181s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.181s]       |         [01;36m[K^~~~~~~[m[K
[27.182s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.182s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.184s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.185s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.185s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.188s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.189s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.190s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.190s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.191s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.191s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.191s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.192s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.192s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.192s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.193s]       |                                           [01;36m[K^~~~~~~[m[K
[27.193s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.194s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[27.194s]   135 |       >::[01;31m[Kvalue[m[K)
[27.194s]       |          [01;31m[K^~~~~[m[K
[27.195s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[27.195s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.195s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.196s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.196s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.197s]       |         [01;36m[K^~~~~~~[m[K
[27.197s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.197s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.198s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.198s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.199s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.199s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.200s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.200s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.200s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[27.201s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.201s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.202s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.203s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.205s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.206s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.206s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.207s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.208s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.209s]       |         [01;36m[K^~~~~~~[m[K
[27.210s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.212s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.212s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.213s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.213s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.214s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.214s]       |         [01;36m[K^~~~~~~[m[K
[27.215s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.215s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.216s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.216s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.217s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.217s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.217s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.218s]       |         [01;36m[K^~~~~~~[m[K
[27.218s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.218s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.219s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.219s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.220s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.220s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.221s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.222s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.222s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.226s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.226s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.226s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.227s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.227s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.228s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.228s]       |                                           [01;36m[K^~~~~~~[m[K
[27.228s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.229s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[27.229s]   142 |       >::[01;31m[Kvalue[m[K)
[27.229s]       |          [01;31m[K^~~~~[m[K
[27.230s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[27.230s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.231s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.231s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.231s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.232s]       |         [01;36m[K^~~~~~~[m[K
[27.232s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.232s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.233s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.233s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.233s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.234s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.234s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.235s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.235s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[27.236s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.236s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.236s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.237s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.237s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.238s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.238s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.238s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.239s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.239s]       |         [01;36m[K^~~~~~~[m[K
[27.239s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.240s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.240s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.240s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.241s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.241s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.241s]       |         [01;36m[K^~~~~~~[m[K
[27.241s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.242s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.242s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.242s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.244s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.244s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.244s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.245s]       |         [01;36m[K^~~~~~~[m[K
[27.245s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.245s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.246s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.246s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.247s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.247s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.247s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.248s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.248s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.248s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.249s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.249s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.249s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.250s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.250s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.250s]       |                                           [01;36m[K^~~~~~~[m[K
[27.251s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.251s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™)
[27.252s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[27.252s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[27.252s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.253s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[27.253s]       |         [01;36m[K^~~~~~~~[m[K
[27.253s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.254s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[27.254s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[27.255s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.255s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.256s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.256s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.256s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.257s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[27.257s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[27.257s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[27.258s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.258s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.259s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.259s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.260s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.260s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.261s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[27.261s]       |                [01;36m[K^~~~~~~~[m[K
[27.261s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[27.262s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[27.262s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[27.263s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.263s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[27.263s]       |                [01;36m[K^~~~~~~~[m[K
[27.264s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[27.264s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[27.264s]       |                          [01;36m[K^~~~~~~~~[m[K
[27.522s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42[m[K,
[27.523s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[27.523s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K:
[27.523s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>[m[Kâ€™:
[27.524s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.524s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.524s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.525s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.525s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.525s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.525s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.526s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[27.526s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[27.526s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.526s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.527s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37[m[K,
[27.527s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28[m[K:
[27.527s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.528s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.528s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.528s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.528s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.529s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.529s]   121 |       >::[01;31m[Kvalue[m[K)
[27.529s]       |          [01;31m[K^~~~~[m[K
[27.531s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[27.532s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.532s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.535s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K:
[27.537s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.537s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.537s]       |         [01;36m[K^~~~~~~[m[K
[27.537s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.538s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.538s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.538s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.539s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.540s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.540s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.542s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.544s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[27.544s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.545s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.545s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.545s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.546s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.547s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.549s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.550s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.551s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.551s]       |         [01;36m[K^~~~~~~[m[K
[27.551s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.552s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.552s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.552s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.553s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.553s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.554s]       |         [01;36m[K^~~~~~~[m[K
[27.555s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.557s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.558s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.559s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.560s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.561s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.561s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.562s]       |         [01;36m[K^~~~~~~[m[K
[27.562s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.562s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.563s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.563s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.566s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.566s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.566s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.567s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.567s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.567s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.568s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.568s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.568s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.569s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.569s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.569s]       |                                           [01;36m[K^~~~~~~[m[K
[27.570s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.570s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.570s]   128 |       >::[01;31m[Kvalue[m[K)
[27.570s]       |          [01;31m[K^~~~~[m[K
[27.571s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[27.571s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.571s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.571s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.572s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.572s]       |         [01;36m[K^~~~~~~[m[K
[27.572s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.572s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.573s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.573s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.573s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.574s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.574s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.574s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.575s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[27.575s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.575s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.575s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.576s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.576s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.576s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.577s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.578s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.579s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.579s]       |         [01;36m[K^~~~~~~[m[K
[27.579s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.579s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.580s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.580s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.580s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.580s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.581s]       |         [01;36m[K^~~~~~~[m[K
[27.581s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.581s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.581s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.582s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.582s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.583s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.583s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.583s]       |         [01;36m[K^~~~~~~[m[K
[27.583s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.586s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.586s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.587s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.587s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.588s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.588s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.589s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.590s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.592s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.593s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.593s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.594s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.594s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.595s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.595s]       |                                           [01;36m[K^~~~~~~[m[K
[27.596s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.597s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[27.597s]   135 |       >::[01;31m[Kvalue[m[K)
[27.598s]       |          [01;31m[K^~~~~[m[K
[27.599s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[27.601s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.601s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.601s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.602s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.602s]       |         [01;36m[K^~~~~~~[m[K
[27.602s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.602s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.603s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.603s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.604s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.604s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.606s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.609s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.609s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[27.610s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.610s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.610s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.611s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.612s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.615s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.616s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.616s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.617s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.617s]       |         [01;36m[K^~~~~~~[m[K
[27.618s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.618s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.618s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.619s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.619s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.620s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.621s]       |         [01;36m[K^~~~~~~[m[K
[27.622s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.623s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.624s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.624s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.624s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.624s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.625s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.625s]       |         [01;36m[K^~~~~~~[m[K
[27.625s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.626s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.626s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.626s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.627s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.627s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.627s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.628s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.628s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.628s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.628s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.629s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.629s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.629s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.629s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.630s]       |                                           [01;36m[K^~~~~~~[m[K
[27.630s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.630s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[27.631s]   142 |       >::[01;31m[Kvalue[m[K)
[27.631s]       |          [01;31m[K^~~~~[m[K
[27.631s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[27.631s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.632s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.632s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.632s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.632s]       |         [01;36m[K^~~~~~~[m[K
[27.633s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.633s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.633s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.633s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.634s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.634s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.634s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.635s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.635s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[27.635s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.635s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.636s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.636s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.636s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.637s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.637s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.637s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.638s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.638s]       |         [01;36m[K^~~~~~~[m[K
[27.638s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.638s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[27.639s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.639s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.639s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.640s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.640s]       |         [01;36m[K^~~~~~~[m[K
[27.640s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.641s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.641s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.641s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.642s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.642s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.642s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.643s]       |         [01;36m[K^~~~~~~[m[K
[27.643s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.643s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.644s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.644s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.644s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.644s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.645s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.645s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.645s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.646s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.646s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.646s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.647s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.647s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.647s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.648s]       |                                           [01;36m[K^~~~~~~[m[K
[27.648s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.648s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™)
[27.649s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[27.649s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[27.650s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.650s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[27.650s]       |         [01;36m[K^~~~~~~~[m[K
[27.651s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.651s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[27.652s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[27.652s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[27.653s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.653s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.653s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.654s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.654s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[27.654s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[27.655s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[27.655s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[27.655s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.656s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.656s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.656s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[27.657s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.657s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[27.657s]       |                [01;36m[K^~~~~~~~[m[K
[27.657s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[27.658s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[27.658s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[27.658s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.658s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[27.659s]       |                [01;36m[K^~~~~~~~[m[K
[27.659s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[27.659s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[27.659s]       |                          [01;36m[K^~~~~~~~~[m[K
[27.660s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>[m[Kâ€™:
[27.660s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.660s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.661s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.661s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.661s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.661s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.662s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.662s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[27.662s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[27.662s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.663s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.663s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.663s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.663s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.664s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.664s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.664s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.665s]   121 |       >::[01;31m[Kvalue[m[K)
[27.665s]       |          [01;31m[K^~~~~[m[K
[27.665s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[27.665s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.666s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.666s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.666s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.666s]       |         [01;36m[K^~~~~~~[m[K
[27.667s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.667s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.667s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.667s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.668s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.668s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.668s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.669s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.669s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[27.669s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.669s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.670s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.670s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.670s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.671s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.671s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.671s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.671s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.672s]       |         [01;36m[K^~~~~~~[m[K
[27.672s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.672s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.673s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.673s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.674s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.674s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.674s]       |         [01;36m[K^~~~~~~[m[K
[27.675s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.675s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.675s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.676s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.676s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.676s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.677s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.677s]       |         [01;36m[K^~~~~~~[m[K
[27.677s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.677s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.678s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.678s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.678s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.678s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.679s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.679s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.679s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.680s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.680s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[27.681s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.681s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.681s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.682s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.682s]       |                                           [01;36m[K^~~~~~~[m[K
[27.682s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.683s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[27.683s]   128 |       >::[01;31m[Kvalue[m[K)
[27.683s]       |          [01;31m[K^~~~~[m[K
[27.684s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[27.684s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.684s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.685s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.685s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.685s]       |         [01;36m[K^~~~~~~[m[K
[27.686s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.686s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.686s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.686s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.687s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.687s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.687s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.687s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.688s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[27.688s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.688s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.689s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.689s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.689s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.690s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.690s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.690s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.691s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.691s]       |         [01;36m[K^~~~~~~[m[K
[27.691s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.691s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.692s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.692s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.692s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.692s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.693s]       |         [01;36m[K^~~~~~~[m[K
[27.693s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.693s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.693s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.694s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.694s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.694s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.694s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.695s]       |         [01;36m[K^~~~~~~[m[K
[27.695s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.695s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.696s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.696s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.696s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.697s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.697s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.697s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.698s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.698s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.698s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[27.698s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.699s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[27.699s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.699s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.699s]       |                                           [01;36m[K^~~~~~~[m[K
[27.700s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.700s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[27.700s]   135 |       >::[01;31m[Kvalue[m[K)
[27.700s]       |          [01;31m[K^~~~~[m[K
[27.701s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[27.701s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.701s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.701s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.702s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.702s]       |         [01;36m[K^~~~~~~[m[K
[27.702s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.702s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.703s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.703s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.703s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.703s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.704s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.704s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.704s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[27.704s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.705s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.705s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.705s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.706s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.706s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.706s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.707s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.707s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.707s]       |         [01;36m[K^~~~~~~[m[K
[27.707s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.708s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.708s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.708s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.708s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.709s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.709s]       |         [01;36m[K^~~~~~~[m[K
[27.709s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.710s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.710s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.710s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.710s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.711s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.711s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.711s]       |         [01;36m[K^~~~~~~[m[K
[27.711s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.712s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.712s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.712s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.712s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.713s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.713s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.713s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.713s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.714s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.714s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[27.714s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.714s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.715s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.715s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.716s]       |                                           [01;36m[K^~~~~~~[m[K
[27.716s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.716s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[27.717s]   142 |       >::[01;31m[Kvalue[m[K)
[27.717s]       |          [01;31m[K^~~~~[m[K
[27.717s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[27.717s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.718s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.718s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.718s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.719s]       |         [01;36m[K^~~~~~~[m[K
[27.719s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.719s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[27.719s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[27.720s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.720s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.720s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.721s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.721s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.721s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[27.722s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[27.722s]       |           [01;31m[K^~~~~~~~~~~[m[K
[27.722s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.722s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.723s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.723s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.723s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.723s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.724s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.724s]       |         [01;36m[K^~~~~~~[m[K
[27.724s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.724s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[27.725s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.725s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.725s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.726s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[27.726s]       |         [01;36m[K^~~~~~~[m[K
[27.726s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.726s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.727s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.727s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.727s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.727s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.728s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[27.728s]       |         [01;36m[K^~~~~~~[m[K
[27.728s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.728s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.729s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.729s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.729s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.730s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.730s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.730s]       |                                                 [01;36m[K^~~~~~~[m[K
[27.730s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.731s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.731s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[27.731s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[27.731s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[27.732s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[27.732s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[27.732s]       |                                           [01;36m[K^~~~~~~[m[K
[27.732s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.733s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™)
[27.733s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[27.733s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[27.733s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.734s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[27.734s]       |         [01;36m[K^~~~~~~~[m[K
[27.734s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[27.734s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[27.735s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[27.735s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[27.735s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.736s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.736s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.736s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.736s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[27.737s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[27.737s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[27.737s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[27.738s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.738s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[27.738s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[27.739s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[27.739s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.739s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[27.740s]       |                [01;36m[K^~~~~~~~[m[K
[27.740s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[27.740s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[27.741s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[27.741s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[27.741s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[27.742s]       |                [01;36m[K^~~~~~~~[m[K
[27.742s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[27.742s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[27.742s]       |                          [01;36m[K^~~~~~~~~[m[K
[43.240s] gmake[2]: *** [CMakeFiles/new_target.dir/build.make:76: CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o] Error 1
[43.240s] gmake[2]: *** Waiting for unfinished jobs....
[43.312s] gmake[2]: *** [CMakeFiles/new_target.dir/build.make:90: CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o] Error 1
[43.313s] gmake[1]: *** [CMakeFiles/Makefile2:623: CMakeFiles/new_target.dir/all] Error 2
[43.314s] gmake: *** [Makefile:146: all] Error 2
[43.321s] Invoked command in '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/jazzy DEBUGINFOD_URLS=https://debuginfod.ubuntu.com /usr/bin/cmake --build /home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2 -- -j16 -l16
