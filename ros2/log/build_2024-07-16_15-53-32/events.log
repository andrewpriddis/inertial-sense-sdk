[0.000000] (-) TimerEvent: {}
[0.001699] (inertial_sense_ros2) JobQueued: {'identifier': 'inertial_sense_ros2', 'dependencies': OrderedDict()}
[0.001956] (inertial_sense_ros2) JobStarted: {'identifier': 'inertial_sense_ros2'}
[0.038717] (inertial_sense_ros2) JobProgress: {'identifier': 'inertial_sense_ros2', 'progress': 'cmake'}
[0.042448] (inertial_sense_ros2) JobProgress: {'identifier': 'inertial_sense_ros2', 'progress': 'build'}
[0.044739] (inertial_sense_ros2) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2', '--', '-j16', '-l16'], 'cwd': '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 's', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/s', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'DBUS_STARTER_BUS_TYPE': 'session', 'SYSTEMD_EXEC_PID': '39870', 'IM_CONFIG_CHECK_ENV': '1', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus,guid=008c3f138ffe5a18718dbc506696e8eb', 'COLORTERM': 'truecolor', '_colcon_cd_root': '/opt/ros/jazzy/', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 's', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/app.slice/app-gnome\\x2dsession\\x2dmanager.slice/gnome-session-manager@ubuntu.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 's', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/s-VMware-Virtual-Platform:@/tmp/.ICE-unix/39870,unix/s-VMware-Virtual-Platform:/tmp/.ICE-unix/39870', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/95f0288d_8c15_42df_86ee_668fb3378c20', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.295RQ2', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'GNOME_TERMINAL_SERVICE': ':1.112', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '0', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'DBUS_STARTER_ADDRESS': 'unix:path=/run/user/1000/bus,guid=008c3f138ffe5a18718dbc506696e8eb', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.096339] (-) TimerEvent: {}
[0.197208] (-) TimerEvent: {}
[0.298097] (-) TimerEvent: {}
[0.312606] (inertial_sense_ros2) StdoutLine: {'line': b'[  1%] Built target inertial_sense_ros2__rosidl_generator_type_description\n'}
[0.365915] (inertial_sense_ros2) StdoutLine: {'line': b'[  1%] Built target ament_cmake_python_copy_inertial_sense_ros2\n'}
[0.398366] (-) TimerEvent: {}
[0.415723] (inertial_sense_ros2) StdoutLine: {'line': b'[  1%] Built target inertial_sense_ros2__cpp\n'}
[0.454001] (inertial_sense_ros2) StdoutLine: {'line': b'[  7%] \x1b[32mBuilding CXX object CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o\x1b[0m\n'}
[0.456457] (inertial_sense_ros2) StdoutLine: {'line': b'[ 28%] Built target inertial_sense_ros2__rosidl_generator_c\n'}
[0.458834] (inertial_sense_ros2) StdoutLine: {'line': b'[ 28%] \x1b[32mBuilding CXX object CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o\x1b[0m\n'}
[0.464487] (inertial_sense_ros2) StdoutLine: {'line': b'[ 29%] \x1b[32mBuilding CXX object CMakeFiles/new_target.dir/include/TopicHelper.cpp.o\x1b[0m\n'}
[0.498676] (-) TimerEvent: {}
[0.599913] (-) TimerEvent: {}
[0.670503] (inertial_sense_ros2) StdoutLine: {'line': b'[ 39%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_c\n'}
[0.683984] (inertial_sense_ros2) StdoutLine: {'line': b'[ 49%] Built target inertial_sense_ros2__rosidl_typesupport_cpp\n'}
[0.687823] (inertial_sense_ros2) StdoutLine: {'line': b'[ 59%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_c\n'}
[0.691068] (inertial_sense_ros2) StdoutLine: {'line': b'[ 68%] Built target inertial_sense_ros2__rosidl_typesupport_c\n'}
[0.696739] (inertial_sense_ros2) StdoutLine: {'line': b'[ 77%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_cpp\n'}
[0.700256] (-) TimerEvent: {}
[0.713414] (inertial_sense_ros2) StdoutLine: {'line': b'[ 86%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_cpp\n'}
[0.800601] (-) TimerEvent: {}
[0.803095] (inertial_sense_ros2) StdoutLine: {'line': b'[ 86%] Built target inertial_sense_ros2\n'}
[0.899518] (inertial_sense_ros2) StdoutLine: {'line': b'[ 87%] Built target inertial_sense_ros2__py\n'}
[0.900753] (-) TimerEvent: {}
[1.001468] (-) TimerEvent: {}
[1.040460] (inertial_sense_ros2) StdoutLine: {'line': b'[ 96%] Built target inertial_sense_ros2__rosidl_generator_py\n'}
[1.106463] (-) TimerEvent: {}
[1.154972] (inertial_sense_ros2) StdoutLine: {'line': b'[ 97%] Built target inertial_sense_ros2_s__rosidl_typesupport_introspection_c\n'}
[1.160228] (inertial_sense_ros2) StdoutLine: {'line': b'[ 98%] Built target inertial_sense_ros2_s__rosidl_typesupport_c\n'}
[1.163268] (inertial_sense_ros2) StdoutLine: {'line': b'[ 99%] Built target inertial_sense_ros2_s__rosidl_typesupport_fastrtps_c\n'}
[1.205334] (inertial_sense_ros2) StdoutLine: {'line': b'running egg_info\n'}
[1.206981] (-) TimerEvent: {}
[1.277622] (inertial_sense_ros2) StdoutLine: {'line': b'writing inertial_sense_ros2.egg-info/PKG-INFO\n'}
[1.279074] (inertial_sense_ros2) StdoutLine: {'line': b'writing dependency_links to inertial_sense_ros2.egg-info/dependency_links.txt\n'}
[1.280724] (inertial_sense_ros2) StdoutLine: {'line': b'writing top-level names to inertial_sense_ros2.egg-info/top_level.txt\n'}
[1.307291] (-) TimerEvent: {}
[1.408067] (-) TimerEvent: {}
[1.508998] (-) TimerEvent: {}
[1.514987] (inertial_sense_ros2) StdoutLine: {'line': b"reading manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'\n"}
[1.518227] (inertial_sense_ros2) StdoutLine: {'line': b"writing manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'\n"}
[1.609232] (-) TimerEvent: {}
[1.619175] (inertial_sense_ros2) StdoutLine: {'line': b'[ 99%] Built target ament_cmake_python_build_inertial_sense_ros2_egg\n'}
[1.709489] (-) TimerEvent: {}
[1.810340] (-) TimerEvent: {}
[1.911196] (-) TimerEvent: {}
[2.012095] (-) TimerEvent: {}
[2.112972] (-) TimerEvent: {}
[2.213771] (-) TimerEvent: {}
[2.314707] (-) TimerEvent: {}
[2.415667] (-) TimerEvent: {}
[2.516992] (-) TimerEvent: {}
[2.617896] (-) TimerEvent: {}
[2.718717] (-) TimerEvent: {}
[2.819513] (-) TimerEvent: {}
[2.920352] (-) TimerEvent: {}
[3.021135] (-) TimerEvent: {}
[3.122046] (-) TimerEvent: {}
[3.222794] (-) TimerEvent: {}
[3.323820] (-) TimerEvent: {}
[3.424707] (-) TimerEvent: {}
[3.525538] (-) TimerEvent: {}
[3.626503] (-) TimerEvent: {}
[3.727544] (-) TimerEvent: {}
[3.828731] (-) TimerEvent: {}
[3.929736] (-) TimerEvent: {}
[4.030726] (-) TimerEvent: {}
[4.131716] (-) TimerEvent: {}
[4.232725] (-) TimerEvent: {}
[4.333662] (-) TimerEvent: {}
[4.434550] (-) TimerEvent: {}
[4.535466] (-) TimerEvent: {}
[4.636738] (-) TimerEvent: {}
[4.737738] (-) TimerEvent: {}
[4.838721] (-) TimerEvent: {}
[4.939749] (-) TimerEvent: {}
[5.040717] (-) TimerEvent: {}
[5.141829] (-) TimerEvent: {}
[5.242815] (-) TimerEvent: {}
[5.343806] (-) TimerEvent: {}
[5.444810] (-) TimerEvent: {}
[5.545882] (-) TimerEvent: {}
[5.646924] (-) TimerEvent: {}
[5.747987] (-) TimerEvent: {}
[5.848954] (-) TimerEvent: {}
[5.949971] (-) TimerEvent: {}
[6.051157] (-) TimerEvent: {}
[6.152087] (-) TimerEvent: {}
[6.253214] (-) TimerEvent: {}
[6.354816] (-) TimerEvent: {}
[6.455789] (-) TimerEvent: {}
[6.556736] (-) TimerEvent: {}
[6.657848] (-) TimerEvent: {}
[6.759016] (-) TimerEvent: {}
[6.860155] (-) TimerEvent: {}
[6.961300] (-) TimerEvent: {}
[7.062229] (-) TimerEvent: {}
[7.163202] (-) TimerEvent: {}
[7.264207] (-) TimerEvent: {}
[7.365316] (-) TimerEvent: {}
[7.466200] (-) TimerEvent: {}
[7.567108] (-) TimerEvent: {}
[7.668069] (-) TimerEvent: {}
[7.769112] (-) TimerEvent: {}
[7.870197] (-) TimerEvent: {}
[7.971233] (-) TimerEvent: {}
[8.072222] (-) TimerEvent: {}
[8.173098] (-) TimerEvent: {}
[8.274290] (-) TimerEvent: {}
[8.375268] (-) TimerEvent: {}
[8.476254] (-) TimerEvent: {}
[8.577172] (-) TimerEvent: {}
[8.678346] (-) TimerEvent: {}
[8.779274] (-) TimerEvent: {}
[8.880167] (-) TimerEvent: {}
[8.981201] (-) TimerEvent: {}
[9.082079] (-) TimerEvent: {}
[9.183028] (-) TimerEvent: {}
[9.283790] (-) TimerEvent: {}
[9.384764] (-) TimerEvent: {}
[9.485724] (-) TimerEvent: {}
[9.586765] (-) TimerEvent: {}
[9.687703] (-) TimerEvent: {}
[9.790904] (-) TimerEvent: {}
[9.891856] (-) TimerEvent: {}
[10.000760] (-) TimerEvent: {}
[10.103809] (-) TimerEvent: {}
[10.207357] (-) TimerEvent: {}
[10.310254] (-) TimerEvent: {}
[10.420656] (-) TimerEvent: {}
[10.523855] (-) TimerEvent: {}
[10.624724] (-) TimerEvent: {}
[10.734656] (-) TimerEvent: {}
[10.855285] (-) TimerEvent: {}
[10.961117] (-) TimerEvent: {}
[11.068274] (-) TimerEvent: {}
[11.179694] (-) TimerEvent: {}
[11.294037] (-) TimerEvent: {}
[11.404210] (-) TimerEvent: {}
[11.507316] (-) TimerEvent: {}
[11.625168] (-) TimerEvent: {}
[11.739521] (-) TimerEvent: {}
[11.842672] (-) TimerEvent: {}
[11.963740] (-) TimerEvent: {}
[12.082316] (-) TimerEvent: {}
[12.186552] (-) TimerEvent: {}
[12.289279] (-) TimerEvent: {}
[12.392310] (-) TimerEvent: {}
[12.493211] (-) TimerEvent: {}
[12.594128] (-) TimerEvent: {}
[12.695636] (-) TimerEvent: {}
[12.809463] (-) TimerEvent: {}
[12.914025] (-) TimerEvent: {}
[13.049502] (-) TimerEvent: {}
[13.153711] (-) TimerEvent: {}
[13.254411] (-) TimerEvent: {}
[13.361414] (-) TimerEvent: {}
[13.465892] (-) TimerEvent: {}
[13.568527] (-) TimerEvent: {}
[13.673450] (-) TimerEvent: {}
[13.681463] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:32\x1b[m\x1b[K,\n'}
[13.682217] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:19\x1b[m\x1b[K:\n'}
[13.682715] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdiagnostic_msgs\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[13.683133] (inertial_sense_ros2) StderrLine: {'line': b'   50 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kdiagnostic_msgs\x1b[m\x1b[K::msg::DiagnosticArray>::SharedPtr pub_12;\n'}
[13.683483] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.683902] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[13.684248] (inertial_sense_ros2) StderrLine: {'line': b'   50 |     rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pub_12;\n'}
[13.684648] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[13.685019] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[13.685374] (inertial_sense_ros2) StderrLine: {'line': b'   50 |     rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pub_12;\n'}
[13.685979] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[13.686307] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                        \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[13.691455] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpub_12\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[13.692097] (inertial_sense_ros2) StderrLine: {'line': b'   50 |     rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray>::SharedPtr \x1b[01;31m\x1b[Kpub_12\x1b[m\x1b[K;\n'}
[13.692464] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[13.753353] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[13.754047] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::RTKInfo>::SharedPtr pubInfo;\n'}
[13.754444] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.755016] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[13.756784] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[13.757433] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubInfo;\n'}
[13.757847] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[13.759432] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[13.760041] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubInfo;\n'}
[13.760410] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[13.760840] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                    \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[13.762154] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[13.762861] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::SharedPtr \x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K;\n'}
[13.763289] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[13.773764] (-) TimerEvent: {}
[13.814250] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:32\x1b[m\x1b[K,\n'}
[13.814990] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:19\x1b[m\x1b[K:\n'}
[13.815380] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdiagnostic_msgs\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[13.815811] (inertial_sense_ros2) StderrLine: {'line': b'   50 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kdiagnostic_msgs\x1b[m\x1b[K::msg::DiagnosticArray>::SharedPtr pub_12;\n'}
[13.816145] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.816438] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[13.816774] (inertial_sense_ros2) StderrLine: {'line': b'   50 |     rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pub_12;\n'}
[13.817089] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[13.817447] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[13.818387] (inertial_sense_ros2) StderrLine: {'line': b'   50 |     rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pub_12;\n'}
[13.818785] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[13.819102] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                        \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[13.844775] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:50:73:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpub_12\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[13.845472] (inertial_sense_ros2) StderrLine: {'line': b'   50 |     rclcpp::Publisher<diagnostic_msgs::msg::DiagnosticArray>::SharedPtr \x1b[01;31m\x1b[Kpub_12\x1b[m\x1b[K;\n'}
[13.845991] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[13.851967] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[13.853422] (inertial_sense_ros2) StderrLine: {'line': b'   68 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::RTKRel>::SharedPtr pubRel;\n'}
[13.853947] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.854341] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[13.854764] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[13.855209] (inertial_sense_ros2) StderrLine: {'line': b'   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubRel;\n'}
[13.855716] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[13.856545] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[13.857156] (inertial_sense_ros2) StderrLine: {'line': b'   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubRel;\n'}
[13.857519] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[13.857930] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                   \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[13.858255] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredeclaration of \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRtk::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[13.858627] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:59:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRtk::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[13.859037] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::\x1b[01;36m\x1b[KSharedPtr\x1b[m\x1b[K pubInfo;\n'}
[13.859339] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                           \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[13.859676] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[13.860020] (inertial_sense_ros2) StderrLine: {'line': b'   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel>::SharedPtr \x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K;\n'}
[13.860318] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[13.890714] (-) TimerEvent: {}
[13.904660] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[13.905234] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::RTKInfo>::SharedPtr pubInfo;\n'}
[13.905554] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.905946] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[13.906293] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[13.906691] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubInfo;\n'}
[13.907049] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[13.907378] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[13.907734] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubInfo;\n'}
[13.908062] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[13.908356] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                    \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[13.912704] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[13.913713] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::SharedPtr \x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K;\n'}
[13.914408] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[13.922422] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[13.922825] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::GNSSObsVec>::SharedPtr pubObs;\n'}
[13.923317] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.923874] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[13.924402] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[13.924796] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubObs;\n'}
[13.925493] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[13.925882] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[13.926192] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubObs;\n'}
[13.926898] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[13.927241] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                       \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[13.932935] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[13.933656] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::SharedPtr \x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K;\n'}
[13.933910] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[13.990946] (-) TimerEvent: {}
[13.994353] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[13.995184] (inertial_sense_ros2) StderrLine: {'line': b'   78 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::GNSSEphemeris>::SharedPtr pubEph;\n'}
[13.995551] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[13.995985] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[13.996300] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[13.996670] (inertial_sense_ros2) StderrLine: {'line': b'   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubEph;\n'}
[13.997009] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[13.997315] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[13.997658] (inertial_sense_ros2) StderrLine: {'line': b'   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubEph;\n'}
[13.997961] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[13.998230] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                          \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[13.998595] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredeclaration of \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRaw::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[13.999096] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRaw::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[13.999401] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::\x1b[01;36m\x1b[KSharedPtr\x1b[m\x1b[K pubObs;\n'}
[13.999729] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.000546] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.001184] (inertial_sense_ros2) StderrLine: {'line': b'   68 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::RTKRel>::SharedPtr pubRel;\n'}
[14.001908] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.002290] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[14.002818] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[14.003930] (inertial_sense_ros2) StderrLine: {'line': b'   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubRel;\n'}
[14.004518] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[14.004960] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[14.005293] (inertial_sense_ros2) StderrLine: {'line': b'   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubRel;\n'}
[14.005696] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.006078] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                   \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[14.006404] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredeclaration of \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRtk::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.006777] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:67:59:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRtk::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.007085] (inertial_sense_ros2) StderrLine: {'line': b'   67 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKInfo>::\x1b[01;36m\x1b[KSharedPtr\x1b[m\x1b[K pubInfo;\n'}
[14.007375] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                           \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.007752] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[14.008063] (inertial_sense_ros2) StderrLine: {'line': b'   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris>::SharedPtr \x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K;\n'}
[14.008348] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[14.009559] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:68:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[14.010059] (inertial_sense_ros2) StderrLine: {'line': b'   68 |     rclcpp::Publisher<inertial_sense_ros2::msg::RTKRel>::SharedPtr \x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K;\n'}
[14.010388] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[14.074502] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.075759] (inertial_sense_ros2) StderrLine: {'line': b'   79 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::GlonassEphemeris>::SharedPtr pubGEp;\n'}
[14.076151] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.076720] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[14.077083] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[14.077395] (inertial_sense_ros2) StderrLine: {'line': b'   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubGEp;\n'}
[14.077777] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[14.078042] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[14.078307] (inertial_sense_ros2) StderrLine: {'line': b'   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubGEp;\n'}
[14.078638] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.078943] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                             \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[14.079198] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredeclaration of \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRaw::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.079461] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRaw::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.079763] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::\x1b[01;36m\x1b[KSharedPtr\x1b[m\x1b[K pubObs;\n'}
[14.080044] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.081948] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[14.082461] (inertial_sense_ros2) StderrLine: {'line': b'   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris>::SharedPtr \x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K;\n'}
[14.082954] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[14.091217] (-) TimerEvent: {}
[14.098797] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.099654] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::GNSSObsVec>::SharedPtr pubObs;\n'}
[14.100184] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.100724] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[14.101311] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[14.102003] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubObs;\n'}
[14.102354] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[14.102709] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[14.102981] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubObs;\n'}
[14.103218] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.103453] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                       \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[14.110422] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:72:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[14.111221] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::SharedPtr \x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K;\n'}
[14.111633] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                        \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[14.188768] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.189988] (inertial_sense_ros2) StderrLine: {'line': b'   78 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::GNSSEphemeris>::SharedPtr pubEph;\n'}
[14.190928] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.191952] (-) TimerEvent: {}
[14.192388] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[14.193193] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[14.194190] (inertial_sense_ros2) StderrLine: {'line': b'   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubEph;\n'}
[14.195026] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[14.195939] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[14.196365] (inertial_sense_ros2) StderrLine: {'line': b'   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubEph;\n'}
[14.197225] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.198197] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                          \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[14.198598] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredeclaration of \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRaw::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.198957] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRaw::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.199302] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::\x1b[01;36m\x1b[KSharedPtr\x1b[m\x1b[K pubObs;\n'}
[14.199669] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.200027] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:78:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[14.200353] (inertial_sense_ros2) StderrLine: {'line': b'   78 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSEphemeris>::SharedPtr \x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K;\n'}
[14.200688] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[14.271913] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[KInertialSense\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.273179] (inertial_sense_ros2) StderrLine: {'line': b'   79 |     rclcpp::Publisher<\x1b[01;31m\x1b[Kinertial_sense_ros2\x1b[m\x1b[K::msg::GlonassEphemeris>::SharedPtr pubGEp;\n'}
[14.273552] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.274457] (inertial_sense_ros2) StderrLine: {'line': b'      |                       \x1b[32m\x1b[KInertialSense\x1b[m\x1b[K\n'}
[14.275411] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[14.276042] (inertial_sense_ros2) StderrLine: {'line': b'   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris\x1b[01;31m\x1b[K>\x1b[m\x1b[K::SharedPtr pubGEp;\n'}
[14.276483] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[14.276991] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[14.277294] (inertial_sense_ros2) StderrLine: {'line': b'   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris>::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K pubGEp;\n'}
[14.277867] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.278430] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                             \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[14.278872] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kredeclaration of \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRaw::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.279531] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:62:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Kint TopicHelperGpsRaw::SharedPtr\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.279989] (inertial_sense_ros2) StderrLine: {'line': b'   77 |     rclcpp::Publisher<inertial_sense_ros2::msg::GNSSObsVec>::\x1b[01;36m\x1b[KSharedPtr\x1b[m\x1b[K pubObs;\n'}
[14.280293] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                              \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.283136] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[14.283842] (inertial_sense_ros2) StderrLine: {'line': b'   79 |     rclcpp::Publisher<inertial_sense_ros2::msg::GlonassEphemeris>::SharedPtr \x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K;\n'}
[14.284242] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[14.292256] (-) TimerEvent: {}
[14.395686] (-) TimerEvent: {}
[14.444108] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:26\x1b[m\x1b[K,\n'}
[14.444759] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.cpp:19\x1b[m\x1b[K:\n'}
[14.445187] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:231:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kdid_ins1\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.445648] (inertial_sense_ros2) StderrLine: {'line': b'  231 |         TopicHelper \x1b[01;31m\x1b[Kdid_ins1\x1b[m\x1b[K;\n'}
[14.446048] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[14.446392] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:33\x1b[m\x1b[K:\n'}
[14.446808] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.447145] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.447461] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.447875] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:232:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kdid_ins2\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.448396] (inertial_sense_ros2) StderrLine: {'line': b'  232 |         TopicHelper \x1b[01;31m\x1b[Kdid_ins2\x1b[m\x1b[K;\n'}
[14.448796] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[14.449129] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.449450] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.450497] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.451051] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:233:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kdid_ins4\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.451389] (inertial_sense_ros2) StderrLine: {'line': b'  233 |         TopicHelper \x1b[01;31m\x1b[Kdid_ins4\x1b[m\x1b[K;\n'}
[14.451780] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[14.452160] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.452482] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.452870] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.453350] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:234:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kodom_ins_ned\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.453774] (inertial_sense_ros2) StderrLine: {'line': b'  234 |         TopicHelper \x1b[01;31m\x1b[Kodom_ins_ned\x1b[m\x1b[K;\n'}
[14.454111] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.454428] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.454823] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.457714] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.458437] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:235:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kodom_ins_ecef\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.459174] (inertial_sense_ros2) StderrLine: {'line': b'  235 |         TopicHelper \x1b[01;31m\x1b[Kodom_ins_ecef\x1b[m\x1b[K;\n'}
[14.460025] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.460687] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.462177] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.462842] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.463410] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:236:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kodom_ins_enu\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.464327] (inertial_sense_ros2) StderrLine: {'line': b'  236 |         TopicHelper \x1b[01;31m\x1b[Kodom_ins_enu\x1b[m\x1b[K;\n'}
[14.464511] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.464788] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.464972] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.465511] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.466299] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:237:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kinl2_states\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.466795] (inertial_sense_ros2) StderrLine: {'line': b'  237 |         TopicHelper \x1b[01;31m\x1b[Kinl2_states\x1b[m\x1b[K;\n'}
[14.467172] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.467525] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.467890] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.469404] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.469761] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:239:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kimu\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.470318] (inertial_sense_ros2) StderrLine: {'line': b'  239 |         TopicHelper \x1b[01;31m\x1b[Kimu\x1b[m\x1b[K;\n'}
[14.470694] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[14.471199] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.471622] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.471938] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.472181] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:240:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kpimu\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.472934] (inertial_sense_ros2) StderrLine: {'line': b'  240 |         TopicHelper \x1b[01;31m\x1b[Kpimu\x1b[m\x1b[K;\n'}
[14.473315] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[14.473884] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.474399] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.474910] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.475242] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:241:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kmagnetometer\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.475642] (inertial_sense_ros2) StderrLine: {'line': b'  241 |         TopicHelper \x1b[01;31m\x1b[Kmagnetometer\x1b[m\x1b[K;\n'}
[14.475999] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.476292] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.476625] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.476947] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.477246] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:242:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kbarometer\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.477629] (inertial_sense_ros2) StderrLine: {'line': b'  242 |         TopicHelper \x1b[01;31m\x1b[Kbarometer\x1b[m\x1b[K;\n'}
[14.477948] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.478237] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.478536] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.478883] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.479405] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:243:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kstrobe_in\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.479832] (inertial_sense_ros2) StderrLine: {'line': b'  243 |         TopicHelper \x1b[01;31m\x1b[Kstrobe_in\x1b[m\x1b[K;\n'}
[14.480168] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.480552] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.481091] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.481492] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.481890] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:245:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KTopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.482218] (inertial_sense_ros2) StderrLine: {'line': b'  245 |         \x1b[01;31m\x1b[KTopicHelperGps\x1b[m\x1b[K gps1;\n'}
[14.482530] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.483058] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[32m\x1b[KTopicHelper\x1b[m\x1b[K\n'}
[14.483445] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:246:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KTopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.483880] (inertial_sense_ros2) StderrLine: {'line': b'  246 |         \x1b[01;31m\x1b[KTopicHelperGps\x1b[m\x1b[K gps2;\n'}
[14.484228] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.484609] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[32m\x1b[KTopicHelper\x1b[m\x1b[K\n'}
[14.485053] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:247:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kgps1_navsatfix\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.485435] (inertial_sense_ros2) StderrLine: {'line': b'  247 |         TopicHelper \x1b[01;31m\x1b[Kgps1_navsatfix\x1b[m\x1b[K;\n'}
[14.485881] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.486239] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.486630] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.487005] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.487345] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:248:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kgps2_navsatfix\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.487792] (inertial_sense_ros2) StderrLine: {'line': b'  248 |         TopicHelper \x1b[01;31m\x1b[Kgps2_navsatfix\x1b[m\x1b[K;\n'}
[14.488164] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.488516] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.488936] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.489320] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.489675] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:249:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kgps1_info\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.489987] (inertial_sense_ros2) StderrLine: {'line': b'  249 |         TopicHelper \x1b[01;31m\x1b[Kgps1_info\x1b[m\x1b[K;\n'}
[14.490287] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.490618] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.494190] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.494800] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.495335] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:250:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kgps2_info\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.495780] (-) TimerEvent: {}
[14.496159] (inertial_sense_ros2) StderrLine: {'line': b'  250 |         TopicHelper \x1b[01;31m\x1b[Kgps2_info\x1b[m\x1b[K;\n'}
[14.496620] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[14.496982] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.497308] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.497683] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.502926] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:251:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KTopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.503633] (inertial_sense_ros2) StderrLine: {'line': b'  251 |         \x1b[01;31m\x1b[KTopicHelperGpsRaw\x1b[m\x1b[K gps1_raw;\n'}
[14.504026] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.504360] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[32m\x1b[KTopicHelper\x1b[m\x1b[K\n'}
[14.504733] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:252:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KTopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.505056] (inertial_sense_ros2) StderrLine: {'line': b'  252 |         \x1b[01;31m\x1b[KTopicHelperGpsRaw\x1b[m\x1b[K gps2_raw;\n'}
[14.505372] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.505725] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[32m\x1b[KTopicHelper\x1b[m\x1b[K\n'}
[14.517334] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:253:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KTopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.517979] (inertial_sense_ros2) StderrLine: {'line': b'  253 |         \x1b[01;31m\x1b[KTopicHelperGpsRaw\x1b[m\x1b[K gpsbase_raw;\n'}
[14.518320] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.518680] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[32m\x1b[KTopicHelper\x1b[m\x1b[K\n'}
[14.531730] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:254:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KTopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.532359] (inertial_sense_ros2) StderrLine: {'line': b'  254 |         \x1b[01;31m\x1b[KTopicHelperGpsRtk\x1b[m\x1b[K rtk_pos;\n'}
[14.532998] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.533367] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[32m\x1b[KTopicHelper\x1b[m\x1b[K\n'}
[14.550262] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:255:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KTopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99?\n'}
[14.551034] (inertial_sense_ros2) StderrLine: {'line': b'  255 |         \x1b[01;31m\x1b[KTopicHelperGpsRtk\x1b[m\x1b[K rtk_cmp;\n'}
[14.551482] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.551907] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[32m\x1b[KTopicHelper\x1b[m\x1b[K\n'}
[14.552209] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:257:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kfield \xe2\x80\x98\x1b[01m\x1b[Kdiagnostics\x1b[m\x1b[K\xe2\x80\x99 has incomplete type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.552499] (inertial_sense_ros2) StderrLine: {'line': b'  257 |         TopicHelper \x1b[01;31m\x1b[Kdiagnostics\x1b[m\x1b[K;\n'}
[14.552993] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.553334] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/ParamHelper.h:26:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kforward declaration of \xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[14.553711] (inertial_sense_ros2) StderrLine: {'line': b'   26 | class \x1b[01;36m\x1b[KTopicHelper\x1b[m\x1b[K;\n'}
[14.554035] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[14.596101] (-) TimerEvent: {}
[14.699001] (-) TimerEvent: {}
[14.806268] (-) TimerEvent: {}
[14.917211] (-) TimerEvent: {}
[15.029761] (-) TimerEvent: {}
[15.139301] (-) TimerEvent: {}
[15.241933] (-) TimerEvent: {}
[15.343103] (-) TimerEvent: {}
[15.444706] (-) TimerEvent: {}
[15.559410] (-) TimerEvent: {}
[15.661779] (-) TimerEvent: {}
[15.763056] (-) TimerEvent: {}
[15.871203] (-) TimerEvent: {}
[15.972553] (-) TimerEvent: {}
[16.083103] (-) TimerEvent: {}
[16.189430] (-) TimerEvent: {}
[16.291486] (-) TimerEvent: {}
[16.392512] (-) TimerEvent: {}
[16.503402] (-) TimerEvent: {}
[16.547988] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:20\x1b[m\x1b[K:\n'}
[16.549999] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KinitializeROS\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[16.550511] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:140:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.551228] (inertial_sense_ros2) StderrLine: {'line': b'  140 |     if (rs_.did_ins1.enabled)               { rs_.did_ins1\x1b[01;31m\x1b[K->\x1b[m\x1b[Kpub    = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS1>(rs_.did_ins1.topic, 1); }\n'}
[16.552039] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[16.552453] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.553052] (inertial_sense_ros2) StderrLine: {'line': b'  141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1); }\n'}
[16.553599] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.566032] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.566991] (inertial_sense_ros2) StderrLine: {'line': b'  142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1); }\n'}
[16.567425] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.576825] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.577527] (inertial_sense_ros2) StderrLine: {'line': b'  143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1); }\n'}
[16.578020] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.582104] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.582852] (inertial_sense_ros2) StderrLine: {'line': b'  144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1); }\n'}
[16.583300] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.583730] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.584143] (inertial_sense_ros2) StderrLine: {'line': b'  145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1); }\n'}
[16.584514] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.584920] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.585247] (inertial_sense_ros2) StderrLine: {'line': b'  146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K   = nh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1); }\n'}
[16.585610] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.588963] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.589548] (inertial_sense_ros2) StderrLine: {'line': b'  148 |     if (rs_.pimu.enabled)                   { rs_.pimu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1); }\n'}
[16.590370] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.597355] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.598232] (inertial_sense_ros2) StderrLine: {'line': b'  149 |     if (rs_.imu.enabled)                    { rs_.imu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1); }\n'}
[16.598750] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.604846] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.605509] (-) TimerEvent: {}
[16.606448] (inertial_sense_ros2) StderrLine: {'line': b'  150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1); }\n'}
[16.607289] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.611417] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.611878] (inertial_sense_ros2) StderrLine: {'line': b'  151 |     if (rs_.barometer.enabled)              { rs_.barometer.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1); }\n'}
[16.612166] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.619080] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.619636] (inertial_sense_ros2) StderrLine: {'line': b'  153 |     if (rs_.gps1.enabled)                   { rs_.gps1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1); }\n'}
[16.620025] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.628148] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.628923] (inertial_sense_ros2) StderrLine: {'line': b'  154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1); }\n'}
[16.629497] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.636872] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.637431] (inertial_sense_ros2) StderrLine: {'line': b'  155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1); }\n'}
[16.637989] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.642609] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.643132] (inertial_sense_ros2) StderrLine: {'line': b'  157 |     if (rs_.gps2.enabled)                   { rs_.gps2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1); }\n'}
[16.643464] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.643888] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.644222] (inertial_sense_ros2) StderrLine: {'line': b'  158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1); }\n'}
[16.644539] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.646300] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.646836] (inertial_sense_ros2) StderrLine: {'line': b'  159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1); }\n'}
[16.647150] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.647466] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:163:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.647891] (inertial_sense_ros2) StderrLine: {'line': b'  163 |         rs_.rtk_pos.\x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKInfo>("RTK_pos/info", 10);\n'}
[16.648236] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[16.650584] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:164:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.651121] (inertial_sense_ros2) StderrLine: {'line': b'  164 |         rs_.rtk_pos.\x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKRel>("RTK_pos/rel", 10);\n'}
[16.651544] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.658341] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:168:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.659102] (inertial_sense_ros2) StderrLine: {'line': b'  168 |         rs_.rtk_cmp.\x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKInfo>("RTK_cmp/info", 10);\n'}
[16.659462] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[16.659863] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:169:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.660179] (inertial_sense_ros2) StderrLine: {'line': b'  169 |         rs_.rtk_cmp.\x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKRel>("RTK_cmp/rel", 10);\n'}
[16.660936] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.662170] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:174:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.663414] (inertial_sense_ros2) StderrLine: {'line': b'  174 |         rs_.gps1_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSObsVec>(rs_.gps1_raw.topic + "/obs", 50);\n'}
[16.664030] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.675423] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:175:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.678480] (inertial_sense_ros2) StderrLine: {'line': b'  175 |         rs_.gps1_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>(rs_.gps1_raw.topic + "/eph", 50);\n'}
[16.680187] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.680609] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:176:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.681007] (inertial_sense_ros2) StderrLine: {'line': b'  176 |         rs_.gps1_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>(rs_.gps1_raw.topic + "/geph", 50);\n'}
[16.681535] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.686935] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:181:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.687669] (inertial_sense_ros2) StderrLine: {'line': b'  181 |         rs_.gps2_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSObsVec>(rs_.gps2_raw.topic + "/obs", 50);\n'}
[16.688067] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.688538] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:182:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.688979] (inertial_sense_ros2) StderrLine: {'line': b'  182 |         rs_.gps2_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>(rs_.gps2_raw.topic + "/eph", 50);\n'}
[16.689446] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.690156] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:183:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.690542] (inertial_sense_ros2) StderrLine: {'line': b'  183 |         rs_.gps2_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>(rs_.gps2_raw.topic + "/geph", 50);\n'}
[16.691499] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.692285] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.692684] (inertial_sense_ros2) StderrLine: {'line': b'  188 |         rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50);\n'}
[16.693062] (inertial_sense_ros2) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.693348] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:189:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.693921] (inertial_sense_ros2) StderrLine: {'line': b'  189 |         rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>("gps/base_eph", 50);\n'}
[16.694251] (inertial_sense_ros2) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.694540] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:190:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.694935] (inertial_sense_ros2) StderrLine: {'line': b'  190 |         rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50);\n'}
[16.695250] (inertial_sense_ros2) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.695537] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:195:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.695890] (inertial_sense_ros2) StderrLine: {'line': b'  195 |         rs_.diagnostics.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<diagnostic_msgs::msg::DiagnosticArray>("diagnostics", 1);\n'}
[16.696187] (inertial_sense_ros2) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.706664] (-) TimerEvent: {}
[16.803976] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KinitializeROS\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[16.804709] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:140:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[KTopicHelper\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.805121] (inertial_sense_ros2) StderrLine: {'line': b'  140 |     if (rs_.did_ins1.enabled)               { rs_.did_ins1\x1b[01;31m\x1b[K->\x1b[m\x1b[Kpub    = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS1>(rs_.did_ins1.topic, 1); }\n'}
[16.805517] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[16.807998] (-) TimerEvent: {}
[16.815720] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:141:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.816318] (inertial_sense_ros2) StderrLine: {'line': b'  141 |     if (rs_.did_ins2.enabled)               { rs_.did_ins2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS2>(rs_.did_ins2.topic, 1); }\n'}
[16.816763] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.824834] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:142:60:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.825443] (inertial_sense_ros2) StderrLine: {'line': b'  142 |     if (rs_.did_ins4.enabled)               { rs_.did_ins4.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K      = nh_->create_publisher<inertial_sense_ros2::msg::DIDINS4>(rs_.did_ins4.topic, 1); }\n'}
[16.825892] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                            \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.833710] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:143:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.834276] (inertial_sense_ros2) StderrLine: {'line': b'  143 |     if (rs_.odom_ins_ned.enabled)           { rs_.odom_ins_ned.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ned.topic, 1); }\n'}
[16.834916] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.842007] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:144:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.843132] (inertial_sense_ros2) StderrLine: {'line': b'  144 |     if (rs_.odom_ins_enu.enabled)           { rs_.odom_ins_enu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K  = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_enu.topic, 1); }\n'}
[16.843819] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.844199] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:145:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.844526] (inertial_sense_ros2) StderrLine: {'line': b'  145 |     if (rs_.odom_ins_ecef.enabled)          { rs_.odom_ins_ecef.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<nav_msgs::msg::Odometry>(rs_.odom_ins_ecef.topic, 1); }\n'}
[16.844920] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                 \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.845270] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:146:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.845614] (inertial_sense_ros2) StderrLine: {'line': b'  146 |     if (rs_.inl2_states.enabled)            { rs_.inl2_states.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K   = nh_->create_publisher<inertial_sense_ros2::msg::INL2States>(rs_.inl2_states.topic, 1); }\n'}
[16.845952] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.870960] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:148:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.871520] (inertial_sense_ros2) StderrLine: {'line': b'  148 |     if (rs_.pimu.enabled)                   { rs_.pimu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::PIMU>(rs_.pimu.topic, 1); }\n'}
[16.871932] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.887272] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:149:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.888214] (inertial_sense_ros2) StderrLine: {'line': b'  149 |     if (rs_.imu.enabled)                    { rs_.imu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::Imu>(rs_.imu.topic, 1); }\n'}
[16.888876] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.889245] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:150:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.889957] (inertial_sense_ros2) StderrLine: {'line': b'  150 |     if (rs_.magnetometer.enabled)           { rs_.magnetometer.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::MagneticField>(rs_.magnetometer.topic, 1); }\n'}
[16.890341] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.893301] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:151:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.895607] (inertial_sense_ros2) StderrLine: {'line': b'  151 |     if (rs_.barometer.enabled)              { rs_.barometer.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::FluidPressure>(rs_.barometer.topic, 1); }\n'}
[16.896773] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.897407] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:153:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.901041] (inertial_sense_ros2) StderrLine: {'line': b'  153 |     if (rs_.gps1.enabled)                   { rs_.gps1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps1.topic, 1); }\n'}
[16.902005] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.944785] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:154:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.945680] (-) TimerEvent: {}
[16.946006] (inertial_sense_ros2) StderrLine: {'line': b'  154 |     if (rs_.gps1_navsatfix.enabled)         { rs_.gps1_navsatfix.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps1_navsatfix.topic, 1); }\n'}
[16.965611] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.966337] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:155:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.966971] (inertial_sense_ros2) StderrLine: {'line': b'  155 |     if (rs_.gps1_info.enabled)              { rs_.gps1_info.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps1_info.topic, 1); }\n'}
[16.967340] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.968071] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:157:56:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.968446] (inertial_sense_ros2) StderrLine: {'line': b'  157 |     if (rs_.gps2.enabled)                   { rs_.gps2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GPS>(rs_.gps2.topic, 1); }\n'}
[16.969157] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.969519] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:158:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.970163] (inertial_sense_ros2) StderrLine: {'line': b'  158 |     if (rs_.gps2_navsatfix.enabled)         { rs_.gps2_navsatfix.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<sensor_msgs::msg::NavSatFix>(rs_.gps2_navsatfix.topic, 1); }\n'}
[16.970992] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.971624] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:159:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.972179] (inertial_sense_ros2) StderrLine: {'line': b'  159 |     if (rs_.gps2_info.enabled)              { rs_.gps2_info.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GPSInfo>(rs_.gps2_info.topic, 1); }\n'}
[16.972494] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[16.973208] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:163:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.976626] (inertial_sense_ros2) StderrLine: {'line': b'  163 |         rs_.rtk_pos.\x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKInfo>("RTK_pos/info", 10);\n'}
[16.977035] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[16.977331] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:164:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.977702] (inertial_sense_ros2) StderrLine: {'line': b'  164 |         rs_.rtk_pos.\x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKRel>("RTK_pos/rel", 10);\n'}
[16.978041] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.978344] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:168:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.978763] (inertial_sense_ros2) StderrLine: {'line': b'  168 |         rs_.rtk_cmp.\x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKInfo>("RTK_cmp/info", 10);\n'}
[16.979061] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[16.979331] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:169:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.979687] (inertial_sense_ros2) StderrLine: {'line': b'  169 |         rs_.rtk_cmp.\x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::RTKRel>("RTK_cmp/rel", 10);\n'}
[16.979989] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.980268] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:174:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.980607] (inertial_sense_ros2) StderrLine: {'line': b'  174 |         rs_.gps1_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSObsVec>(rs_.gps1_raw.topic + "/obs", 50);\n'}
[16.980941] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.981278] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:175:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.981625] (inertial_sense_ros2) StderrLine: {'line': b'  175 |         rs_.gps1_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>(rs_.gps1_raw.topic + "/eph", 50);\n'}
[16.981967] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.982295] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:176:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.982689] (inertial_sense_ros2) StderrLine: {'line': b'  176 |         rs_.gps1_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>(rs_.gps1_raw.topic + "/geph", 50);\n'}
[16.983015] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.983292] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:181:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.983607] (inertial_sense_ros2) StderrLine: {'line': b'  181 |         rs_.gps2_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSObsVec>(rs_.gps2_raw.topic + "/obs", 50);\n'}
[16.983914] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.984204] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:182:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.984489] (inertial_sense_ros2) StderrLine: {'line': b'  182 |         rs_.gps2_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>(rs_.gps2_raw.topic + "/eph", 50);\n'}
[16.984817] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.985089] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:183:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.985357] (inertial_sense_ros2) StderrLine: {'line': b'  183 |         rs_.gps2_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>(rs_.gps2_raw.topic + "/geph", 50);\n'}
[16.985687] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.986006] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:188:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.986318] (inertial_sense_ros2) StderrLine: {'line': b'  188 |         rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50);\n'}
[16.986649] (inertial_sense_ros2) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.986973] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:189:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.987362] (inertial_sense_ros2) StderrLine: {'line': b'  189 |         rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GNSSEphemeris>("gps/base_eph", 50);\n'}
[16.987769] (inertial_sense_ros2) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.988101] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:190:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.988444] (inertial_sense_ros2) StderrLine: {'line': b'  190 |         rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K = nh_->create_publisher<inertial_sense_ros2::msg::GlonassEphemeris>("gps/base_geph", 50);\n'}
[16.988823] (inertial_sense_ros2) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[16.989122] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:195:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[16.989423] (inertial_sense_ros2) StderrLine: {'line': b'  195 |         rs_.diagnostics.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K = nh_->create_publisher<diagnostic_msgs::msg::DiagnosticArray>("diagnostics", 1);\n'}
[16.989781] (inertial_sense_ros2) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.035837] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool InertialSenseROS::\x1b[01;32m\x1b[Kfirmware_compatiblity_check\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.036778] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLevel\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Logger::Level\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.037364] (inertial_sense_ros2) StderrLine: {'line': b'  568 |     rclcpp::Logger::Level::\x1b[01;31m\x1b[KLevel\x1b[m\x1b[K protocol_fault = rclcpp::Logger::Level::Debug; // none\n'}
[17.038108] (inertial_sense_ros2) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[17.046513] (-) TimerEvent: {}
[17.083834] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kprotocol_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kprotocol_type_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[17.084196] (inertial_sense_ros2) StderrLine: {'line': b'  569 |     if (diff_protocol[0] != 0) \x1b[01;31m\x1b[Kprotocol_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING\n'}
[17.084438] (inertial_sense_ros2) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.084834] (inertial_sense_ros2) StderrLine: {'line': b'      |                                \x1b[32m\x1b[Kprotocol_type_t\x1b[m\x1b[K\n'}
[17.129893] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kprotocol_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kprotocol_type_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[17.130419] (inertial_sense_ros2) StderrLine: {'line': b'  570 |     else if (diff_protocol[1] != 0) \x1b[01;31m\x1b[Kprotocol_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features\n'}
[17.130842] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.131135] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kprotocol_type_t\x1b[m\x1b[K\n'}
[17.147208] (-) TimerEvent: {}
[17.181821] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kprotocol_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kprotocol_type_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[17.182509] (inertial_sense_ros2) StderrLine: {'line': b"  571 |     else if (diff_protocol[2] != 0) \x1b[01;31m\x1b[Kprotocol_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important\n"}
[17.183134] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.183484] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kprotocol_type_t\x1b[m\x1b[K\n'}
[17.229659] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kprotocol_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kprotocol_type_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[17.231405] (inertial_sense_ros2) StderrLine: {'line': b'  572 |     else if (diff_protocol[3] != 0) \x1b[01;31m\x1b[Kprotocol_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.\n'}
[17.232081] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.232983] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kprotocol_type_t\x1b[m\x1b[K\n'}
[17.233491] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLevel\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Logger::Level\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.234448] (inertial_sense_ros2) StderrLine: {'line': b'  574 |     rclcpp::Logger::Level::\x1b[01;31m\x1b[KLevel\x1b[m\x1b[K firmware_fault = rclcpp::Logger::Level::Debug; // none\n'}
[17.235274] (inertial_sense_ros2) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[17.237097] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool InertialSenseROS::\x1b[01;32m\x1b[Kfirmware_compatiblity_check\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.237895] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLevel\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Logger::Level\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.238503] (inertial_sense_ros2) StderrLine: {'line': b'  568 |     rclcpp::Logger::Level::\x1b[01;31m\x1b[KLevel\x1b[m\x1b[K protocol_fault = rclcpp::Logger::Level::Debug; // none\n'}
[17.239026] (inertial_sense_ros2) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[17.247469] (-) TimerEvent: {}
[17.283808] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kprotocol_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kprotocol_type_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[17.284311] (inertial_sense_ros2) StderrLine: {'line': b'  569 |     if (diff_protocol[0] != 0) \x1b[01;31m\x1b[Kprotocol_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING\n'}
[17.284707] (inertial_sense_ros2) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.285024] (inertial_sense_ros2) StderrLine: {'line': b'      |                                \x1b[32m\x1b[Kprotocol_type_t\x1b[m\x1b[K\n'}
[17.287907] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfirmware_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[17.288385] (inertial_sense_ros2) StderrLine: {'line': b'  575 |     if (diff_firmware[0] != 0) \x1b[01;31m\x1b[Kfirmware_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING\n'}
[17.288799] (inertial_sense_ros2) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.346127] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfirmware_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[17.346911] (inertial_sense_ros2) StderrLine: {'line': b'  576 |     else if (diff_firmware[1] != 0) \x1b[01;31m\x1b[Kfirmware_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features\n'}
[17.347331] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.347722] (-) TimerEvent: {}
[17.349357] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kprotocol_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kprotocol_type_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[17.350161] (inertial_sense_ros2) StderrLine: {'line': b'  570 |     else if (diff_protocol[1] != 0) \x1b[01;31m\x1b[Kprotocol_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features\n'}
[17.350544] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.350978] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kprotocol_type_t\x1b[m\x1b[K\n'}
[17.408155] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfirmware_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[17.408766] (inertial_sense_ros2) StderrLine: {'line': b"  577 |     else if (diff_firmware[2] != 0) \x1b[01;31m\x1b[Kfirmware_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important\n"}
[17.409168] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.409626] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLevel\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Logger::Level\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.410019] (inertial_sense_ros2) StderrLine: {'line': b'  579 |     rclcpp::Logger::Level::\x1b[01;31m\x1b[KLevel\x1b[m\x1b[K final_fault = std::max(firmware_fault, protocol_fault);\n'}
[17.410504] (inertial_sense_ros2) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[17.412056] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kprotocol_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kprotocol_type_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[17.412509] (inertial_sense_ros2) StderrLine: {'line': b"  571 |     else if (diff_protocol[2] != 0) \x1b[01;31m\x1b[Kprotocol_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important\n"}
[17.413105] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.413423] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kprotocol_type_t\x1b[m\x1b[K\n'}
[17.453304] (-) TimerEvent: {}
[17.468698] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfinal_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[17.469262] (inertial_sense_ros2) StderrLine: {'line': b"  599 |     return \x1b[01;31m\x1b[Kfinal_fault\x1b[m\x1b[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.\n"}
[17.469550] (inertial_sense_ros2) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.470199] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kprotocol_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kprotocol_type_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[17.470630] (inertial_sense_ros2) StderrLine: {'line': b'  572 |     else if (diff_protocol[3] != 0) \x1b[01;31m\x1b[Kprotocol_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.\n'}
[17.471011] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.471902] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kprotocol_type_t\x1b[m\x1b[K\n'}
[17.472247] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLevel\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Logger::Level\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.472623] (inertial_sense_ros2) StderrLine: {'line': b'  574 |     rclcpp::Logger::Level::\x1b[01;31m\x1b[KLevel\x1b[m\x1b[K firmware_fault = rclcpp::Logger::Level::Debug; // none\n'}
[17.472975] (inertial_sense_ros2) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[17.518857] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfirmware_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[17.519444] (inertial_sense_ros2) StderrLine: {'line': b'  575 |     if (diff_firmware[0] != 0) \x1b[01;31m\x1b[Kfirmware_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING\n'}
[17.520022] (inertial_sense_ros2) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.553714] (-) TimerEvent: {}
[17.576451] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfirmware_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[17.577138] (inertial_sense_ros2) StderrLine: {'line': b'  576 |     else if (diff_firmware[1] != 0) \x1b[01;31m\x1b[Kfirmware_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features\n'}
[17.577468] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.609361] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KINS1_callback\x1b[m\x1b[K(eDataIDs, const ins_1_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.610020] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:954:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.610396] (inertial_sense_ros2) StderrLine: {'line': b'  954 |         if (rs_.did_ins1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.getNumSubscribers() > 0)\n'}
[17.611268] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.611748] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.612155] (inertial_sense_ros2) StderrLine: {'line': b'  955 |             rs_.did_ins1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_did_ins1);\n'}
[17.612459] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.613404] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KINS2_callback\x1b[m\x1b[K(eDataIDs, const ins_2_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.613767] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:981:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.614135] (inertial_sense_ros2) StderrLine: {'line': b'  981 |         if (rs_.did_ins2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.getNumSubscribers() > 0)\n'}
[17.614448] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.614797] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.615096] (inertial_sense_ros2) StderrLine: {'line': b'  982 |             rs_.did_ins2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_did_ins2);\n'}
[17.615376] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.615837] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KINS4_callback\x1b[m\x1b[K(eDataIDs, const ins_4_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.617416] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1008:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.617939] (inertial_sense_ros2) StderrLine: {'line': b' 1008 |         if (rs_.did_ins4.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.getNumSubscribers() > 0)\n'}
[17.618282] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.618637] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.618989] (inertial_sense_ros2) StderrLine: {'line': b' 1009 |             rs_.did_ins4.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_did_ins4);\n'}
[17.619283] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.619618] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.619991] (inertial_sense_ros2) StderrLine: {'line': b' 1078 |             rs_.odom_ins_ecef.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_odom_ecef);\n'}
[17.620311] (inertial_sense_ros2) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.621490] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.622131] (inertial_sense_ros2) StderrLine: {'line': b' 1165 |                 rs_.odom_ins_ned.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_odom_ned);\n'}
[17.622476] (inertial_sense_ros2) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.626055] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.626601] (inertial_sense_ros2) StderrLine: {'line': b' 1259 |                 rs_.odom_ins_enu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_odom_enu);\n'}
[17.626954] (inertial_sense_ros2) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.630206] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KINL2_states_callback\x1b[m\x1b[K(eDataIDs, const inl2_states_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.630967] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1311:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.631373] (inertial_sense_ros2) StderrLine: {'line': b' 1311 |         if (rs_.inl2_states.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.getNumSubscribers() > 0)\n'}
[17.631871] (inertial_sense_ros2) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.632388] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.632780] (inertial_sense_ros2) StderrLine: {'line': b' 1312 |             rs_.inl2_states.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_inl2_states);\n'}
[17.633265] (inertial_sense_ros2) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.636764] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfirmware_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[17.637302] (inertial_sense_ros2) StderrLine: {'line': b"  577 |     else if (diff_firmware[2] != 0) \x1b[01;31m\x1b[Kfirmware_fault\x1b[m\x1b[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important\n"}
[17.637701] (inertial_sense_ros2) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.638127] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLevel\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Logger::Level\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.638435] (inertial_sense_ros2) StderrLine: {'line': b'  579 |     rclcpp::Logger::Level::\x1b[01;31m\x1b[KLevel\x1b[m\x1b[K final_fault = std::max(firmware_fault, protocol_fault);\n'}
[17.638875] (inertial_sense_ros2) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[17.659961] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_pos_callback\x1b[m\x1b[K(eDataIDs, const gps_pos_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.660961] (-) TimerEvent: {}
[17.661261] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.661986] (inertial_sense_ros2) StderrLine: {'line': b' 1455 |             rs_.gps1_navsatfix.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_NavSatFix);\n'}
[17.662371] (inertial_sense_ros2) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.662727] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KpublishGPS1\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.663991] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1499:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.664749] (inertial_sense_ros2) StderrLine: {'line': b' 1499 |         if (rs_.gps1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->get_subscription_count() > 0)\n'}
[17.665080] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.665908] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.666368] (inertial_sense_ros2) StderrLine: {'line': b' 1500 |             rs_.gps1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_gps1);\n'}
[17.667011] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.667400] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KpublishGPS2\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.668078] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1511:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.668958] (inertial_sense_ros2) StderrLine: {'line': b' 1511 |         if (rs_.gps2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->get_subscription_count() > 0)\n'}
[17.669332] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.669731] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.670126] (inertial_sense_ros2) StderrLine: {'line': b' 1512 |             rs_.gps2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_gps2);\n'}
[17.670722] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.671102] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_info_callback\x1b[m\x1b[K(eDataIDs, const gps_sat_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.671416] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.671765] (inertial_sense_ros2) StderrLine: {'line': b' 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish();    break;\n'}
[17.672052] (inertial_sense_ros2) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.672335] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.672651] (inertial_sense_ros2) StderrLine: {'line': b' 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_gps1_info);    break;\n'}
[17.672933] (inertial_sense_ros2) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.673205] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[Kmag_callback\x1b[m\x1b[K(eDataIDs, const magnetometer_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.673487] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.673808] (inertial_sense_ros2) StderrLine: {'line': b' 1588 |     rs_.magnetometer.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(mag_msg);\n'}
[17.674081] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.674356] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[Kbaro_callback\x1b[m\x1b[K(eDataIDs, const barometer_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.674696] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1604:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.682219] (inertial_sense_ros2) StderrLine: {'line': b' 1604 |     rs_.barometer.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(baro_msg);\n'}
[17.683045] (inertial_sense_ros2) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.683424] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[Kpreint_IMU_callback\x1b[m\x1b[K(eDataIDs, const pimu_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.683842] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.684200] (inertial_sense_ros2) StderrLine: {'line': b' 1623 |         rs_.pimu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_pimu);\n'}
[17.684535] (inertial_sense_ros2) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.684941] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.685293] (inertial_sense_ros2) StderrLine: {'line': b' 1640 |             rs_.imu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_imu);\n'}
[17.685661] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.686020] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KRTK_Misc_callback\x1b[m\x1b[K(eDataIDs, const gps_rtk_misc_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.686360] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1667:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.686737] (inertial_sense_ros2) StderrLine: {'line': b' 1667 |         rs_.rtk_pos.\x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K->publish(rtk_info);\n'}
[17.687082] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[17.687396] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1672:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.687763] (inertial_sense_ros2) StderrLine: {'line': b' 1672 |         rs_.rtk_cmp.\x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K.publish(rtk_info);\n'}
[17.688119] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[17.688423] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KRTK_Rel_callback\x1b[m\x1b[K(eDataIDs, const gps_rtk_rel_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.688791] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1724:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.690420] (inertial_sense_ros2) StderrLine: {'line': b' 1724 |         rs_.rtk_pos.\x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K->publish(rtk_rel);\n'}
[17.692220] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.692718] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1737:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.693101] (inertial_sense_ros2) StderrLine: {'line': b' 1737 |         rs_.rtk_cmp.\x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K.publish(rtk_rel);\n'}
[17.693406] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.693785] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_obs_bundle_timer_callback\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.694173] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1852:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.694488] (inertial_sense_ros2) StderrLine: {'line': b' 1852 |             rs_.gps1_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K->publish(gps1_obs_Vec_);\n'}
[17.694876] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.695168] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1862:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.695448] (inertial_sense_ros2) StderrLine: {'line': b' 1862 |             rs_.gps2_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K.publish(gps2_obs_Vec_);\n'}
[17.695798] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.696106] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1872:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.696383] (inertial_sense_ros2) StderrLine: {'line': b' 1872 |             rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K.publish(base_obs_Vec_);\n'}
[17.696710] (inertial_sense_ros2) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.697033] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_eph_callback\x1b[m\x1b[K(eDataIDs, const eph_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.697334] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1923:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.697731] (inertial_sense_ros2) StderrLine: {'line': b' 1923 |     case DID_GPS1_RAW:      rs_.gps1_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K->publish(eph);        break;\n'}
[17.699827] (inertial_sense_ros2) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.700292] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1924:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.700720] (inertial_sense_ros2) StderrLine: {'line': b' 1924 |     case DID_GPS2_RAW:      rs_.gps2_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K->publish(eph);        break;\n'}
[17.701081] (inertial_sense_ros2) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.701454] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1925:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.701908] (inertial_sense_ros2) StderrLine: {'line': b' 1925 |     case DID_GPS_BASE_RAW:  rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K->publish(eph);    break;\n'}
[17.702237] (inertial_sense_ros2) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.702893] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_geph_callback\x1b[m\x1b[K(eDataIDs, const geph_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.703293] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1956:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.703703] (inertial_sense_ros2) StderrLine: {'line': b' 1956 |     case DID_GPS1_RAW:      rs_.gps1_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K->publish(geph);       break;\n'}
[17.704064] (inertial_sense_ros2) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.704528] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1957:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.704995] (inertial_sense_ros2) StderrLine: {'line': b' 1957 |     case DID_GPS2_RAW:      rs_.gps2_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K->publish(geph);       break;\n'}
[17.705337] (inertial_sense_ros2) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.705699] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1958:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.706157] (inertial_sense_ros2) StderrLine: {'line': b' 1958 |     case DID_GPS_BASE_RAW:  rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K->publish(geph);   break;\n'}
[17.706546] (inertial_sense_ros2) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.706966] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfinal_fault\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[17.707290] (inertial_sense_ros2) StderrLine: {'line': b"  599 |     return \x1b[01;31m\x1b[Kfinal_fault\x1b[m\x1b[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.\n"}
[17.707655] (inertial_sense_ros2) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[17.708011] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[Kdiagnostics_callback\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.708334] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:2058:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.708710] (inertial_sense_ros2) StderrLine: {'line': b' 2058 |     rs_.diagnostics.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(diag_array);\n'}
[17.709099] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.761228] (-) TimerEvent: {}
[17.861209] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KINS1_callback\x1b[m\x1b[K(eDataIDs, const ins_1_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.862043] (-) TimerEvent: {}
[17.862349] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:954:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.862793] (inertial_sense_ros2) StderrLine: {'line': b'  954 |         if (rs_.did_ins1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.getNumSubscribers() > 0)\n'}
[17.863121] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.863422] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.863803] (inertial_sense_ros2) StderrLine: {'line': b'  955 |             rs_.did_ins1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_did_ins1);\n'}
[17.868279] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.869553] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KINS2_callback\x1b[m\x1b[K(eDataIDs, const ins_2_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.870083] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:981:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.870833] (inertial_sense_ros2) StderrLine: {'line': b'  981 |         if (rs_.did_ins2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.getNumSubscribers() > 0)\n'}
[17.871331] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.871916] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.872330] (inertial_sense_ros2) StderrLine: {'line': b'  982 |             rs_.did_ins2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_did_ins2);\n'}
[17.872716] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.873049] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KINS4_callback\x1b[m\x1b[K(eDataIDs, const ins_4_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.873358] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1008:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.873732] (inertial_sense_ros2) StderrLine: {'line': b' 1008 |         if (rs_.did_ins4.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.getNumSubscribers() > 0)\n'}
[17.874057] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.874408] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.874817] (inertial_sense_ros2) StderrLine: {'line': b' 1009 |             rs_.did_ins4.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_did_ins4);\n'}
[17.875154] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.875456] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.875898] (inertial_sense_ros2) StderrLine: {'line': b' 1078 |             rs_.odom_ins_ecef.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_odom_ecef);\n'}
[17.876232] (inertial_sense_ros2) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.880620] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.881165] (inertial_sense_ros2) StderrLine: {'line': b' 1165 |                 rs_.odom_ins_ned.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_odom_ned);\n'}
[17.881492] (inertial_sense_ros2) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.884831] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.885729] (inertial_sense_ros2) StderrLine: {'line': b' 1259 |                 rs_.odom_ins_enu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_odom_enu);\n'}
[17.886257] (inertial_sense_ros2) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.886651] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KINL2_states_callback\x1b[m\x1b[K(eDataIDs, const inl2_states_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.887029] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1311:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.887355] (inertial_sense_ros2) StderrLine: {'line': b' 1311 |         if (rs_.inl2_states.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.getNumSubscribers() > 0)\n'}
[17.887735] (inertial_sense_ros2) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.888078] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.888390] (inertial_sense_ros2) StderrLine: {'line': b' 1312 |             rs_.inl2_states.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_inl2_states);\n'}
[17.888729] (inertial_sense_ros2) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.899329] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_pos_callback\x1b[m\x1b[K(eDataIDs, const gps_pos_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.900036] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.900408] (inertial_sense_ros2) StderrLine: {'line': b' 1455 |             rs_.gps1_navsatfix.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_NavSatFix);\n'}
[17.900819] (inertial_sense_ros2) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.908759] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KpublishGPS1\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.909353] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1499:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.909794] (inertial_sense_ros2) StderrLine: {'line': b' 1499 |         if (rs_.gps1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->get_subscription_count() > 0)\n'}
[17.910147] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.910663] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.911051] (inertial_sense_ros2) StderrLine: {'line': b' 1500 |             rs_.gps1.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_gps1);\n'}
[17.911381] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.912269] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KpublishGPS2\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.912827] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1511:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.913260] (inertial_sense_ros2) StderrLine: {'line': b' 1511 |         if (rs_.gps2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->get_subscription_count() > 0)\n'}
[17.913650] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.913994] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGps\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.914324] (inertial_sense_ros2) StderrLine: {'line': b' 1512 |             rs_.gps2.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_gps2);\n'}
[17.914718] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.932244] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_info_callback\x1b[m\x1b[K(eDataIDs, const gps_sat_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.932946] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.933513] (inertial_sense_ros2) StderrLine: {'line': b' 1569 |     case DID_GPS1_SAT:  rs_.gps1_info.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish();    break;\n'}
[17.933953] (inertial_sense_ros2) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.934266] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.934611] (inertial_sense_ros2) StderrLine: {'line': b' 1570 |     case DID_GPS2_SAT:  rs_.gps2_info.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(msg_gps1_info);    break;\n'}
[17.934950] (inertial_sense_ros2) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.935256] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[Kmag_callback\x1b[m\x1b[K(eDataIDs, const magnetometer_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.935553] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.936117] (inertial_sense_ros2) StderrLine: {'line': b' 1588 |     rs_.magnetometer.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(mag_msg);\n'}
[17.936428] (inertial_sense_ros2) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.936791] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[Kbaro_callback\x1b[m\x1b[K(eDataIDs, const barometer_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.937106] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1604:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.937410] (inertial_sense_ros2) StderrLine: {'line': b' 1604 |     rs_.barometer.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(baro_msg);\n'}
[17.937759] (inertial_sense_ros2) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.938073] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[Kpreint_IMU_callback\x1b[m\x1b[K(eDataIDs, const pimu_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.938351] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.938713] (inertial_sense_ros2) StderrLine: {'line': b' 1623 |         rs_.pimu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_pimu);\n'}
[17.939089] (inertial_sense_ros2) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.939416] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.939815] (inertial_sense_ros2) StderrLine: {'line': b' 1640 |             rs_.imu.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K.publish(msg_imu);\n'}
[17.940142] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[17.940441] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KRTK_Misc_callback\x1b[m\x1b[K(eDataIDs, const gps_rtk_misc_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.940803] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1667:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.941099] (inertial_sense_ros2) StderrLine: {'line': b' 1667 |         rs_.rtk_pos.\x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K->publish(rtk_info);\n'}
[17.941393] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[17.941729] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1672:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubInfo\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.942043] (inertial_sense_ros2) StderrLine: {'line': b' 1672 |         rs_.rtk_cmp.\x1b[01;31m\x1b[KpubInfo\x1b[m\x1b[K.publish(rtk_info);\n'}
[17.942330] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[17.942672] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KRTK_Rel_callback\x1b[m\x1b[K(eDataIDs, const gps_rtk_rel_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.943000] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1724:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.943290] (inertial_sense_ros2) StderrLine: {'line': b' 1724 |         rs_.rtk_pos.\x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K->publish(rtk_rel);\n'}
[17.943614] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.943989] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1737:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRtk\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubRel\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.944532] (inertial_sense_ros2) StderrLine: {'line': b' 1737 |         rs_.rtk_cmp.\x1b[01;31m\x1b[KpubRel\x1b[m\x1b[K.publish(rtk_rel);\n'}
[17.944965] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.951424] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_obs_bundle_timer_callback\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.952078] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1852:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.952430] (inertial_sense_ros2) StderrLine: {'line': b' 1852 |             rs_.gps1_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K->publish(gps1_obs_Vec_);\n'}
[17.952813] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.953138] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1862:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.953450] (inertial_sense_ros2) StderrLine: {'line': b' 1862 |             rs_.gps2_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K.publish(gps2_obs_Vec_);\n'}
[17.953815] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.954109] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1872:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubObs\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.954396] (inertial_sense_ros2) StderrLine: {'line': b' 1872 |             rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubObs\x1b[m\x1b[K.publish(base_obs_Vec_);\n'}
[17.954742] (inertial_sense_ros2) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.955054] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_eph_callback\x1b[m\x1b[K(eDataIDs, const eph_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.955348] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1923:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.955722] (inertial_sense_ros2) StderrLine: {'line': b' 1923 |     case DID_GPS1_RAW:      rs_.gps1_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K->publish(eph);        break;\n'}
[17.956045] (inertial_sense_ros2) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.956337] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1924:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.956693] (inertial_sense_ros2) StderrLine: {'line': b' 1924 |     case DID_GPS2_RAW:      rs_.gps2_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K->publish(eph);        break;\n'}
[17.957037] (inertial_sense_ros2) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.957322] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1925:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubEph\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.957643] (inertial_sense_ros2) StderrLine: {'line': b' 1925 |     case DID_GPS_BASE_RAW:  rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubEph\x1b[m\x1b[K->publish(eph);    break;\n'}
[17.957979] (inertial_sense_ros2) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.958229] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[KGPS_geph_callback\x1b[m\x1b[K(eDataIDs, const geph_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.958502] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1956:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.958872] (inertial_sense_ros2) StderrLine: {'line': b' 1956 |     case DID_GPS1_RAW:      rs_.gps1_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K->publish(geph);       break;\n'}
[17.959182] (inertial_sense_ros2) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.959485] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1957:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.960234] (inertial_sense_ros2) StderrLine: {'line': b' 1957 |     case DID_GPS2_RAW:      rs_.gps2_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K->publish(geph);       break;\n'}
[17.960673] (inertial_sense_ros2) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.961127] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1958:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelperGpsRaw\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[KpubGEp\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.961497] (inertial_sense_ros2) StderrLine: {'line': b' 1958 |     case DID_GPS_BASE_RAW:  rs_.gpsbase_raw.\x1b[01;31m\x1b[KpubGEp\x1b[m\x1b[K->publish(geph);   break;\n'}
[17.961978] (inertial_sense_ros2) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[17.962248] (-) TimerEvent: {}
[17.962661] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid InertialSenseROS::\x1b[01;32m\x1b[Kdiagnostics_callback\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[17.963044] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:2058:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass TopicHelper\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kpub\x1b[m\x1b[K\xe2\x80\x99\n'}
[17.963321] (inertial_sense_ros2) StderrLine: {'line': b' 2058 |     rs_.diagnostics.\x1b[01;31m\x1b[Kpub\x1b[m\x1b[K->publish(diag_array);\n'}
[17.963630] (inertial_sense_ros2) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[18.066035] (-) TimerEvent: {}
[18.169206] (-) TimerEvent: {}
[18.272543] (-) TimerEvent: {}
[18.378277] (-) TimerEvent: {}
[18.492396] (-) TimerEvent: {}
[18.602044] (-) TimerEvent: {}
[18.708716] (-) TimerEvent: {}
[18.815089] (-) TimerEvent: {}
[18.924242] (-) TimerEvent: {}
[19.027794] (-) TimerEvent: {}
[19.128808] (-) TimerEvent: {}
[19.246827] (-) TimerEvent: {}
[19.354434] (-) TimerEvent: {}
[19.456002] (-) TimerEvent: {}
[19.557063] (-) TimerEvent: {}
[19.658097] (-) TimerEvent: {}
[19.759341] (-) TimerEvent: {}
[19.860930] (-) TimerEvent: {}
[19.963296] (-) TimerEvent: {}
[20.075683] (-) TimerEvent: {}
[20.163899] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/new_target.dir/build.make:104: CMakeFiles/new_target.dir/include/TopicHelper.cpp.o] Error 1\n'}
[20.164681] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** Waiting for unfinished jobs....\n'}
[20.182046] (-) TimerEvent: {}
[20.298494] (-) TimerEvent: {}
[20.416395] (-) TimerEvent: {}
[20.517282] (-) TimerEvent: {}
[20.618456] (-) TimerEvent: {}
[20.719435] (-) TimerEvent: {}
[20.820362] (-) TimerEvent: {}
[20.921501] (-) TimerEvent: {}
[21.022439] (-) TimerEvent: {}
[21.123368] (-) TimerEvent: {}
[21.224261] (-) TimerEvent: {}
[21.325246] (-) TimerEvent: {}
[21.426330] (-) TimerEvent: {}
[21.527434] (-) TimerEvent: {}
[21.628735] (-) TimerEvent: {}
[21.729734] (-) TimerEvent: {}
[21.830697] (-) TimerEvent: {}
[21.931805] (-) TimerEvent: {}
[21.966388] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42\x1b[m\x1b[K,\n'}
[21.967478] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[21.968420] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[21.968808] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[21.969090] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[21.969337] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22\x1b[m\x1b[K,\n'}
[21.969723] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38\x1b[m\x1b[K,\n'}
[21.970125] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[21.970466] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[21.970840] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172\x1b[m\x1b[K,\n'}
[21.971096] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25\x1b[m\x1b[K:\n'}
[21.971337] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[21.971788] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.972216] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.972555] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.973110] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.973406] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.973771] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[21.974046] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.974448] (inertial_sense_ros2) StderrLine: {'line': b'   52 |     typename function_traits<decltype( \x1b[01;31m\x1b[K&FunctionT::operator()\x1b[m\x1b[K)>::arguments>::type;\n'}
[21.975451] (inertial_sense_ros2) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[21.976004] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.976428] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.976869] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37\x1b[m\x1b[K,\n'}
[21.977214] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K:\n'}
[21.977701] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[21.978298] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.980738] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.983426] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.984116] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[21.984494] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.984967] (inertial_sense_ros2) StderrLine: {'line': b'  121 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[21.987117] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[21.988058] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.989132] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[21.990497] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[21.991422] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29\x1b[m\x1b[K:\n'}
[21.992200] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[21.993478] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[21.995406] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[21.995777] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[21.996092] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/13/bits/move.h:37\x1b[m\x1b[K,\n'}
[21.996646] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/bits/exception_ptr.h:41\x1b[m\x1b[K,\n'}
[21.996972] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/exception:164\x1b[m\x1b[K,\n'}
[21.997244] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/ios:41\x1b[m\x1b[K,\n'}
[21.998065] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/ostream:40\x1b[m\x1b[K,\n'}
[21.999803] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/iostream:41\x1b[m\x1b[K,\n'}
[22.000634] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22\x1b[m\x1b[K:\n'}
[22.002195] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.003202] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.003811] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.004165] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.004451] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.004957] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.006227] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.007675] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.008198] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.009237] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.010659] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.011776] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.013177] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.014283] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.016259] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.017048] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.018474] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.020648] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.022240] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.022691] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.023346] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.023885] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.024650] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.025132] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.025862] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.026244] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.026970] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.027427] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.028062] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.028451] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.028856] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.029481] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.029852] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.031031] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.032207] (-) TimerEvent: {}
[22.032982] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.033918] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.034430] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.035168] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.036157] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.036749] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.037168] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.038329] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.039251] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.040287] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.040750] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.041471] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.041860] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.042272] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.042754] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.043051] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.043308] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.043925] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:36:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>), void> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = <missing>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.044340] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.044918] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.046114] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.046537] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.047288] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.047826] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.048472] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.050414] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.051307] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.052917] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.053678] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.057066] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.058058] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.060073] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.061849] (inertial_sense_ros2) StderrLine: {'line': b'  128 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.062792] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.064022] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.064460] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.065030] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.065407] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.066749] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.067490] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.068127] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.069413] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.071247] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.072126] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.073163] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.073891] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.075820] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.076133] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.076391] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.076656] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.077035] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.077371] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.077773] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.078134] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.078458] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.079001] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.079719] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.082722] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.083204] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.083884] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.084270] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.084641] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.085304] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.085689] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.086438] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.086869] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.087415] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.087900] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.088816] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.089173] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.089489] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.090202] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.090640] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.091222] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.091518] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.091853] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.092456] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.092815] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.093090] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.093697] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.094029] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.094316] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.094932] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.095281] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.095846] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.096283] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.096694] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.097350] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.097860] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.098486] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.099347] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.099795] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.100101] (inertial_sense_ros2) StderrLine: {'line': b'  135 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.100715] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.101113] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.101426] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.102173] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.104389] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.105026] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.105381] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.105977] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.106432] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.106869] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.107321] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.107721] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.108140] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.108522] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.108932] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.109242] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.109546] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.109933] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.110225] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.110522] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.111529] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.111958] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.112304] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.112634] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.114193] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.115700] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.116606] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.117414] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.118863] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.120151] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.121100] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.123254] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.125064] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.125790] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.127028] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.127659] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.128088] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.128415] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.129107] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.130159] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.133429] (-) TimerEvent: {}
[22.134273] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.134827] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.135403] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.136036] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.136427] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.136914] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.137348] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.138149] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.138546] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.138960] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.139341] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.141083] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.141655] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.142687] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.143709] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.145065] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.145833] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.146357] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.146885] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.147346] (inertial_sense_ros2) StderrLine: {'line': b'  142 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.148182] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.149798] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.151830] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.152475] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.153059] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.153463] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.153862] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.154206] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.154608] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.154983] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.155814] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.156239] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.156794] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.157264] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.158191] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.158786] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.159175] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.159529] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.159930] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.160296] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.160937] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.161292] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.161798] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.162218] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.162683] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.163184] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.163630] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.164161] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.165803] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.166280] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.167531] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.168464] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.169155] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.170252] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.170841] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.171384] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.172053] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.173126] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.174635] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.177416] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.178017] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.178373] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.178744] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.179150] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.179475] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.179886] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.180239] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.181535] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.182866] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.185050] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.186046] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.187459] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.187960] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.188269] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.188610] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.189045] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.189314] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.189604] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.189953] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99)\n'}
[22.190973] (inertial_sense_ros2) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[22.191363] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.191780] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.192194] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[22.193008] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.194295] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.195801] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > \x1b[35m\x1b[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.196409] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1490:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.197716] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.198081] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.198373] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.198873] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.199192] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.199476] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1407:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.200270] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[22.202536] (inertial_sense_ros2) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.205050] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.205933] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.206339] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.206860] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.207300] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.207711] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(const std::variant<_Types>&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.208120] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[22.208428] (inertial_sense_ros2) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.208776] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.209080] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[22.209321] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.209595] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(std::variant<_Types>&&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.210035] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[22.210313] (inertial_sense_ros2) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.211375] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.211945] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[22.213695] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[22.214062] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.214325] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.214619] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.214910] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.215235] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.215705] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.216177] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.216489] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.216895] (inertial_sense_ros2) StderrLine: {'line': b'   52 |     typename function_traits<decltype( \x1b[01;31m\x1b[K&FunctionT::operator()\x1b[m\x1b[K)>::arguments>::type;\n'}
[22.217244] (inertial_sense_ros2) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.217670] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.218093] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.218406] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.218748] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.219101] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.219433] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.219879] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.220148] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.220433] (inertial_sense_ros2) StderrLine: {'line': b'  121 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.220740] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.220991] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.221360] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.221699] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.221968] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.222291] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.222624] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.222906] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.223144] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.223386] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.223778] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.223993] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.224158] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.224339] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.224506] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.224708] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.224882] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.225081] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.225241] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.225424] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.225881] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.226207] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.226638] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.226932] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.227191] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.227372] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.227708] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.227935] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.228115] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.228282] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.228446] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.228728] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.228909] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.229067] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.229256] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.229474] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.229684] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.229854] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.230017] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.230230] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.230386] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.230537] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.230790] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.231011] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.231173] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.231326] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.231481] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.231898] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.232083] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.232258] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.232454] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.232801] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.233007] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.233170] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.233346] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.233641] (-) TimerEvent: {}
[22.233955] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.234202] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.234389] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.234619] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.234897] (inertial_sense_ros2) StderrLine: {'line': b'  128 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.235093] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.235378] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.235674] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.235900] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.236100] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.236371] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.236708] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.237037] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.237314] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.237719] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.238093] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.238268] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.238447] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.238717] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.238941] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.239115] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.239285] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.239452] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.239687] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.239898] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.240083] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.240287] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.240466] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.240768] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.240975] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.241152] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.241422] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.241680] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.241854] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.242035] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.242233] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.242548] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.242894] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.243155] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.243409] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.243857] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.244121] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.244358] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.244666] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.244950] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.245205] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.245438] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.245729] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.246063] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.246350] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.246677] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.247011] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.247348] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.247694] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.248058] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.248432] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.248953] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.249316] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.249940] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.250471] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.250897] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.251192] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.251407] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.251788] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.252024] (inertial_sense_ros2) StderrLine: {'line': b'  135 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.252209] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.252473] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.252920] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.253122] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.253305] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.253640] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.253939] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.254141] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.254333] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.254523] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.255036] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.255670] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.256700] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.257556] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.258066] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.258877] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.259720] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.260245] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.260745] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.261552] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.262314] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.262736] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.263341] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.263796] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.264471] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.264938] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.265259] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.266122] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.266716] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.267100] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.267436] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.268180] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.268515] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.269056] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.269435] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.270299] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.270831] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.271145] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.271773] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.272215] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.273077] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.273419] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.274045] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.274447] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.274811] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.275364] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.275784] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.276491] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.276945] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.277482] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.278026] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.278370] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.278999] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.279318] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.279964] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.280355] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.280975] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.281364] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.281783] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.282502] (inertial_sense_ros2) StderrLine: {'line': b'  142 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.282894] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.283422] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.283857] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.284180] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.284799] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.285180] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.285912] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.286296] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.286856] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.287272] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.287704] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.288441] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.288853] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.289472] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.289885] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.290443] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.290889] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.291309] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.291822] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.292213] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.292838] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.293214] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.293824] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.294191] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.294517] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.295214] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.295534] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.296217] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.296650] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.297277] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.297765] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.298155] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.299015] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.299657] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.300101] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.300540] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.301173] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.301485] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.302238] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.302695] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.303269] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.303727] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.304084] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.305102] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.305887] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.306298] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.306974] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.307505] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.308201] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.308606] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.309072] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.309593] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.309980] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.310631] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.311036] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.311663] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.312065] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.312397] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.313072] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99)\n'}
[22.313480] (inertial_sense_ros2) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[22.314170] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.314666] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.315736] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[22.316476] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.317075] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.317767] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > \x1b[35m\x1b[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.318211] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1490:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.319068] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.319394] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.319869] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.320302] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.320699] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.321195] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1407:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.321512] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[22.321872] (inertial_sense_ros2) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.322352] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.322756] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.323102] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.323720] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.324008] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.324269] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(const std::variant<_Types>&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.324946] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[22.325275] (inertial_sense_ros2) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.325544] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.326183] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[22.326536] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.327116] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(std::variant<_Types>&&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.327472] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[22.327832] (inertial_sense_ros2) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.328342] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.328782] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[22.329071] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[22.329609] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42\x1b[m\x1b[K,\n'}
[22.329941] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[22.330216] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[22.330778] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[22.331074] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[22.331348] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22\x1b[m\x1b[K,\n'}
[22.331919] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38\x1b[m\x1b[K,\n'}
[22.332226] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[22.332514] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[22.333143] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172\x1b[m\x1b[K,\n'}
[22.333481] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25\x1b[m\x1b[K:\n'}
[22.333985] (-) TimerEvent: {}
[22.334511] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.334956] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.335771] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.336187] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.336997] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.337542] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.338146] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.338460] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.339096] (inertial_sense_ros2) StderrLine: {'line': b'   52 |     typename function_traits<decltype( \x1b[01;31m\x1b[K&FunctionT::operator()\x1b[m\x1b[K)>::arguments>::type;\n'}
[22.339469] (inertial_sense_ros2) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.340144] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.340518] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.340892] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37\x1b[m\x1b[K,\n'}
[22.341549] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K:\n'}
[22.341980] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.342435] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.343108] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.343456] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.344090] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.344405] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.344976] (inertial_sense_ros2) StderrLine: {'line': b'  121 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.345387] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.345715] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.346361] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.346750] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.347089] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29\x1b[m\x1b[K:\n'}
[22.347790] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.348217] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.348898] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.349222] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.349506] (inertial_sense_ros2) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/13/bits/move.h:37\x1b[m\x1b[K,\n'}
[22.350094] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/bits/exception_ptr.h:41\x1b[m\x1b[K,\n'}
[22.350381] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/exception:164\x1b[m\x1b[K,\n'}
[22.350714] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/ios:41\x1b[m\x1b[K,\n'}
[22.351259] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/ostream:40\x1b[m\x1b[K,\n'}
[22.351606] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/13/iostream:41\x1b[m\x1b[K,\n'}
[22.352071] (inertial_sense_ros2) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22\x1b[m\x1b[K:\n'}
[22.352482] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.352834] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.353179] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.353880] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.354235] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.354883] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.355264] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.355641] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.356330] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.356699] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.357416] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.357872] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.358478] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.358894] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.359441] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.360218] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.360948] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.361321] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.361895] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.362488] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.363180] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.363551] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.364318] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.364927] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.365216] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.365905] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.366292] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.366870] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.367249] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.367538] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.368115] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.368533] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.368919] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.369412] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.369763] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.370088] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.370642] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.370950] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.371230] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.372026] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.372353] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.372987] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.373293] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.373649] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.374210] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.374492] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.374988] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.375490] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.375848] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.376357] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.376799] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.377111] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:36:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>), void> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = <missing>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.377718] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.378103] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.378399] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.379114] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.379432] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.379873] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.380290] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.380615] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.381008] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.381499] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.381855] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.382414] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.382884] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.383209] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.383776] (inertial_sense_ros2) StderrLine: {'line': b'  128 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.384078] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.384349] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.384957] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.385244] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.385494] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.386136] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.386475] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.387082] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.387422] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.388010] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.388726] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.389094] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.389697] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.390099] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.390684] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.391078] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.391362] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.391934] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.392225] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.392529] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.393125] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.393433] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.393939] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.394460] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.394890] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.395439] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.395800] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.396134] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.396746] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.397063] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.397339] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.398033] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.398367] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.399046] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.399424] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.400031] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.400340] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.400729] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.401363] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.401752] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.402060] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.402627] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.402960] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.403408] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.403901] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.404204] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.404766] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.405295] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.405732] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.406200] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.406515] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.407170] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.407536] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.407885] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.408432] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.408859] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.409289] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.409811] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.410113] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.410647] (inertial_sense_ros2) StderrLine: {'line': b'  135 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.410959] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.411225] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.411749] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.412115] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.412388] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.412988] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.413356] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.413677] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.414308] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.414674] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.415021] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.415738] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.416141] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.416821] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.417147] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.417662] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.418118] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.418421] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.418998] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.419376] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.419724] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.420286] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.420621] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.420956] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.421488] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.421870] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.422327] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.422743] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.423046] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.423414] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.423866] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.424205] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.424628] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.425058] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.425343] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.425937] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.426293] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.426626] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.427314] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.427717] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.428013] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.428508] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.428884] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.429222] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.429778] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.430073] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.430344] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.431043] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.431374] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.431878] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.432229] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.432649] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.433169] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.433462] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.433847] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.434438] (-) TimerEvent: {}
[22.434874] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.435446] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.435899] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.436221] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.436933] (inertial_sense_ros2) StderrLine: {'line': b'  142 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.437279] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.437544] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.438232] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.438556] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.439202] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.439636] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.439999] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.440714] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.441154] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.441797] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.442133] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.442426] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.443077] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.443435] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.443960] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.444307] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.444645] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.445073] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.445466] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.445865] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.446438] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.446848] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.447192] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.447774] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.448151] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.448434] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.449041] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.449396] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.449858] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.450352] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.450760] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.451412] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.451857] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.452289] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.452855] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.453236] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.453941] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.454265] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.454627] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.455255] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.455551] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.456103] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.456510] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.456908] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.457448] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.458156] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.459110] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.459546] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.459981] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.460451] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.461003] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.461526] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.461960] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.462288] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.462675] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.463070] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.463380] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.463750] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.464080] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99)\n'}
[22.464427] (inertial_sense_ros2) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[22.464970] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.465277] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.465787] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[22.466212] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.466527] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.466930] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > \x1b[35m\x1b[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.467363] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1490:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.468040] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.468406] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.468809] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.469260] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.469724] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.470091] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1407:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.470382] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[22.470715] (inertial_sense_ros2) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.471014] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.471364] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.471835] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.472190] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.472509] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:\x1b[m\x1b[K   required from here\n'}
[22.472894] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(const std::variant<_Types>&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.473225] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[22.473527] (inertial_sense_ros2) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.473862] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.474224] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[22.474527] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.474906] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(std::variant<_Types>&&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.475236] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[22.475545] (inertial_sense_ros2) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.475954] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.476266] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[22.476605] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[22.476954] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.477316] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.477728] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.478075] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.478394] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.478805] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.479167] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.479463] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.479854] (inertial_sense_ros2) StderrLine: {'line': b'   52 |     typename function_traits<decltype( \x1b[01;31m\x1b[K&FunctionT::operator()\x1b[m\x1b[K)>::arguments>::type;\n'}
[22.480134] (inertial_sense_ros2) StderrLine: {'line': b'      |                                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.480410] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.480772] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Koperator()\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.481142] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.481434] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.482136] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.482625] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.483000] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.483317] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.483643] (inertial_sense_ros2) StderrLine: {'line': b'  121 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.483973] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.484267] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.484682] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.485025] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.485311] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.485748] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.486054] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.486365] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.486853] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.487251] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.487647] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.488040] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.488411] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.488981] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.489315] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.489637] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.489975] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.490298] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.490728] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.491155] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.491524] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.491902] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.492248] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.492506] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.492857] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.493139] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.493424] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.493756] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.494091] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.494390] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.494737] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.495063] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.495344] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.495725] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.496090] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.496478] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.496828] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.497116] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.497384] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.497735] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.498017] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.498260] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.498495] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.498841] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.499117] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.499415] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.499757] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.500075] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.500376] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.500825] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.501152] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.501502] (inertial_sense_ros2) StderrLine: {'line': b'  123 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrCallback>(callback)\x1b[m\x1b[K;\n'}
[22.501839] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.502141] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.502495] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.503006] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.503298] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.503620] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.504066] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.504409] (inertial_sense_ros2) StderrLine: {'line': b'  128 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.504743] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.505025] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.505352] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.505689] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.505993] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.506376] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.506733] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.507056] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.507350] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.507719] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.508078] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.508407] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.508791] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.509120] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.509433] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.509769] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.510054] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.510319] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.510634] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.510962] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.511285] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.511683] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.511996] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.512255] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.512537] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.513032] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.513311] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.513624] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.513952] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.514214] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.514523] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.514953] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.515235] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.515501] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.515883] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.516226] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.516520] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.516841] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.517117] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.517472] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.517853] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.518143] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.518434] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.518936] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.519275] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.519606] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.520092] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.520441] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.520990] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.521324] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.521701] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.522068] (inertial_sense_ros2) StderrLine: {'line': b'  130 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)\x1b[m\x1b[K;\n'}
[22.522354] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.522674] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.522975] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.523300] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.523599] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.523881] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.524153] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.524431] (inertial_sense_ros2) StderrLine: {'line': b'  135 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.524756] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.525028] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.525346] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.525791] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.526191] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.526521] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.526897] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.527191] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.527476] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.528008] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.528374] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.528750] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.529079] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.529389] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.529720] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.530013] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.530310] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.530611] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.530906] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.531218] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.531593] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.531951] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.532254] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.532520] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.532898] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.533176] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.533450] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.533766] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.534067] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.534422] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.534787] (-) TimerEvent: {}
[22.535189] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.535698] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.536248] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.536684] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.537037] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.537497] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.537902] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.538266] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.538645] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.539032] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.539335] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.539687] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.539936] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.540280] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.540610] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.540940] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.541232] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.541520] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.541902] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.542266] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.542610] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.542971] (inertial_sense_ros2) StderrLine: {'line': b'  137 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)\x1b[m\x1b[K;\n'}
[22.543239] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.543514] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.543893] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.544186] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.544453] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.544794] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.545122] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.545453] (inertial_sense_ros2) StderrLine: {'line': b'  142 |       >::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K)\n'}
[22.545816] (inertial_sense_ros2) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[22.546103] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.546438] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.546828] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.547154] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.547523] (inertial_sense_ros2) StderrLine: {'line': b' 1519 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.547929] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.548285] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.548627] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type \x1b[35m\x1b[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.549004] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1519:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.549385] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.549727] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.550028] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.550333] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.550706] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.550988] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/type_traits:2610:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.551262] (inertial_sense_ros2) StderrLine: {'line': b' 2610 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[22.551726] (inertial_sense_ros2) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.552141] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.552481] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.552965] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.553450] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.553986] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.554311] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.554760] (inertial_sense_ros2) StderrLine: {'line': b' 1530 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.555142] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.555438] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1530:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.555810] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::initializer_list<_Value>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.556177] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;36m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.556626] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.556991] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.557317] (inertial_sense_ros2) StderrLine: {'line': b' 1540 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&... __args)\n'}
[22.557635] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.557965] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1540:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.558264] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.558671] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.559011] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.559331] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.559696] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.560126] (inertial_sense_ros2) StderrLine: {'line': b' 1580 |         \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(initializer_list<_Up> __il, _Args&&... __args)\n'}
[22.560469] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.560878] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1580:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.561226] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(std::initializer_list<_Up>, _Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.561724] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.562122] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.562416] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.562838] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.563194] (inertial_sense_ros2) StderrLine: {'line': b' 1613 |         enable_if_t<!(_Np < sizeof...(_Types))> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.563503] (inertial_sense_ros2) StderrLine: {'line': b'      |                                                 \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.563896] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1613:49:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.564228] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktype/value mismatch at argument 1 in template parameter list for \xe2\x80\x98\x1b[01m\x1b[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.564617] (inertial_sense_ros2) StderrLine: {'line': b'  144 |       \x1b[01;31m\x1b[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)\x1b[m\x1b[K;\n'}
[22.564957] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[22.565272] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  expected a constant of type \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99, got \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99}\n'}
[22.565676] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::\x1b[01;32m\x1b[Kemplace\x1b[m\x1b[K(_Args&& ...) \x1b[35m\x1b[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99 (deleted)\n'}
[22.566029] (inertial_sense_ros2) StderrLine: {'line': b' 1616 |         enable_if_t<!__exactly_once<_Tp>> \x1b[01;36m\x1b[Kemplace\x1b[m\x1b[K(_Args&&...) = delete;\n'}
[22.566314] (inertial_sense_ros2) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[22.566642] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1616:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.566999] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99)\n'}
[22.567337] (inertial_sense_ros2) StderrLine: {'line': b'  148 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[22.567682] (inertial_sense_ros2) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.568643] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.569223] (inertial_sense_ros2) StderrLine: {'line': b' 1494 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[22.569909] (inertial_sense_ros2) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.570243] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[22.570531] (inertial_sense_ros2) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > \x1b[35m\x1b[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.571163] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1490:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.571848] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.572465] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.572873] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.573323] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.573830] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.574142] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1407:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.574682] (inertial_sense_ros2) StderrLine: {'line': b' 1407 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[22.575218] (inertial_sense_ros2) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.575521] (inertial_sense_ros2) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT&&) \x1b[35m\x1b[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[22.576145] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.576942] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.577554] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::\x1b[01;32m\x1b[Kcreate_service\x1b[m\x1b[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) \x1b[35m\x1b[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.577963] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:\x1b[m\x1b[K   required from here\n'}
[22.578313] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(const std::variant<_Types>&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.578921] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[22.579246] (inertial_sense_ros2) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.579547] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.580386] (inertial_sense_ros2) StderrLine: {'line': b' 1430 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[22.580787] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[22.581388] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(std::variant<_Types>&&) \x1b[35m\x1b[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.581819] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[22.582102] (inertial_sense_ros2) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[22.582755] (inertial_sense_ros2) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[22.583108] (inertial_sense_ros2) StderrLine: {'line': b' 1431 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[22.583387] (inertial_sense_ros2) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[22.635142] (-) TimerEvent: {}
[22.735981] (-) TimerEvent: {}
[22.836774] (-) TimerEvent: {}
[22.937715] (-) TimerEvent: {}
[23.039448] (-) TimerEvent: {}
[23.140631] (-) TimerEvent: {}
[23.241488] (-) TimerEvent: {}
[23.342463] (-) TimerEvent: {}
[23.443425] (-) TimerEvent: {}
[23.545212] (-) TimerEvent: {}
[23.646323] (-) TimerEvent: {}
[23.747336] (-) TimerEvent: {}
[23.848332] (-) TimerEvent: {}
[23.949389] (-) TimerEvent: {}
[24.050218] (-) TimerEvent: {}
[24.150973] (-) TimerEvent: {}
[24.251956] (-) TimerEvent: {}
[24.352805] (-) TimerEvent: {}
[24.453680] (-) TimerEvent: {}
[24.554735] (-) TimerEvent: {}
[24.655837] (-) TimerEvent: {}
[24.756758] (-) TimerEvent: {}
[24.857718] (-) TimerEvent: {}
[24.958732] (-) TimerEvent: {}
[25.060672] (-) TimerEvent: {}
[25.161702] (-) TimerEvent: {}
[25.265150] (-) TimerEvent: {}
[25.375131] (-) TimerEvent: {}
[25.482282] (-) TimerEvent: {}
[25.586856] (-) TimerEvent: {}
[25.692442] (-) TimerEvent: {}
[25.794250] (-) TimerEvent: {}
[25.895496] (-) TimerEvent: {}
[25.996490] (-) TimerEvent: {}
[26.097737] (-) TimerEvent: {}
[26.198687] (-) TimerEvent: {}
[26.299505] (-) TimerEvent: {}
[26.400400] (-) TimerEvent: {}
[26.501451] (-) TimerEvent: {}
[26.602368] (-) TimerEvent: {}
[26.703711] (-) TimerEvent: {}
[26.804678] (-) TimerEvent: {}
[26.905549] (-) TimerEvent: {}
[27.006694] (-) TimerEvent: {}
[27.107634] (-) TimerEvent: {}
[27.208450] (-) TimerEvent: {}
[27.309359] (-) TimerEvent: {}
[27.410311] (-) TimerEvent: {}
[27.511329] (-) TimerEvent: {}
[27.612335] (-) TimerEvent: {}
[27.713235] (-) TimerEvent: {}
[27.814304] (-) TimerEvent: {}
[27.915277] (-) TimerEvent: {}
[28.016130] (-) TimerEvent: {}
[28.117012] (-) TimerEvent: {}
[28.217980] (-) TimerEvent: {}
[28.318779] (-) TimerEvent: {}
[28.419714] (-) TimerEvent: {}
[28.520770] (-) TimerEvent: {}
[28.621637] (-) TimerEvent: {}
[28.722707] (-) TimerEvent: {}
[28.823549] (-) TimerEvent: {}
[28.924410] (-) TimerEvent: {}
[29.025424] (-) TimerEvent: {}
[29.126690] (-) TimerEvent: {}
[29.227681] (-) TimerEvent: {}
[29.328699] (-) TimerEvent: {}
[29.429546] (-) TimerEvent: {}
[29.530643] (-) TimerEvent: {}
[29.632252] (-) TimerEvent: {}
[29.733479] (-) TimerEvent: {}
[29.836011] (-) TimerEvent: {}
[29.937678] (-) TimerEvent: {}
[30.040488] (-) TimerEvent: {}
[30.141450] (-) TimerEvent: {}
[30.242808] (-) TimerEvent: {}
[30.343992] (-) TimerEvent: {}
[30.445129] (-) TimerEvent: {}
[30.546146] (-) TimerEvent: {}
[30.647655] (-) TimerEvent: {}
[30.748653] (-) TimerEvent: {}
[30.849449] (-) TimerEvent: {}
[30.950473] (-) TimerEvent: {}
[31.051422] (-) TimerEvent: {}
[31.152369] (-) TimerEvent: {}
[31.253389] (-) TimerEvent: {}
[31.354389] (-) TimerEvent: {}
[31.455352] (-) TimerEvent: {}
[31.556275] (-) TimerEvent: {}
[31.657252] (-) TimerEvent: {}
[31.758286] (-) TimerEvent: {}
[31.859304] (-) TimerEvent: {}
[31.960352] (-) TimerEvent: {}
[32.061353] (-) TimerEvent: {}
[32.162279] (-) TimerEvent: {}
[32.266456] (-) TimerEvent: {}
[32.367400] (-) TimerEvent: {}
[32.468805] (-) TimerEvent: {}
[32.569781] (-) TimerEvent: {}
[32.670857] (-) TimerEvent: {}
[32.771800] (-) TimerEvent: {}
[32.872722] (-) TimerEvent: {}
[32.973687] (-) TimerEvent: {}
[33.074547] (-) TimerEvent: {}
[33.175452] (-) TimerEvent: {}
[33.276387] (-) TimerEvent: {}
[33.380919] (-) TimerEvent: {}
[33.481928] (-) TimerEvent: {}
[33.583198] (-) TimerEvent: {}
[33.684251] (-) TimerEvent: {}
[33.787538] (-) TimerEvent: {}
[33.888886] (-) TimerEvent: {}
[33.989881] (-) TimerEvent: {}
[34.090812] (-) TimerEvent: {}
[34.191752] (-) TimerEvent: {}
[34.292729] (-) TimerEvent: {}
[34.394176] (-) TimerEvent: {}
[34.495141] (-) TimerEvent: {}
[34.596066] (-) TimerEvent: {}
[34.697006] (-) TimerEvent: {}
[34.799862] (-) TimerEvent: {}
[34.901284] (-) TimerEvent: {}
[35.002128] (-) TimerEvent: {}
[35.103183] (-) TimerEvent: {}
[35.204319] (-) TimerEvent: {}
[35.305246] (-) TimerEvent: {}
[35.406093] (-) TimerEvent: {}
[35.506860] (-) TimerEvent: {}
[35.609487] (-) TimerEvent: {}
[35.710327] (-) TimerEvent: {}
[35.811334] (-) TimerEvent: {}
[35.912349] (-) TimerEvent: {}
[36.013308] (-) TimerEvent: {}
[36.114420] (-) TimerEvent: {}
[36.215487] (-) TimerEvent: {}
[36.316659] (-) TimerEvent: {}
[36.417621] (-) TimerEvent: {}
[36.518653] (-) TimerEvent: {}
[36.619634] (-) TimerEvent: {}
[36.720531] (-) TimerEvent: {}
[36.821706] (-) TimerEvent: {}
[36.922702] (-) TimerEvent: {}
[37.023709] (-) TimerEvent: {}
[37.124821] (-) TimerEvent: {}
[37.225699] (-) TimerEvent: {}
[37.326687] (-) TimerEvent: {}
[37.427618] (-) TimerEvent: {}
[37.528426] (-) TimerEvent: {}
[37.629662] (-) TimerEvent: {}
[37.730504] (-) TimerEvent: {}
[37.831616] (-) TimerEvent: {}
[37.932447] (-) TimerEvent: {}
[38.033324] (-) TimerEvent: {}
[38.134231] (-) TimerEvent: {}
[38.235228] (-) TimerEvent: {}
[38.336160] (-) TimerEvent: {}
[38.437272] (-) TimerEvent: {}
[38.538556] (-) TimerEvent: {}
[38.639529] (-) TimerEvent: {}
[38.740969] (-) TimerEvent: {}
[38.843091] (-) TimerEvent: {}
[38.943993] (-) TimerEvent: {}
[39.044797] (-) TimerEvent: {}
[39.145683] (-) TimerEvent: {}
[39.246459] (-) TimerEvent: {}
[39.347412] (-) TimerEvent: {}
[39.448767] (-) TimerEvent: {}
[39.549657] (-) TimerEvent: {}
[39.650460] (-) TimerEvent: {}
[39.751461] (-) TimerEvent: {}
[39.792070] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/new_target.dir/build.make:90: CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o] Error 1\n'}
[39.851805] (-) TimerEvent: {}
[39.952506] (-) TimerEvent: {}
[40.053852] (-) TimerEvent: {}
[40.154824] (-) TimerEvent: {}
[40.179422] (inertial_sense_ros2) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/new_target.dir/build.make:76: CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o] Error 1\n'}
[40.180428] (inertial_sense_ros2) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:623: CMakeFiles/new_target.dir/all] Error 2\n'}
[40.181546] (inertial_sense_ros2) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[40.188878] (inertial_sense_ros2) CommandEnded: {'returncode': 2}
[40.255151] (-) TimerEvent: {}
[40.356709] (-) TimerEvent: {}
[40.466143] (-) TimerEvent: {}
[40.575037] (-) TimerEvent: {}
[40.675767] (-) TimerEvent: {}
[40.776727] (-) TimerEvent: {}
[40.877967] (-) TimerEvent: {}
[40.978952] (-) TimerEvent: {}
[41.079826] (-) TimerEvent: {}
[41.180796] (-) TimerEvent: {}
[41.281820] (-) TimerEvent: {}
[41.382525] (-) TimerEvent: {}
[41.483456] (-) TimerEvent: {}
[41.584266] (-) TimerEvent: {}
[41.685818] (-) TimerEvent: {}
[41.786645] (-) TimerEvent: {}
[41.887740] (-) TimerEvent: {}
[41.988489] (-) TimerEvent: {}
[42.089357] (-) TimerEvent: {}
[42.190141] (-) TimerEvent: {}
[42.291079] (-) TimerEvent: {}
[42.392056] (-) TimerEvent: {}
[42.493153] (-) TimerEvent: {}
[42.594025] (-) TimerEvent: {}
[42.694826] (-) TimerEvent: {}
[42.795975] (-) TimerEvent: {}
[42.896710] (-) TimerEvent: {}
[42.997811] (-) TimerEvent: {}
[43.098727] (-) TimerEvent: {}
[43.199516] (-) TimerEvent: {}
[43.300474] (-) TimerEvent: {}
[43.401218] (-) TimerEvent: {}
[43.502181] (-) TimerEvent: {}
[43.603219] (-) TimerEvent: {}
[43.704024] (-) TimerEvent: {}
[43.804800] (-) TimerEvent: {}
[43.906211] (-) TimerEvent: {}
[43.966985] (inertial_sense_ros2) JobEnded: {'identifier': 'inertial_sense_ros2', 'rc': 2}
[44.027431] (-) TimerEvent: {}
[44.027810] (-) EventReactorShutdown: {}
