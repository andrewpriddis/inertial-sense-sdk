[0.096s] Invoking command in '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/jazzy DEBUGINFOD_URLS=https://debuginfod.ubuntu.com /usr/bin/cmake --build /home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2 -- -j6 -l6
[1.036s] [  1%] Built target inertial_sense_ros2__rosidl_generator_type_description
[1.198s] [  1%] Built target inertial_sense_ros2__cpp
[1.270s] [  1%] Built target ament_cmake_python_copy_inertial_sense_ros2
[1.294s] [  2%] [32mBuilding CXX object CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o[0m
[1.303s] [  2%] [32mBuilding CXX object CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o[0m
[1.309s] [  3%] [32mBuilding CXX object CMakeFiles/new_target.dir/include/TopicHelper.cpp.o[0m
[1.347s] [ 29%] Built target inertial_sense_ros2__rosidl_generator_c
[1.657s] [ 39%] Built target inertial_sense_ros2__rosidl_typesupport_cpp
[1.691s] [ 49%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_c
[1.991s] [ 59%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_c
[2.010s] [ 68%] Built target inertial_sense_ros2__rosidl_typesupport_fastrtps_cpp
[2.334s] [ 77%] Built target inertial_sense_ros2__rosidl_typesupport_c
[2.365s] [ 86%] Built target inertial_sense_ros2__rosidl_typesupport_introspection_cpp
[2.552s] [ 86%] Built target inertial_sense_ros2
[2.686s] [ 87%] Built target inertial_sense_ros2__py
[2.762s] running egg_info
[2.877s] writing inertial_sense_ros2.egg-info/PKG-INFO
[2.880s] writing dependency_links to inertial_sense_ros2.egg-info/dependency_links.txt
[2.882s] writing top-level names to inertial_sense_ros2.egg-info/top_level.txt
[2.983s] [ 96%] Built target inertial_sense_ros2__rosidl_generator_py
[3.200s] reading manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'
[3.207s] writing manifest file 'inertial_sense_ros2.egg-info/SOURCES.txt'
[3.289s] [ 97%] Built target inertial_sense_ros2_s__rosidl_typesupport_fastrtps_c
[3.309s] [ 98%] Built target inertial_sense_ros2_s__rosidl_typesupport_introspection_c
[3.388s] [ 98%] Built target ament_cmake_python_build_inertial_sense_ros2_egg
[3.512s] [ 99%] Built target inertial_sense_ros2_s__rosidl_typesupport_c
[36.317s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31[m[K,
[36.322s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50[m[K,
[36.322s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25[m[K,
[36.322s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[36.323s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[36.323s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
[36.324s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
[36.324s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[36.325s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[36.326s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
[36.326s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K,
[36.327s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.cpp:19[m[K:
[36.333s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™:
[36.343s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:70:57:[m[K   required from here
[36.344s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.344s]    84 |     rclcpp::is_ros_compatible_type<MessageT>::[01;31m[Kvalue[m[K,
[36.345s]       |                                               [01;31m[K^~~~~[m[K
[36.345s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[36.386s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™:
[36.387s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:71:57:[m[K   required from here
[36.388s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.388s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[36.464s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™:
[36.466s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:72:57:[m[K   required from here
[36.471s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.471s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[36.532s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™:
[36.533s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:73:47:[m[K   required from here
[36.534s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.535s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<nav_msgs::msg::Odometry_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[36.581s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™:
[36.581s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:74:60:[m[K   required from here
[36.582s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.582s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[36.638s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™:
[36.638s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:75:54:[m[K   required from here
[36.638s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.639s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[36.703s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™:
[36.704s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:76:45:[m[K   required from here
[36.704s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.704s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::Imu_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[36.758s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™:
[36.759s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:55:[m[K   required from here
[36.759s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.760s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[36.887s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™:
[36.887s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:53:[m[K   required from here
[36.888s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.888s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[36.946s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™:
[36.946s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:80:51:[m[K   required from here
[36.947s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[36.947s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.003s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™:
[37.004s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:81:57:[m[K   required from here
[37.005s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.005s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.150s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31[m[K,
[37.150s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50[m[K,
[37.151s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25[m[K,
[37.151s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[37.152s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[37.152s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
[37.156s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
[37.158s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[37.158s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[37.159s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
[37.161s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K,
[37.162s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29[m[K,
[37.163s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:19[m[K:
[37.166s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™:
[37.167s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:70:57:[m[K   required from here
[37.167s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.168s]    84 |     rclcpp::is_ros_compatible_type<MessageT>::[01;31m[Kvalue[m[K,
[37.168s]       |                                               [01;31m[K^~~~~[m[K
[37.174s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.201s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™:
[37.201s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:71:57:[m[K   required from here
[37.201s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.202s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.252s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™:
[37.253s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:72:57:[m[K   required from here
[37.253s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.254s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.316s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™:
[37.317s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:73:47:[m[K   required from here
[37.317s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.317s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<nav_msgs::msg::Odometry_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.389s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™:
[37.389s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:74:60:[m[K   required from here
[37.390s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.390s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.444s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™:
[37.445s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:75:54:[m[K   required from here
[37.445s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.446s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.503s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™:
[37.503s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:76:45:[m[K   required from here
[37.504s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.504s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::Imu_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.566s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™:
[37.566s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:55:[m[K   required from here
[37.567s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.567s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.690s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™:
[37.690s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:53:[m[K   required from here
[37.691s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.691s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.722s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™:
[37.723s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:80:51:[m[K   required from here
[37.723s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.724s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.771s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™:
[37.772s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:81:57:[m[K   required from here
[37.772s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[37.772s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[37.996s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31[m[K,
[37.996s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription.hpp:50[m[K,
[37.997s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:25[m[K,
[37.997s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[37.997s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[37.998s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
[37.998s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
[38.003s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[38.003s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[38.003s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K,
[38.003s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:25[m[K,
[38.004s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:29[m[K,
[38.004s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:19[m[K:
[38.004s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™:
[38.005s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:70:57:[m[K   required from here
[38.005s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.007s]    84 |     rclcpp::is_ros_compatible_type<MessageT>::[01;31m[Kvalue[m[K,
[38.008s]       |                                               [01;31m[K^~~~~[m[K
[38.008s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[38.072s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™:
[38.073s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:71:57:[m[K   required from here
[38.073s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.074s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[38.148s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™:
[38.149s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:72:57:[m[K   required from here
[38.149s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.150s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[38.226s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™:
[38.226s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:73:47:[m[K   required from here
[38.229s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.231s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<nav_msgs::msg::Odometry_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[38.300s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™:
[38.305s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:74:60:[m[K   required from here
[38.305s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.306s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[38.372s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™:
[38.375s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:75:54:[m[K   required from here
[38.382s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.382s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[38.463s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™:
[38.463s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:76:45:[m[K   required from here
[38.464s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.465s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::Imu_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[38.566s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™:
[38.567s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:77:55:[m[K   required from here
[38.568s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.568s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[38.853s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™:
[38.858s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:79:53:[m[K   required from here
[38.865s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.865s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[38.946s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™:
[38.947s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:80:51:[m[K   required from here
[38.947s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[38.947s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[39.040s] /opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp: In instantiation of â€˜[01m[Kclass rclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™:
[39.040s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/TopicHelper.h:81:57:[m[K   required from here
[39.045s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: given message type is not compatible with ROS and cannot be used with a Publisher
[39.046s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:84:47:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krclcpp::is_ros_compatible_type<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::value[m[Kâ€™ evaluates to false
[39.335s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/imu.hpp:9[m[K,
[39.335s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:44[m[K:
[39.336s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™ after instantiation
[39.336s]   277 | struct [01;31m[Kis_message<sensor_msgs::msg::Imu>[m[K
[39.336s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[39.337s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™
[39.343s] In file included from [01m[K/opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__traits.hpp:18[m[K,
[39.343s]                  from [01m[K/opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/list_parameters.hpp:9[m[K,
[39.344s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:21[m[K,
[39.345s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171[m[K:
[39.348s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™
[39.349s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[39.349s]       |        [01;36m[K^~~~~~~~~~[m[K
[39.403s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/magnetic_field.hpp:9[m[K,
[39.403s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:45[m[K:
[39.404s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™ after instantiation
[39.404s]   166 | struct [01;31m[Kis_message<sensor_msgs::msg::MagneticField>[m[K
[39.404s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[39.404s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™
[39.405s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™
[39.405s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[39.408s]       |        [01;36m[K^~~~~~~~~~[m[K
[39.735s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/nav_sat_fix.hpp:9[m[K,
[39.735s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:48[m[K:
[39.740s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™ after instantiation
[39.744s]   234 | struct [01;31m[Kis_message<sensor_msgs::msg::NavSatFix>[m[K
[39.745s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[39.746s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™
[39.746s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™
[39.747s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[39.747s]       |        [01;36m[K^~~~~~~~~~[m[K
[40.046s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps.hpp:9[m[K,
[40.048s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:49[m[K:
[40.050s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™ after instantiation
[40.051s]   349 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::GPS>[m[K
[40.054s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[40.055s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™
[40.055s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™
[40.056s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[40.058s]       |        [01;36m[K^~~~~~~~~~[m[K
[40.172s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps_info.hpp:9[m[K,
[40.172s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:51[m[K:
[40.173s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™ after instantiation
[40.173s]   166 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::GPSInfo>[m[K
[40.174s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[40.177s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™
[40.178s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™
[40.178s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[40.179s]       |        [01;36m[K^~~~~~~~~~[m[K
[40.222s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/pimu.hpp:9[m[K,
[40.223s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:52[m[K:
[40.223s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™ after instantiation
[40.224s]   162 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::PIMU>[m[K
[40.224s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[40.228s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™
[40.228s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™
[40.228s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[40.229s]       |        [01;36m[K^~~~~~~~~~[m[K
[40.303s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/imu.hpp:9[m[K,
[40.303s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:44[m[K:
[40.304s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™ after instantiation
[40.304s]   277 | struct [01;31m[Kis_message<sensor_msgs::msg::Imu>[m[K
[40.305s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[40.309s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/imu__traits.hpp:277:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™
[40.310s] In file included from [01m[K/opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/detail/list_parameters__traits.hpp:18[m[K,
[40.310s]                  from [01m[K/opt/ros/jazzy/include/rcl_interfaces/rcl_interfaces/srv/list_parameters.hpp:9[m[K,
[40.310s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:21[m[K,
[40.311s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171[m[K:
[40.312s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::Imu_<std::allocator<void> > >[m[Kâ€™
[40.312s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[40.315s]       |        [01;36m[K^~~~~~~~~~[m[K
[40.361s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/magnetic_field.hpp:9[m[K,
[40.361s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:45[m[K:
[40.362s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™ after instantiation
[40.362s]   166 | struct [01;31m[Kis_message<sensor_msgs::msg::MagneticField>[m[K
[40.363s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[40.366s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/magnetic_field__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™
[40.367s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::MagneticField_<std::allocator<void> > >[m[Kâ€™
[40.367s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[40.367s]       |        [01;36m[K^~~~~~~~~~[m[K
[40.705s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/inl2_states.hpp:9[m[K,
[40.706s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:61[m[K:
[40.706s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™ after instantiation
[40.706s]   248 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::INL2States>[m[K
[40.706s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[40.707s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™
[40.714s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™
[40.714s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[40.714s]       |        [01;36m[K^~~~~~~~~~[m[K
[40.830s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins2.hpp:9[m[K,
[40.830s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:62[m[K:
[40.830s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™ after instantiation
[40.831s]   292 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS2>[m[K
[40.831s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[40.832s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™
[40.832s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™
[40.838s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[40.838s]       |        [01;36m[K^~~~~~~~~~[m[K
[40.839s] In file included from [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/nav_sat_fix.hpp:9[m[K,
[40.840s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:48[m[K:
[40.840s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™ after instantiation
[40.841s]   234 | struct [01;31m[Kis_message<sensor_msgs::msg::NavSatFix>[m[K
[40.845s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[40.846s] [01m[K/opt/ros/jazzy/include/sensor_msgs/sensor_msgs/msg/detail/nav_sat_fix__traits.hpp:234:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™
[40.849s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >[m[Kâ€™
[40.850s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[40.850s]       |        [01;36m[K^~~~~~~~~~[m[K
[40.981s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins1.hpp:9[m[K,
[40.981s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:63[m[K:
[40.982s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™ after instantiation
[40.982s]   330 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS1>[m[K
[40.983s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[40.990s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™
[40.991s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™
[40.991s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[40.991s]       |        [01;36m[K^~~~~~~~~~[m[K
[41.036s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps.hpp:9[m[K,
[41.036s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:49[m[K:
[41.037s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™ after instantiation
[41.037s]   349 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::GPS>[m[K
[41.037s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[41.038s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps__traits.hpp:349:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™
[41.042s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >[m[Kâ€™
[41.043s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[41.043s]       |        [01;36m[K^~~~~~~~~~[m[K
[41.103s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins4.hpp:9[m[K,
[41.103s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:64[m[K:
[41.104s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™ after instantiation
[41.104s]   292 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS4>[m[K
[41.105s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[41.109s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™
[41.109s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™
[41.110s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[41.111s]       |        [01;36m[K^~~~~~~~~~[m[K
[41.143s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/gps_info.hpp:9[m[K,
[41.144s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:51[m[K:
[41.144s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™ after instantiation
[41.144s]   166 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::GPSInfo>[m[K
[41.145s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[41.145s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/gps_info__traits.hpp:166:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™
[41.146s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >[m[Kâ€™
[41.146s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[41.151s]       |        [01;36m[K^~~~~~~~~~[m[K
[41.209s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/pimu.hpp:9[m[K,
[41.210s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:52[m[K:
[41.210s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™ after instantiation
[41.211s]   162 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::PIMU>[m[K
[41.211s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[41.218s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/pimu__traits.hpp:162:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™
[41.218s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >[m[Kâ€™
[41.218s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[41.219s]       |        [01;36m[K^~~~~~~~~~[m[K
[41.278s] In file included from [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/odometry.hpp:9[m[K,
[41.279s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:65[m[K:
[41.279s] [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™ after instantiation
[41.280s]   163 | struct [01;31m[Kis_message<nav_msgs::msg::Odometry>[m[K
[41.280s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[41.284s] [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™
[41.284s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™
[41.285s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[41.285s]       |        [01;36m[K^~~~~~~~~~[m[K
[41.783s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/inl2_states.hpp:9[m[K,
[41.784s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:61[m[K:
[41.785s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™ after instantiation
[41.785s]   248 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::INL2States>[m[K
[41.785s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[41.792s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/inl2_states__traits.hpp:248:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™
[41.792s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >[m[Kâ€™
[41.792s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[41.793s]       |        [01;36m[K^~~~~~~~~~[m[K
[41.875s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins2.hpp:9[m[K,
[41.876s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:62[m[K:
[41.876s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™ after instantiation
[41.877s]   292 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS2>[m[K
[41.881s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[41.881s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins2__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™
[41.882s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >[m[Kâ€™
[41.882s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[41.890s]       |        [01;36m[K^~~~~~~~~~[m[K
[42.002s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins1.hpp:9[m[K,
[42.003s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:63[m[K:
[42.003s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™ after instantiation
[42.004s]   330 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS1>[m[K
[42.007s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[42.008s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins1__traits.hpp:330:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™
[42.009s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >[m[Kâ€™
[42.009s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[42.010s]       |        [01;36m[K^~~~~~~~~~[m[K
[42.102s] In file included from [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/didins4.hpp:9[m[K,
[42.103s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:64[m[K:
[42.103s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™ after instantiation
[42.104s]   292 | struct [01;31m[Kis_message<inertial_sense_ros2::msg::DIDINS4>[m[K
[42.104s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[42.112s] [01m[K/home/s/Inertial_Sense/imx/ros2_ws/src/inertial-sense-sdk/ros2/build/inertial_sense_ros2/rosidl_generator_cpp/inertial_sense_ros2/msg/detail/didins4__traits.hpp:292:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™
[42.112s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >[m[Kâ€™
[42.113s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[42.113s]       |        [01;36m[K^~~~~~~~~~[m[K
[42.278s] In file included from [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/odometry.hpp:9[m[K,
[42.278s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:65[m[K:
[42.279s] [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8:[m[K [01;31m[Kerror: [m[Kspecialization of â€˜[01m[Krosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™ after instantiation
[42.279s]   163 | struct [01;31m[Kis_message<nav_msgs::msg::Odometry>[m[K
[42.280s]       |        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[42.280s] [01m[K/opt/ros/jazzy/include/nav_msgs/nav_msgs/msg/detail/odometry__traits.hpp:163:8:[m[K [01;31m[Kerror: [m[Kredefinition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™
[42.283s] [01m[K/opt/ros/jazzy/include/rosidl_runtime_cpp/rosidl_runtime_cpp/traits.hpp:165:8:[m[K [01;36m[Knote: [m[Kprevious definition of â€˜[01m[Kstruct rosidl_generator_traits::is_message<nav_msgs::msg::Odometry_<std::allocator<void> > >[m[Kâ€™
[42.284s]   165 | struct [01;36m[Kis_message[m[K : std::false_type {};
[42.285s]       |        [01;36m[K^~~~~~~~~~[m[K
[43.731s] In file included from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:20[m[K:
[43.732s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kbool InertialSenseROS::[01;32m[Kfirmware_compatiblity_check[m[K()[m[Kâ€™:
[43.736s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[43.737s]   568 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K protocol_fault = rclcpp::Logger::Level::Debug; // none
[43.737s]       |                            [01;31m[K^~~~~[m[K
[43.848s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[43.849s]   569 |     if (diff_protocol[0] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
[43.849s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[43.862s]       |                                [32m[Kprotocol_type_t[m[K
[43.939s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[43.939s]   570 |     else if (diff_protocol[1] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
[43.940s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[43.943s]       |                                     [32m[Kprotocol_type_t[m[K
[44.031s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[44.031s]   571 |     else if (diff_protocol[2] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[44.032s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[44.032s]       |                                     [32m[Kprotocol_type_t[m[K
[44.121s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[44.122s]   572 |     else if (diff_protocol[3] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
[44.122s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[44.122s]       |                                     [32m[Kprotocol_type_t[m[K
[44.123s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[44.123s]   574 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K firmware_fault = rclcpp::Logger::Level::Debug; // none
[44.125s]       |                            [01;31m[K^~~~~[m[K
[44.199s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[44.199s]   575 |     if (diff_firmware[0] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
[44.200s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[44.276s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[44.278s]   576 |     else if (diff_firmware[1] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
[44.281s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[44.351s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[44.352s]   577 |     else if (diff_firmware[2] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[44.352s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[44.352s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[44.353s]   579 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K final_fault = std::max(firmware_fault, protocol_fault);
[44.354s]       |                            [01;31m[K^~~~~[m[K
[44.416s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfinal_fault[m[Kâ€™ was not declared in this scope
[44.420s]   599 |     return [01;31m[Kfinal_fault[m[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
[44.420s]       |            [01;31m[K^~~~~~~~~~~[m[K
[44.569s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kbool InertialSenseROS::[01;32m[Kfirmware_compatiblity_check[m[K()[m[Kâ€™:
[44.569s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:568:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[44.570s]   568 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K protocol_fault = rclcpp::Logger::Level::Debug; // none
[44.576s]       |                            [01;31m[K^~~~~[m[K
[44.633s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:569:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[44.634s]   569 |     if (diff_protocol[0] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Fatal; // major protocol changes -- BREAKING
[44.635s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[44.639s]       |                                [32m[Kprotocol_type_t[m[K
[44.697s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:570:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[44.697s]   570 |     else if (diff_protocol[1] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Error; // minor protocol changes -- New parameters/features
[44.701s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[44.701s]       |                                     [32m[Kprotocol_type_t[m[K
[44.768s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:571:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[44.769s]   571 |     else if (diff_protocol[2] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[44.769s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[44.770s]       |                                     [32m[Kprotocol_type_t[m[K
[44.784s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS1_callback[m[K(eDataIDs, const ins_1_t*)[m[Kâ€™:
[44.784s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS1&)[m[Kâ€™
[44.785s]   955 |             [01;31m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[44.785s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.786s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.789s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[44.789s]       |   [01;36m[K^~~~~~~[m[K
[44.790s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.790s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >[m[Kâ€™
[44.790s]   955 |             [01;36m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[44.791s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.796s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.796s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[44.796s]       |   [01;36m[K^~~~~~~[m[K
[44.797s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.797s] In file included from [01m[K/usr/include/c++/13/bits/move.h:37[m[K,
[44.797s]                  from [01m[K/usr/include/c++/13/bits/exception_ptr.h:41[m[K,
[44.798s]                  from [01m[K/usr/include/c++/13/exception:164[m[K,
[44.798s]                  from [01m[K/usr/include/c++/13/ios:41[m[K,
[44.801s]                  from [01m[K/usr/include/c++/13/ostream:40[m[K,
[44.802s]                  from [01m[K/usr/include/c++/13/iostream:41[m[K,
[44.802s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22[m[K:
[44.802s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = void][m[K[m[Kâ€™:
[44.802s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K   required by substitution of â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value), void> rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::[01;32m[Kpublish[m[K(const T&) [35m[K[with T = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[44.803s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K   required from here
[44.803s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[44.803s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[44.804s]       |           [01;31m[K^~~~~~~~~~~[m[K
[44.808s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.808s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[44.808s]       |   [01;36m[K^~~~~~~[m[K
[44.809s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.812s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >[m[Kâ€™
[44.813s]   955 |             [01;36m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[44.813s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.814s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.814s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[44.814s]       |   [01;36m[K^~~~~~~[m[K
[44.814s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.815s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[44.815s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[44.815s]       |   [01;36m[K^~~~~~~[m[K
[44.821s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[44.821s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[44.822s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.822s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.823s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[44.827s]       |   [01;36m[K^~~~~~~[m[K
[44.828s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[44.832s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[44.832s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.834s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[44.835s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[44.835s]       |   [01;36m[K^~~~~~~[m[K
[44.835s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[44.835s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[44.843s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[44.844s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS2_callback[m[K(eDataIDs, const ins_2_t*)[m[Kâ€™:
[44.845s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS2&)[m[Kâ€™
[44.845s]   982 |             [01;31m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[44.846s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.853s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.854s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[44.854s]       |   [01;36m[K^~~~~~~[m[K
[44.854s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.854s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >[m[Kâ€™
[44.855s]   982 |             [01;36m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[44.861s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.861s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.862s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[44.863s]       |   [01;36m[K^~~~~~~[m[K
[44.863s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.869s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.870s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[44.870s]       |   [01;36m[K^~~~~~~[m[K
[44.870s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.871s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >[m[Kâ€™
[44.872s]   982 |             [01;36m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[44.881s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.886s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.893s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[44.894s]       |   [01;36m[K^~~~~~~[m[K
[44.895s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.895s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[44.895s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[44.896s]       |   [01;36m[K^~~~~~~[m[K
[44.905s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[44.905s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[44.906s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.906s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.906s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[44.906s]       |   [01;36m[K^~~~~~~[m[K
[44.907s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[44.907s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[44.913s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.914s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >][m[K[m[Kâ€™
[44.915s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[44.915s]       |   [01;36m[K^~~~~~~[m[K
[44.915s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[44.916s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[44.916s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[44.922s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS4_callback[m[K(eDataIDs, const ins_4_t*)[m[Kâ€™:
[44.923s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS4&)[m[Kâ€™
[44.923s]  1009 |             [01;31m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[44.923s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.924s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.924s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[44.925s]       |   [01;36m[K^~~~~~~[m[K
[44.930s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.930s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >[m[Kâ€™
[44.931s]  1009 |             [01;36m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[44.931s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.931s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.936s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[44.936s]       |   [01;36m[K^~~~~~~[m[K
[44.937s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.937s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.938s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[44.938s]       |   [01;36m[K^~~~~~~[m[K
[44.939s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.940s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >[m[Kâ€™
[44.940s]  1009 |             [01;36m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[44.940s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.941s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.942s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[44.942s]       |   [01;36m[K^~~~~~~[m[K
[44.943s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.943s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[44.944s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[44.945s]       |   [01;36m[K^~~~~~~[m[K
[44.950s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[44.951s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[44.951s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.954s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.954s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[44.955s]       |   [01;36m[K^~~~~~~[m[K
[44.959s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[44.959s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[44.959s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.959s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >][m[K[m[Kâ€™
[44.960s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[44.960s]       |   [01;36m[K^~~~~~~[m[K
[44.960s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[44.960s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[44.960s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[44.961s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:572:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kprotocol_fault[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kprotocol_type_t[m[Kâ€™?
[44.961s]   572 |     else if (diff_protocol[3] != 0) [01;31m[Kprotocol_fault[m[K = rclcpp::Logger::Level::Info; // this is essentially trivial, but good to know.
[44.964s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[44.965s]       |                                     [32m[Kprotocol_type_t[m[K
[44.965s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:574:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[44.965s]   574 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K firmware_fault = rclcpp::Logger::Level::Debug; // none
[44.966s]       |                            [01;31m[K^~~~~[m[K
[44.966s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[44.966s]  1078 |             [01;31m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[44.966s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[44.967s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.967s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[44.971s]       |   [01;36m[K^~~~~~~[m[K
[44.971s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.971s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[44.971s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[44.972s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[44.972s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.972s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[44.977s]       |   [01;36m[K^~~~~~~[m[K
[44.977s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.977s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.978s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[44.979s]       |   [01;36m[K^~~~~~~[m[K
[44.980s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.983s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[44.984s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[44.984s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[44.985s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.985s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[44.986s]       |   [01;36m[K^~~~~~~[m[K
[44.986s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[44.990s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[44.990s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[44.991s]       |   [01;36m[K^~~~~~~[m[K
[44.993s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[44.993s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[44.994s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[44.994s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[44.997s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[44.997s]       |   [01;36m[K^~~~~~~[m[K
[44.998s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[44.999s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[44.999s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.000s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[45.000s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.003s]       |   [01;36m[K^~~~~~~[m[K
[45.004s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.004s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.004s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.005s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[45.005s]  1165 |                 [01;31m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[45.009s]       |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.010s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.010s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.010s]       |   [01;36m[K^~~~~~~[m[K
[45.011s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.011s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.011s]  1165 |                 [01;36m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[45.019s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.019s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.019s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.020s]       |   [01;36m[K^~~~~~~[m[K
[45.020s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.020s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.021s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.024s]       |   [01;36m[K^~~~~~~[m[K
[45.025s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.025s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.026s]  1165 |                 [01;36m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[45.026s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.026s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.026s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.027s]       |   [01;36m[K^~~~~~~[m[K
[45.027s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.030s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.031s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.032s]       |   [01;36m[K^~~~~~~[m[K
[45.032s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.033s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.036s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.037s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.037s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.038s]       |   [01;36m[K^~~~~~~[m[K
[45.038s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.039s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.043s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.043s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[45.044s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.044s]       |   [01;36m[K^~~~~~~[m[K
[45.044s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.045s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.048s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.049s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[45.049s]  1259 |                 [01;31m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[45.049s]       |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.050s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.050s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.050s]       |   [01;36m[K^~~~~~~[m[K
[45.050s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.051s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.054s]  1259 |                 [01;36m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[45.055s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.055s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.055s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.055s]       |   [01;36m[K^~~~~~~[m[K
[45.056s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.061s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.062s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.062s]       |   [01;36m[K^~~~~~~[m[K
[45.063s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.064s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.064s]  1259 |                 [01;36m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[45.067s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.068s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.068s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.069s]       |   [01;36m[K^~~~~~~[m[K
[45.069s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.069s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.069s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.070s]       |   [01;36m[K^~~~~~~[m[K
[45.074s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.074s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.074s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.074s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.075s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.075s]       |   [01;36m[K^~~~~~~[m[K
[45.076s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.077s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.078s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.079s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[45.079s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.079s]       |   [01;36m[K^~~~~~~[m[K
[45.080s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.081s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.081s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.082s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINL2_states_callback[m[K(eDataIDs, const inl2_states_t*)[m[Kâ€™:
[45.082s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::INL2States&)[m[Kâ€™
[45.082s]  1312 |             [01;31m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[45.083s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[45.084s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.084s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.085s]       |   [01;36m[K^~~~~~~[m[K
[45.085s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.085s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >[m[Kâ€™
[45.086s]  1312 |             [01;36m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[45.086s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[45.086s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.087s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.087s]       |   [01;36m[K^~~~~~~[m[K
[45.087s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.089s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.089s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.089s]       |   [01;36m[K^~~~~~~[m[K
[45.090s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.090s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >[m[Kâ€™
[45.090s]  1312 |             [01;36m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[45.090s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[45.092s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.092s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.093s]       |   [01;36m[K^~~~~~~[m[K
[45.093s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.094s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.094s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.094s]       |   [01;36m[K^~~~~~~[m[K
[45.095s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.095s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.096s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.096s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.097s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.097s]       |   [01;36m[K^~~~~~~[m[K
[45.097s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.098s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.098s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.098s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >][m[K[m[Kâ€™
[45.098s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.099s]       |   [01;36m[K^~~~~~~[m[K
[45.099s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.100s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.101s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.101s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_pos_callback[m[K(eDataIDs, const gps_pos_t*)[m[Kâ€™:
[45.102s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::publish(sensor_msgs::msg::NavSatFix&)[m[Kâ€™
[45.103s]  1455 |             [01;31m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[45.104s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.105s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.105s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.105s]       |   [01;36m[K^~~~~~~[m[K
[45.106s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.106s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >[m[Kâ€™
[45.107s]  1455 |             [01;36m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[45.108s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.108s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.109s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.110s]       |   [01;36m[K^~~~~~~[m[K
[45.110s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.112s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.113s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.114s]       |   [01;36m[K^~~~~~~[m[K
[45.115s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.116s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >[m[Kâ€™
[45.117s]  1455 |             [01;36m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[45.119s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.119s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.120s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.121s]       |   [01;36m[K^~~~~~~[m[K
[45.121s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.122s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.123s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.124s]       |   [01;36m[K^~~~~~~[m[K
[45.124s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.124s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.125s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.125s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.125s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.126s]       |   [01;36m[K^~~~~~~[m[K
[45.126s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.126s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.126s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.127s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::NavSatFix_<std::allocator<void> >][m[K[m[Kâ€™
[45.128s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.129s]       |   [01;36m[K^~~~~~~[m[K
[45.129s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.129s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.129s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.130s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:575:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[45.130s]   575 |     if (diff_firmware[0] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Fatal;  // major protocol changes -- BREAKING
[45.130s]       |                                [01;31m[K^~~~~~~~~~~~~~[m[K
[45.131s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS1[m[K()[m[Kâ€™:
[45.131s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[45.131s]  1500 |             [01;31m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[45.132s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.132s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.133s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.133s]       |   [01;36m[K^~~~~~~[m[K
[45.134s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.134s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[45.134s]  1500 |             [01;36m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[45.135s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.135s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.136s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.136s]       |   [01;36m[K^~~~~~~[m[K
[45.136s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.137s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.137s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.137s]       |   [01;36m[K^~~~~~~[m[K
[45.138s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.138s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[45.139s]  1500 |             [01;36m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[45.139s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.140s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.140s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.141s]       |   [01;36m[K^~~~~~~[m[K
[45.141s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.142s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.142s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.143s]       |   [01;36m[K^~~~~~~[m[K
[45.143s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.143s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.144s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.145s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.145s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.145s]       |   [01;36m[K^~~~~~~[m[K
[45.146s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.146s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.147s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.147s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >][m[K[m[Kâ€™
[45.147s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.148s]       |   [01;36m[K^~~~~~~[m[K
[45.149s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.149s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.149s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.150s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS2[m[K()[m[Kâ€™:
[45.150s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[45.150s]  1512 |             [01;31m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[45.150s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.151s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.151s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.152s]       |   [01;36m[K^~~~~~~[m[K
[45.152s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.153s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[45.153s]  1512 |             [01;36m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[45.153s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.154s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.154s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.154s]       |   [01;36m[K^~~~~~~[m[K
[45.155s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.155s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.156s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.156s]       |   [01;36m[K^~~~~~~[m[K
[45.156s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.156s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[45.157s]  1512 |             [01;36m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[45.159s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.160s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.160s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.161s]       |   [01;36m[K^~~~~~~[m[K
[45.161s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.161s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.162s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.162s]       |   [01;36m[K^~~~~~~[m[K
[45.162s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.163s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.163s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.164s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.164s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.164s]       |   [01;36m[K^~~~~~~[m[K
[45.165s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.165s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.166s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.174s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >][m[K[m[Kâ€™
[45.175s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.175s]       |   [01;36m[K^~~~~~~[m[K
[45.176s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.176s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.177s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.178s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_info_callback[m[K(eDataIDs, const gps_sat_t*)[m[Kâ€™:
[45.178s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[45.178s]  1569 |     case DID_GPS1_SAT:  [01;31m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[45.181s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.182s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.183s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.184s]       |   [01;36m[K^~~~~~~[m[K
[45.184s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.185s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[45.185s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[45.186s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.187s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.187s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.188s]       |   [01;36m[K^~~~~~~[m[K
[45.188s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.189s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.190s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.191s]       |   [01;36m[K^~~~~~~[m[K
[45.191s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.192s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[45.192s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[45.192s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.193s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.193s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.194s]       |   [01;36m[K^~~~~~~[m[K
[45.194s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.195s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.195s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.195s]       |   [01;36m[K^~~~~~~[m[K
[45.196s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.196s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.197s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.197s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.198s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.198s]       |   [01;36m[K^~~~~~~[m[K
[45.199s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.200s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.201s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.201s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >][m[K[m[Kâ€™
[45.202s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.202s]       |   [01;36m[K^~~~~~~[m[K
[45.202s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.203s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.203s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.204s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[45.204s]  1570 |     case DID_GPS2_SAT:  [01;31m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[45.204s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.205s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.205s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.205s]       |   [01;36m[K^~~~~~~[m[K
[45.206s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.206s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[45.207s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[45.207s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.208s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.208s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.208s]       |   [01;36m[K^~~~~~~[m[K
[45.209s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.210s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.211s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.211s]       |   [01;36m[K^~~~~~~[m[K
[45.211s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.212s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[45.212s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[45.213s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.214s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.215s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.215s]       |   [01;36m[K^~~~~~~[m[K
[45.216s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.217s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.217s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.218s]       |   [01;36m[K^~~~~~~[m[K
[45.218s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.218s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.219s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.219s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.220s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.220s]       |   [01;36m[K^~~~~~~[m[K
[45.221s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.221s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.222s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.223s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >][m[K[m[Kâ€™
[45.223s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.224s]       |   [01;36m[K^~~~~~~[m[K
[45.224s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.225s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.225s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.226s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kmag_callback[m[K(eDataIDs, const magnetometer_t*)[m[Kâ€™:
[45.226s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::publish(sensor_msgs::msg::MagneticField&)[m[Kâ€™
[45.226s]  1588 |     [01;31m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[45.227s]       |     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[45.229s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.230s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.230s]       |   [01;36m[K^~~~~~~[m[K
[45.231s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.231s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >[m[Kâ€™
[45.231s]  1588 |     [01;36m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[45.232s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[45.232s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.232s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.233s]       |   [01;36m[K^~~~~~~[m[K
[45.234s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.234s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.235s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.235s]       |   [01;36m[K^~~~~~~[m[K
[45.236s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.237s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >[m[Kâ€™
[45.238s]  1588 |     [01;36m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[45.238s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[45.239s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.240s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.240s]       |   [01;36m[K^~~~~~~[m[K
[45.240s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.241s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.242s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.242s]       |   [01;36m[K^~~~~~~[m[K
[45.242s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.243s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.243s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.244s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.244s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.245s]       |   [01;36m[K^~~~~~~[m[K
[45.245s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.245s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.245s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.246s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::MagneticField_<std::allocator<void> >][m[K[m[Kâ€™
[45.247s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.247s]       |   [01;36m[K^~~~~~~[m[K
[45.247s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.248s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.248s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.249s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kpreint_IMU_callback[m[K(eDataIDs, const pimu_t*)[m[Kâ€™:
[45.249s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::PIMU&)[m[Kâ€™
[45.250s]  1623 |         [01;31m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[45.250s]       |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.251s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.251s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.251s]       |   [01;36m[K^~~~~~~[m[K
[45.251s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.252s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >[m[Kâ€™
[45.253s]  1623 |         [01;36m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[45.253s]       |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.253s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.254s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.255s]       |   [01;36m[K^~~~~~~[m[K
[45.255s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.256s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.256s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.257s]       |   [01;36m[K^~~~~~~[m[K
[45.257s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.257s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >[m[Kâ€™
[45.258s]  1623 |         [01;36m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[45.259s]       |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.259s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.259s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.260s]       |   [01;36m[K^~~~~~~[m[K
[45.260s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.261s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.261s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.261s]       |   [01;36m[K^~~~~~~[m[K
[45.262s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.262s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.263s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.263s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.264s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.264s]       |   [01;36m[K^~~~~~~[m[K
[45.264s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.265s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.265s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.266s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >][m[K[m[Kâ€™
[45.267s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.268s]       |   [01;36m[K^~~~~~~[m[K
[45.268s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.268s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.269s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.269s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >::publish(sensor_msgs::msg::Imu&)[m[Kâ€™
[45.270s]  1640 |             [01;31m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[45.270s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[45.271s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.272s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.272s]       |   [01;36m[K^~~~~~~[m[K
[45.273s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.273s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >[m[Kâ€™
[45.273s]  1640 |             [01;36m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[45.274s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[45.274s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.275s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.275s]       |   [01;36m[K^~~~~~~[m[K
[45.275s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.276s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.276s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.276s]       |   [01;36m[K^~~~~~~[m[K
[45.277s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.279s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >[m[Kâ€™
[45.279s]  1640 |             [01;36m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[45.280s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[45.280s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.280s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.281s]       |   [01;36m[K^~~~~~~[m[K
[45.281s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.282s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.282s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.282s]       |   [01;36m[K^~~~~~~[m[K
[45.283s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.283s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.284s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.284s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.285s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.285s]       |   [01;36m[K^~~~~~~[m[K
[45.286s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.286s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.286s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.287s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Imu_<std::allocator<void> >][m[K[m[Kâ€™
[45.287s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.288s]       |   [01;36m[K^~~~~~~[m[K
[45.289s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.290s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.290s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.290s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:576:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[45.291s]   576 |     else if (diff_firmware[1] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Error;  // minor protocol changes -- New parameters/features
[45.291s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[45.292s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:[m[K In function â€˜[01m[Kint[01;32m[K main[m[K(int, char**)[m[Kâ€™:
[45.292s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_node.cpp:50:34:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass InertialSenseROS[m[Kâ€™ has no member named â€˜[01m[Knh_[m[Kâ€™
[45.292s]    50 |         rclcpp::spin_some(thing->[01;31m[Knh_[m[K);
[45.293s]       |                                  [01;31m[K^~~[m[K
[45.293s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:577:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfirmware_fault[m[Kâ€™ was not declared in this scope
[45.293s]   577 |     else if (diff_firmware[2] != 0) [01;31m[Kfirmware_fault[m[K = rclcpp::Logger::Level::Warn; // patch changes - the shouldn't be significant, but still important
[45.294s]       |                                     [01;31m[K^~~~~~~~~~~~~~[m[K
[45.294s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:579:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KLevel[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::Logger::Level[m[Kâ€™
[45.294s]   579 |     rclcpp::Logger::Level::[01;31m[KLevel[m[K final_fault = std::max(firmware_fault, protocol_fault);
[45.295s]       |                            [01;31m[K^~~~~[m[K
[45.295s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:599:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kfinal_fault[m[Kâ€™ was not declared in this scope
[45.295s]   599 |     return [01;31m[Kfinal_fault[m[K == rclcpp::Logger::Level::Debug; // true if they match, false if they don't.
[45.296s]       |            [01;31m[K^~~~~~~~~~~[m[K
[45.575s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS1_callback[m[K(eDataIDs, const ins_1_t*)[m[Kâ€™:
[45.576s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS1&)[m[Kâ€™
[45.578s]   955 |             [01;31m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[45.578s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.578s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.579s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.581s]       |   [01;36m[K^~~~~~~[m[K
[45.582s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.582s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >[m[Kâ€™
[45.583s]   955 |             [01;36m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[45.583s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.590s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.595s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.595s]       |   [01;36m[K^~~~~~~[m[K
[45.596s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.596s] In file included from [01m[K/usr/include/c++/13/bits/move.h:37[m[K,
[45.597s]                  from [01m[K/usr/include/c++/13/bits/exception_ptr.h:41[m[K,
[45.602s]                  from [01m[K/usr/include/c++/13/exception:164[m[K,
[45.603s]                  from [01m[K/usr/include/c++/13/ios:41[m[K,
[45.606s]                  from [01m[K/usr/include/c++/13/ostream:40[m[K,
[45.606s]                  from [01m[K/usr/include/c++/13/iostream:41[m[K,
[45.607s]                  from [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/include/inertial_sense_ros2.h:22[m[K:
[45.607s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = void][m[K[m[Kâ€™:
[45.631s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K   required by substitution of â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::value), void> rclcpp::Publisher<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > >::[01;32m[Kpublish[m[K(const T&) [35m[K[with T = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[45.632s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K   required from here
[45.632s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[45.645s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[45.645s]       |           [01;31m[K^~~~~~~~~~~[m[K
[45.646s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.647s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.650s]       |   [01;36m[K^~~~~~~[m[K
[45.651s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.651s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:955:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> > > >[m[Kâ€™
[45.652s]   955 |             [01;36m[Krs_.did_ins1.pub_didins1->publish(msg_did_ins1)[m[K;
[45.652s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.653s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.655s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.655s]       |   [01;36m[K^~~~~~~[m[K
[45.656s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.656s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.657s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.657s]       |   [01;36m[K^~~~~~~[m[K
[45.658s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.659s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.660s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.660s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.660s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.663s]       |   [01;36m[K^~~~~~~[m[K
[45.664s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.664s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.665s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.674s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >][m[K[m[Kâ€™
[45.674s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.674s]       |   [01;36m[K^~~~~~~[m[K
[45.675s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS1_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.676s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.681s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.682s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS2_callback[m[K(eDataIDs, const ins_2_t*)[m[Kâ€™:
[45.682s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS2&)[m[Kâ€™
[45.683s]   982 |             [01;31m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[45.683s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.683s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.684s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.688s]       |   [01;36m[K^~~~~~~[m[K
[45.689s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.689s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >[m[Kâ€™
[45.690s]   982 |             [01;36m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[45.690s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.694s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.698s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.699s]       |   [01;36m[K^~~~~~~[m[K
[45.699s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.699s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.700s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.704s]       |   [01;36m[K^~~~~~~[m[K
[45.705s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.705s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:982:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> > > >[m[Kâ€™
[45.705s]   982 |             [01;36m[Krs_.did_ins2.pub_didins2->publish(msg_did_ins2)[m[K;
[45.705s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.708s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.709s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.709s]       |   [01;36m[K^~~~~~~[m[K
[45.710s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.710s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.710s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.710s]       |   [01;36m[K^~~~~~~[m[K
[45.711s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.711s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.715s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.715s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.715s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.716s]       |   [01;36m[K^~~~~~~[m[K
[45.716s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.717s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.717s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.718s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >][m[K[m[Kâ€™
[45.719s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.719s]       |   [01;36m[K^~~~~~~[m[K
[45.719s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS2_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.720s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.720s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.721s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINS4_callback[m[K(eDataIDs, const ins_4_t*)[m[Kâ€™:
[45.721s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::DIDINS4&)[m[Kâ€™
[45.721s]  1009 |             [01;31m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[45.722s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.724s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.725s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.726s]       |   [01;36m[K^~~~~~~[m[K
[45.726s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.727s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >[m[Kâ€™
[45.728s]  1009 |             [01;36m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[45.728s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.730s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.731s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.731s]       |   [01;36m[K^~~~~~~[m[K
[45.732s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.735s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.735s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.736s]       |   [01;36m[K^~~~~~~[m[K
[45.737s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.738s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1009:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> > > >[m[Kâ€™
[45.739s]  1009 |             [01;36m[Krs_.did_ins4.pub_didins4->publish(msg_did_ins4)[m[K;
[45.739s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.740s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.740s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.741s]       |   [01;36m[K^~~~~~~[m[K
[45.741s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.741s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.742s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.742s]       |   [01;36m[K^~~~~~~[m[K
[45.743s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.743s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.744s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.745s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.746s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.746s]       |   [01;36m[K^~~~~~~[m[K
[45.747s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.748s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.748s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.748s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >][m[K[m[Kâ€™
[45.749s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.749s]       |   [01;36m[K^~~~~~~[m[K
[45.749s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::DIDINS4_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.750s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.750s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.751s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[45.752s]  1078 |             [01;31m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[45.752s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.753s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.754s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.754s]       |   [01;36m[K^~~~~~~[m[K
[45.754s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.755s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.755s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[45.756s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.756s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.756s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.756s]       |   [01;36m[K^~~~~~~[m[K
[45.757s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.757s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.758s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.758s]       |   [01;36m[K^~~~~~~[m[K
[45.758s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.759s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1078:52:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.759s]  1078 |             [01;36m[Krs_.odom_ins_ecef.pub_odometry->publish(msg_odom_ecef)[m[K;
[45.759s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.760s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.760s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.760s]       |   [01;36m[K^~~~~~~[m[K
[45.761s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.761s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.762s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.762s]       |   [01;36m[K^~~~~~~[m[K
[45.763s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.763s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.763s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.764s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.764s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.764s]       |   [01;36m[K^~~~~~~[m[K
[45.765s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.765s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.765s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.767s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[45.767s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.767s]       |   [01;36m[K^~~~~~~[m[K
[45.768s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.768s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.768s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.769s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[45.769s]  1165 |                 [01;31m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[45.770s]       |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.770s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.771s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.771s]       |   [01;36m[K^~~~~~~[m[K
[45.772s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.772s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.773s]  1165 |                 [01;36m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[45.773s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.774s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.774s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.776s]       |   [01;36m[K^~~~~~~[m[K
[45.776s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.777s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.778s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.779s]       |   [01;36m[K^~~~~~~[m[K
[45.779s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.779s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1165:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.780s]  1165 |                 [01;36m[Krs_.odom_ins_ned.pub_odometry->publish(msg_odom_ned)[m[K;
[45.780s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.781s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.782s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.783s]       |   [01;36m[K^~~~~~~[m[K
[45.784s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.785s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.786s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.791s]       |   [01;36m[K^~~~~~~[m[K
[45.791s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.792s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.793s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.794s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.797s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.797s]       |   [01;36m[K^~~~~~~[m[K
[45.798s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.799s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.799s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[45.800s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.800s]       |   [01;36m[K^~~~~~~[m[K
[45.805s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.806s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.807s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.807s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<nav_msgs::msg::Odometry_<std::allocator<void> > >::publish(nav_msgs::msg::Odometry&)[m[Kâ€™
[45.808s]  1259 |                 [01;31m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[45.809s]       |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.810s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.810s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.811s]       |   [01;36m[K^~~~~~~[m[K
[45.811s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.812s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.812s]  1259 |                 [01;36m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[45.813s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.814s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.824s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.830s]       |   [01;36m[K^~~~~~~[m[K
[45.831s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.839s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.840s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.841s]       |   [01;36m[K^~~~~~~[m[K
[45.841s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.848s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1259:55:[m[K [01;36m[Knote: [m[K  â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<nav_msgs::msg::Odometry_<std::allocator<void> > > >[m[Kâ€™
[45.850s]  1259 |                 [01;36m[Krs_.odom_ins_enu.pub_odometry->publish(msg_odom_enu)[m[K;
[45.850s]       |                 [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.850s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.851s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.851s]       |   [01;36m[K^~~~~~~[m[K
[45.852s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.852s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.853s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.854s]       |   [01;36m[K^~~~~~~[m[K
[45.855s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.855s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.855s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.856s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.856s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.858s]       |   [01;36m[K^~~~~~~[m[K
[45.859s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.859s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.860s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.860s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = nav_msgs::msg::Odometry_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = nav_msgs::msg::Odometry_<std::allocator<void> >][m[K[m[Kâ€™
[45.861s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.862s]       |   [01;36m[K^~~~~~~[m[K
[45.867s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Knav_msgs::msg::Odometry[m[Kâ€™ {aka â€˜[01m[Knav_msgs::msg::Odometry_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<nav_msgs::msg::Odometry_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.867s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.868s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.871s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KINL2_states_callback[m[K(eDataIDs, const inl2_states_t*)[m[Kâ€™:
[45.872s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::INL2States&)[m[Kâ€™
[45.872s]  1312 |             [01;31m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[45.873s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[45.873s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.874s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.874s]       |   [01;36m[K^~~~~~~[m[K
[45.874s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.875s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >[m[Kâ€™
[45.875s]  1312 |             [01;36m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[45.876s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[45.876s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.877s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.877s]       |   [01;36m[K^~~~~~~[m[K
[45.877s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.878s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.878s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.879s]       |   [01;36m[K^~~~~~~[m[K
[45.879s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.879s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1312:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::INL2States_<std::allocator<void> > > >[m[Kâ€™
[45.880s]  1312 |             [01;36m[Krs_.inl2_states.pub_inl2->publish(msg_inl2_states)[m[K;
[45.880s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[45.880s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.881s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.881s]       |   [01;36m[K^~~~~~~[m[K
[45.881s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.882s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.882s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.882s]       |   [01;36m[K^~~~~~~[m[K
[45.882s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.883s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.883s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.883s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.884s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.885s]       |   [01;36m[K^~~~~~~[m[K
[45.885s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.886s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.886s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.887s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::INL2States_<std::allocator<void> >][m[K[m[Kâ€™
[45.887s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.889s]       |   [01;36m[K^~~~~~~[m[K
[45.889s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::INL2States[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::INL2States_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::INL2States_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.889s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.890s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.890s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_pos_callback[m[K(eDataIDs, const gps_pos_t*)[m[Kâ€™:
[45.890s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::NavSatFix_<std::allocator<void> > >::publish(sensor_msgs::msg::NavSatFix&)[m[Kâ€™
[45.891s]  1455 |             [01;31m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[45.891s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.892s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.893s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.893s]       |   [01;36m[K^~~~~~~[m[K
[45.893s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.893s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >[m[Kâ€™
[45.894s]  1455 |             [01;36m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[45.894s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.895s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.895s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.896s]       |   [01;36m[K^~~~~~~[m[K
[45.899s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.899s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.900s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.901s]       |   [01;36m[K^~~~~~~[m[K
[45.904s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.904s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1455:48:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::NavSatFix_<std::allocator<void> > > >[m[Kâ€™
[45.904s]  1455 |             [01;36m[Krs_.gps1_navsatfix.pub_nsf->publish(msg_NavSatFix)[m[K;
[45.905s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.905s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.905s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.905s]       |   [01;36m[K^~~~~~~[m[K
[45.906s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.907s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.908s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.908s]       |   [01;36m[K^~~~~~~[m[K
[45.909s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.909s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.910s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.910s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.910s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.911s]       |   [01;36m[K^~~~~~~[m[K
[45.911s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.911s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.912s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.912s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::NavSatFix_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::NavSatFix_<std::allocator<void> >][m[K[m[Kâ€™
[45.913s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.913s]       |   [01;36m[K^~~~~~~[m[K
[45.913s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::NavSatFix[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::NavSatFix_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::NavSatFix_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.914s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.914s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.914s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS1[m[K()[m[Kâ€™:
[45.915s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[45.915s]  1500 |             [01;31m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[45.915s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.916s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.916s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.916s]       |   [01;36m[K^~~~~~~[m[K
[45.917s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.917s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[45.917s]  1500 |             [01;36m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[45.920s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.920s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.921s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.921s]       |   [01;36m[K^~~~~~~[m[K
[45.923s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.924s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.924s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.925s]       |   [01;36m[K^~~~~~~[m[K
[45.925s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.925s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1500:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[45.925s]  1500 |             [01;36m[Krs_.gps1.pub_gps->publish(msg_gps1)[m[K;
[45.926s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.926s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.926s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.927s]       |   [01;36m[K^~~~~~~[m[K
[45.927s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.928s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.930s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.930s]       |   [01;36m[K^~~~~~~[m[K
[45.930s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.931s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.932s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.932s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.933s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.933s]       |   [01;36m[K^~~~~~~[m[K
[45.933s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.934s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.934s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.935s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >][m[K[m[Kâ€™
[45.935s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.936s]       |   [01;36m[K^~~~~~~[m[K
[45.936s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.937s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.937s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.937s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KpublishGPS2[m[K()[m[Kâ€™:
[45.939s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPS_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPS&)[m[Kâ€™
[45.939s]  1512 |             [01;31m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[45.940s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.940s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.941s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.941s]       |   [01;36m[K^~~~~~~[m[K
[45.942s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.942s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[45.942s]  1512 |             [01;36m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[45.943s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.944s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.945s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.945s]       |   [01;36m[K^~~~~~~[m[K
[45.945s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.946s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.946s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.946s]       |   [01;36m[K^~~~~~~[m[K
[45.947s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.947s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1512:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPS_<std::allocator<void> > > >[m[Kâ€™
[45.953s]  1512 |             [01;36m[Krs_.gps2.pub_gps->publish(msg_gps2)[m[K;
[45.953s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.954s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.954s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[45.955s]       |   [01;36m[K^~~~~~~[m[K
[45.958s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.959s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[45.959s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[45.959s]       |   [01;36m[K^~~~~~~[m[K
[45.960s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[45.960s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[45.961s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.963s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.964s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[45.964s]       |   [01;36m[K^~~~~~~[m[K
[45.964s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[45.965s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[45.965s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[45.966s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPS_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPS_<std::allocator<void> >][m[K[m[Kâ€™
[45.966s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[45.971s]       |   [01;36m[K^~~~~~~[m[K
[45.976s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPS[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPS_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPS_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[45.977s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[45.977s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[45.977s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[KGPS_info_callback[m[K(eDataIDs, const gps_sat_t*)[m[Kâ€™:
[45.978s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[45.979s]  1569 |     case DID_GPS1_SAT:  [01;31m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[45.979s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.980s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.984s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[45.985s]       |   [01;36m[K^~~~~~~[m[K
[45.985s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.985s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[45.986s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[45.986s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.986s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.987s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[45.992s]       |   [01;36m[K^~~~~~~[m[K
[45.992s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.993s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[45.995s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[45.995s]       |   [01;36m[K^~~~~~~[m[K
[45.996s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[45.996s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1569:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[45.997s]  1569 |     case DID_GPS1_SAT:  [01;36m[Krs_.gps1_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[45.997s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[45.997s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.001s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[46.002s]       |   [01;36m[K^~~~~~~[m[K
[46.003s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.003s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[46.003s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[46.003s]       |   [01;36m[K^~~~~~~[m[K
[46.004s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[46.004s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[46.007s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.008s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.008s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[46.009s]       |   [01;36m[K^~~~~~~[m[K
[46.009s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[46.009s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[46.010s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.010s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >][m[K[m[Kâ€™
[46.011s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[46.011s]       |   [01;36m[K^~~~~~~[m[K
[46.011s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[46.012s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[46.013s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[46.013s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::GPSInfo&)[m[Kâ€™
[46.013s]  1570 |     case DID_GPS2_SAT:  [01;31m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[46.014s]       |                         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[46.014s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.015s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[46.015s]       |   [01;36m[K^~~~~~~[m[K
[46.027s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.028s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[46.030s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[46.030s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[46.030s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.031s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[46.031s]       |   [01;36m[K^~~~~~~[m[K
[46.031s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.032s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.032s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[46.037s]       |   [01;36m[K^~~~~~~[m[K
[46.037s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.037s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1570:59:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> > > >[m[Kâ€™
[46.038s]  1570 |     case DID_GPS2_SAT:  [01;36m[Krs_.gps2_info.pub_gpsinfo->publish(msg_gps1_info)[m[K;    break;
[46.038s]       |                         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~[m[K
[46.038s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.039s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[46.039s]       |   [01;36m[K^~~~~~~[m[K
[46.045s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.045s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[46.046s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[46.046s]       |   [01;36m[K^~~~~~~[m[K
[46.047s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[46.051s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[46.052s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.052s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.053s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[46.059s]       |   [01;36m[K^~~~~~~[m[K
[46.059s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[46.059s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[46.059s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.060s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >][m[K[m[Kâ€™
[46.060s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[46.060s]       |   [01;36m[K^~~~~~~[m[K
[46.061s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::GPSInfo_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[46.061s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[46.065s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[46.066s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kmag_callback[m[K(eDataIDs, const magnetometer_t*)[m[Kâ€™:
[46.067s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::MagneticField_<std::allocator<void> > >::publish(sensor_msgs::msg::MagneticField&)[m[Kâ€™
[46.067s]  1588 |     [01;31m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[46.067s]       |     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[46.069s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.070s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[46.073s]       |   [01;36m[K^~~~~~~[m[K
[46.073s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.073s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >[m[Kâ€™
[46.074s]  1588 |     [01;36m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[46.074s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[46.075s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.078s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[46.078s]       |   [01;36m[K^~~~~~~[m[K
[46.078s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.079s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.079s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[46.080s]       |   [01;36m[K^~~~~~~[m[K
[46.080s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.085s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1588:41:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::MagneticField_<std::allocator<void> > > >[m[Kâ€™
[46.085s]  1588 |     [01;36m[Krs_.magnetometer.pub_bfield->publish(mag_msg)[m[K;
[46.085s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[46.086s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.087s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[46.087s]       |   [01;36m[K^~~~~~~[m[K
[46.091s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.091s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[46.092s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[46.093s]       |   [01;36m[K^~~~~~~[m[K
[46.093s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[46.097s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[46.098s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.098s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.099s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[46.102s]       |   [01;36m[K^~~~~~~[m[K
[46.103s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[46.103s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[46.104s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.104s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::MagneticField_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::MagneticField_<std::allocator<void> >][m[K[m[Kâ€™
[46.104s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[46.105s]       |   [01;36m[K^~~~~~~[m[K
[46.105s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::MagneticField[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::MagneticField_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::MagneticField_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[46.108s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[46.109s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[46.109s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:[m[K In member function â€˜[01m[Kvoid InertialSenseROS::[01;32m[Kpreint_IMU_callback[m[K(eDataIDs, const pimu_t*)[m[Kâ€™:
[46.110s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > >::publish(inertial_sense_ros2::msg::PIMU&)[m[Kâ€™
[46.111s]  1623 |         [01;31m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[46.114s]       |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[46.116s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.116s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[46.116s]       |   [01;36m[K^~~~~~~[m[K
[46.117s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.120s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >[m[Kâ€™
[46.121s]  1623 |         [01;36m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[46.121s]       |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[46.122s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.122s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[46.123s]       |   [01;36m[K^~~~~~~[m[K
[46.126s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.127s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.128s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[46.129s]       |   [01;36m[K^~~~~~~[m[K
[46.132s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.133s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1623:35:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<inertial_sense_ros2::msg::PIMU_<std::allocator<void> > > >[m[Kâ€™
[46.133s]  1623 |         [01;36m[Krs_.pimu.pub_pimu->publish(msg_pimu)[m[K;
[46.133s]       |         [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[46.134s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.134s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[46.135s]       |   [01;36m[K^~~~~~~[m[K
[46.135s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.138s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[46.139s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[46.139s]       |   [01;36m[K^~~~~~~[m[K
[46.142s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[46.143s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[46.143s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.144s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.145s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[46.145s]       |   [01;36m[K^~~~~~~[m[K
[46.145s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[46.146s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[46.146s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.150s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = inertial_sense_ros2::msg::PIMU_<std::allocator<void> >][m[K[m[Kâ€™
[46.150s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[46.150s]       |   [01;36m[K^~~~~~~[m[K
[46.150s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kinertial_sense_ros2::msg::PIMU[m[Kâ€™ {aka â€˜[01m[Kinertial_sense_ros2::msg::PIMU_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<inertial_sense_ros2::msg::PIMU_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[46.151s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[46.151s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[46.152s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::Publisher<sensor_msgs::msg::Imu_<std::allocator<void> > >::publish(sensor_msgs::msg::Imu&)[m[Kâ€™
[46.156s]  1640 |             [01;31m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[46.156s]       |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[46.157s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.161s]   239 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)
[46.162s]       |   [01;36m[K^~~~~~~[m[K
[46.163s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:239:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.167s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >[m[Kâ€™
[46.168s]  1640 |             [01;36m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[46.168s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[46.169s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.171s]   289 |   [01;36m[Kpublish[m[K(const T & msg)
[46.172s]       |   [01;36m[K^~~~~~~[m[K
[46.172s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:289:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.173s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.173s]   319 |   [01;36m[Kpublish[m[K(std::unique_ptr<T, PublishedTypeDeleter> msg)
[46.177s]       |   [01;36m[K^~~~~~~[m[K
[46.178s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:319:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.179s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:1640:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<T, std::default_delete<sensor_msgs::msg::Imu_<std::allocator<void> > > >[m[Kâ€™
[46.179s]  1640 |             [01;36m[Krs_.imu.pub_imu->publish(msg_imu)[m[K;
[46.180s]       |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[46.180s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const T&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.183s]   366 |   [01;36m[Kpublish[m[K(const T & msg)
[46.183s]       |   [01;36m[K^~~~~~~[m[K
[46.186s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:366:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[46.187s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rcl_serialized_message_t&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s][m[K[m[Kâ€™
[46.187s]   384 |   [01;36m[Kpublish[m[K(const rcl_serialized_message_t & serialized_msg)
[46.188s]       |   [01;36m[K^~~~~~~[m[K
[46.188s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:384:44:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rcl_serialized_message_t&[m[Kâ€™ {aka â€˜[01m[Kconst rcutils_uint8_array_s&[m[Kâ€™}
[46.189s]   384 |   publish([01;36m[Kconst rcl_serialized_message_t & serialized_msg[m[K)
[46.189s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.189s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(const rclcpp::SerializedMessage&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[K[m[Kâ€™
[46.190s]   390 |   [01;36m[Kpublish[m[K(const SerializedMessage & serialized_msg)
[46.191s]       |   [01;36m[K^~~~~~~[m[K
[46.191s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:390:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::SerializedMessage&[m[Kâ€™
[46.198s]   390 |   publish([01;36m[Kconst SerializedMessage & serialized_msg[m[K)
[46.199s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
[46.199s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::[01;32m[Kpublish[m[K(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [35m[K[with MessageT = sensor_msgs::msg::Imu_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = sensor_msgs::msg::Imu_<std::allocator<void> >][m[K[m[Kâ€™
[46.199s]   404 |   [01;36m[Kpublish[m[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)
[46.200s]       |   [01;36m[K^~~~~~~[m[K
[46.203s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/publisher.hpp:404:64:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Ksensor_msgs::msg::Imu[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::Imu_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Krclcpp::LoanedMessage<sensor_msgs::msg::Imu_<std::allocator<void> >, std::allocator<void> >&&[m[Kâ€™
[46.203s]   404 |   publish([01;36m[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg[m[K)
[46.204s]       |           [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[46.461s] gmake[2]: *** [CMakeFiles/new_target.dir/build.make:104: CMakeFiles/new_target.dir/include/TopicHelper.cpp.o] Error 1
[46.462s] gmake[2]: *** Waiting for unfinished jobs....
[50.383s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42[m[K,
[50.385s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[50.385s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K:
[50.386s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>[m[Kâ€™:
[50.386s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.387s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.388s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.388s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.388s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.389s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.389s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.389s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[50.390s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[50.390s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.391s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.391s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37[m[K,
[50.392s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28[m[K:
[50.392s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.392s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.393s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.393s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.393s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.394s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.394s]   121 |       >::[01;31m[Kvalue[m[K)
[50.394s]       |          [01;31m[K^~~~~[m[K
[50.396s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[50.397s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.397s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.398s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K:
[50.399s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.399s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.400s]       |         [01;36m[K^~~~~~~[m[K
[50.400s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.400s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.401s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.401s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.401s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.401s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.402s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.402s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.403s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[50.403s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.404s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.405s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.406s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.406s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.406s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.406s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.407s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.407s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.407s]       |         [01;36m[K^~~~~~~[m[K
[50.407s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.411s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.411s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.412s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.412s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.412s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.412s]       |         [01;36m[K^~~~~~~[m[K
[50.413s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.413s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.413s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.413s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.416s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.417s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.418s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.419s]       |         [01;36m[K^~~~~~~[m[K
[50.421s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.422s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.423s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.423s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.426s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.428s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.428s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.429s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.430s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.431s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.431s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.432s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.432s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.432s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.439s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.439s]       |                                           [01;36m[K^~~~~~~[m[K
[50.439s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.440s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.440s]   128 |       >::[01;31m[Kvalue[m[K)
[50.440s]       |          [01;31m[K^~~~~[m[K
[50.441s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[50.441s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.441s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.441s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.442s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.442s]       |         [01;36m[K^~~~~~~[m[K
[50.442s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.442s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.443s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.443s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.446s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.446s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.446s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.447s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.447s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[50.447s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.448s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.448s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.449s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.449s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.449s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.449s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.450s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.450s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.450s]       |         [01;36m[K^~~~~~~[m[K
[50.451s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.451s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.451s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.452s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.452s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.452s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.452s]       |         [01;36m[K^~~~~~~[m[K
[50.453s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.453s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.453s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.454s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.454s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.457s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.457s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.457s]       |         [01;36m[K^~~~~~~[m[K
[50.458s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.458s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.459s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.459s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.461s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.462s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.462s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.462s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.463s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.463s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.464s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.464s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.464s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.465s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.465s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.465s]       |                                           [01;36m[K^~~~~~~[m[K
[50.465s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.466s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[50.466s]   135 |       >::[01;31m[Kvalue[m[K)
[50.466s]       |          [01;31m[K^~~~~[m[K
[50.467s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[50.467s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.469s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.469s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.469s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.470s]       |         [01;36m[K^~~~~~~[m[K
[50.470s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.474s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.474s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.474s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.475s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.475s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.475s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.476s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.476s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[50.476s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.477s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.477s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.477s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.478s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.478s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.479s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.482s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.482s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.483s]       |         [01;36m[K^~~~~~~[m[K
[50.483s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.484s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.485s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.485s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.486s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.489s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.489s]       |         [01;36m[K^~~~~~~[m[K
[50.489s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.490s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.490s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.490s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.491s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.492s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.492s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.493s]       |         [01;36m[K^~~~~~~[m[K
[50.493s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.493s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.496s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.496s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.496s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.496s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.497s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.497s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.497s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.498s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.498s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.498s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.498s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.499s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.499s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.499s]       |                                           [01;36m[K^~~~~~~[m[K
[50.499s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.500s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[50.500s]   142 |       >::[01;31m[Kvalue[m[K)
[50.500s]       |          [01;31m[K^~~~~[m[K
[50.500s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[50.501s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.501s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.501s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.501s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.502s]       |         [01;36m[K^~~~~~~[m[K
[50.502s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.502s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.502s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.503s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.503s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.503s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.504s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.506s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.506s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[50.506s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.507s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.507s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.507s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.507s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.508s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.508s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.508s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.508s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.509s]       |         [01;36m[K^~~~~~~[m[K
[50.509s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.509s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.509s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.510s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.510s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.510s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.510s]       |         [01;36m[K^~~~~~~[m[K
[50.511s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.511s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.511s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.511s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.512s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.512s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.512s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.512s]       |         [01;36m[K^~~~~~~[m[K
[50.513s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.513s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.513s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.513s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.514s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.514s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.516s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.516s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.517s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.517s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.517s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.518s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.518s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.518s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.518s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.519s]       |                                           [01;36m[K^~~~~~~[m[K
[50.519s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.519s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™)
[50.519s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[50.520s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[50.520s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.520s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[50.520s]       |         [01;36m[K^~~~~~~~[m[K
[50.521s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.521s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[50.522s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[50.522s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.522s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.523s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.523s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.523s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.526s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[50.526s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[50.527s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[50.527s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.528s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.528s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.529s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.529s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.529s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.529s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[50.530s]       |                [01;36m[K^~~~~~~~[m[K
[50.530s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[50.530s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[50.532s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[50.532s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.533s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[50.533s]       |                [01;36m[K^~~~~~~~[m[K
[50.533s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[50.533s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[50.534s]       |                          [01;36m[K^~~~~~~~~[m[K
[50.534s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>[m[Kâ€™:
[50.534s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.535s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.535s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.535s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.535s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.536s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.536s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.536s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[50.536s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[50.537s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.537s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.537s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.537s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.538s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.538s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.539s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.539s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.539s]   121 |       >::[01;31m[Kvalue[m[K)
[50.539s]       |          [01;31m[K^~~~~[m[K
[50.540s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[50.540s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.540s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.540s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.541s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.541s]       |         [01;36m[K^~~~~~~[m[K
[50.541s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.541s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.542s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.542s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.542s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.542s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.543s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.543s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.543s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[50.543s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.544s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.544s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.544s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.545s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.545s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.545s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.545s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.546s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.546s]       |         [01;36m[K^~~~~~~[m[K
[50.546s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.546s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.547s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.547s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.547s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.548s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.548s]       |         [01;36m[K^~~~~~~[m[K
[50.549s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.549s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.549s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.549s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.550s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.550s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.550s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.551s]       |         [01;36m[K^~~~~~~[m[K
[50.551s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.551s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.551s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.552s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.552s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.552s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.552s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.553s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.553s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.553s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.554s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.554s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.554s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.554s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.555s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.555s]       |                                           [01;36m[K^~~~~~~[m[K
[50.555s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.555s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.556s]   128 |       >::[01;31m[Kvalue[m[K)
[50.556s]       |          [01;31m[K^~~~~[m[K
[50.556s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[50.556s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.557s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.557s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.557s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.557s]       |         [01;36m[K^~~~~~~[m[K
[50.558s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.558s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.558s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.559s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.559s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.559s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.559s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.560s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.560s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[50.560s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.560s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.561s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.561s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.561s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.562s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.562s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.562s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.562s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.563s]       |         [01;36m[K^~~~~~~[m[K
[50.563s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.563s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.564s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.564s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.564s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.565s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.565s]       |         [01;36m[K^~~~~~~[m[K
[50.565s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.565s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.566s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.566s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.566s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.567s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.567s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.567s]       |         [01;36m[K^~~~~~~[m[K
[50.567s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.568s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.568s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.568s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.569s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.569s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.569s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.570s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.570s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.570s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.571s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.571s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.571s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.572s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.572s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.572s]       |                                           [01;36m[K^~~~~~~[m[K
[50.572s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.573s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[50.573s]   135 |       >::[01;31m[Kvalue[m[K)
[50.573s]       |          [01;31m[K^~~~~[m[K
[50.573s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[50.574s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.574s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.574s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.574s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.575s]       |         [01;36m[K^~~~~~~[m[K
[50.575s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.575s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.576s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.576s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.576s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.576s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.577s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.577s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.577s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[50.578s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.578s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.578s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.579s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.579s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.580s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.580s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.580s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.581s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.581s]       |         [01;36m[K^~~~~~~[m[K
[50.581s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.581s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.582s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.582s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.582s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.583s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.583s]       |         [01;36m[K^~~~~~~[m[K
[50.587s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.587s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.587s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.588s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.588s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.588s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.589s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.589s]       |         [01;36m[K^~~~~~~[m[K
[50.590s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.590s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.590s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.590s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.591s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.591s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.591s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.592s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.592s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.592s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.592s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.593s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.593s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.593s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.593s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.594s]       |                                           [01;36m[K^~~~~~~[m[K
[50.594s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.594s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[50.594s]   142 |       >::[01;31m[Kvalue[m[K)
[50.595s]       |          [01;31m[K^~~~~[m[K
[50.595s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[50.595s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.596s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.596s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.596s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.596s]       |         [01;36m[K^~~~~~~[m[K
[50.597s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.597s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.597s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.597s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.598s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.598s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.598s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.599s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.599s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[50.599s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.600s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.600s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.600s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.601s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.601s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.601s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.601s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.602s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.602s]       |         [01;36m[K^~~~~~~[m[K
[50.602s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.602s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.603s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.603s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.603s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.603s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.604s]       |         [01;36m[K^~~~~~~[m[K
[50.604s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.604s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.604s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.605s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.605s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.605s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.605s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.606s]       |         [01;36m[K^~~~~~~[m[K
[50.606s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.606s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.606s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.607s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.607s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.607s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.608s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.608s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.608s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.608s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.609s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.609s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.609s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.610s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.610s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.610s]       |                                           [01;36m[K^~~~~~~[m[K
[50.611s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.611s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™)
[50.611s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[50.611s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[50.612s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.612s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[50.612s]       |         [01;36m[K^~~~~~~~[m[K
[50.613s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.613s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[50.613s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[50.613s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.614s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.614s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.614s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.615s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.615s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[50.615s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[50.615s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[50.615s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.616s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.616s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.617s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.617s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.617s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.617s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[50.618s]       |                [01;36m[K^~~~~~~~[m[K
[50.618s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[50.618s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[50.618s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[50.619s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.619s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[50.619s]       |                [01;36m[K^~~~~~~~[m[K
[50.619s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[50.620s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[50.621s]       |                          [01;36m[K^~~~~~~~~[m[K
[50.664s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:42[m[K,
[50.664s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[50.665s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K:
[50.665s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)>[m[Kâ€™:
[50.665s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.665s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.666s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.670s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.671s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.671s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.671s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.672s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[50.672s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[50.672s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.672s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.673s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/service.hpp:37[m[K,
[50.673s]                  from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:28[m[K:
[50.676s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.677s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.677s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.677s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.678s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.678s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.678s]   121 |       >::[01;31m[Kvalue[m[K)
[50.679s]       |          [01;31m[K^~~~~[m[K
[50.682s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[50.683s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.685s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.685s] In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29[m[K:
[50.686s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.686s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.686s]       |         [01;36m[K^~~~~~~[m[K
[50.687s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.687s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.687s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.688s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.688s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.689s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.690s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.691s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.692s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[50.692s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.692s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.693s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.694s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.698s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.702s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.702s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.703s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.703s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.703s]       |         [01;36m[K^~~~~~~[m[K
[50.704s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.704s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.707s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.708s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.709s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.709s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.710s]       |         [01;36m[K^~~~~~~[m[K
[50.710s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.710s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.711s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.711s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.711s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.714s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.714s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.715s]       |         [01;36m[K^~~~~~~[m[K
[50.715s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.715s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.715s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.716s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.718s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.719s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.720s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.720s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.720s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.721s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.724s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.730s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.730s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.731s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.731s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.731s]       |                                           [01;36m[K^~~~~~~[m[K
[50.732s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.732s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.732s]   128 |       >::[01;31m[Kvalue[m[K)
[50.732s]       |          [01;31m[K^~~~~[m[K
[50.733s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[50.733s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.733s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.735s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.736s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.736s]       |         [01;36m[K^~~~~~~[m[K
[50.736s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.736s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.737s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.737s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.738s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.738s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.738s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.738s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.739s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[50.739s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.739s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.739s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.740s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.740s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.740s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.741s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.742s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.742s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.743s]       |         [01;36m[K^~~~~~~[m[K
[50.744s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.745s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.746s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.748s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.748s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.749s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.749s]       |         [01;36m[K^~~~~~~[m[K
[50.749s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.750s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.750s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.750s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.751s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.751s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.751s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.752s]       |         [01;36m[K^~~~~~~[m[K
[50.752s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.752s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.752s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.753s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.754s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.756s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.756s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.756s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.757s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.760s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.760s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.761s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.762s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.763s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.763s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.764s]       |                                           [01;36m[K^~~~~~~[m[K
[50.765s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.766s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[50.767s]   135 |       >::[01;31m[Kvalue[m[K)
[50.767s]       |          [01;31m[K^~~~~[m[K
[50.768s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[50.768s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.768s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.769s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.769s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.770s]       |         [01;36m[K^~~~~~~[m[K
[50.770s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.771s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.773s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.775s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.775s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.776s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.776s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.776s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.777s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[50.777s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.779s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.780s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.781s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.781s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.781s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.782s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.782s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.782s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.782s]       |         [01;36m[K^~~~~~~[m[K
[50.783s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.783s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.784s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.785s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.785s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.786s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.786s]       |         [01;36m[K^~~~~~~[m[K
[50.786s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.787s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.787s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.787s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.788s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.788s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.788s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.788s]       |         [01;36m[K^~~~~~~[m[K
[50.789s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.789s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.789s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.790s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.790s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.790s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.790s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.791s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.792s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.792s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.792s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.793s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.793s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.794s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.795s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.795s]       |                                           [01;36m[K^~~~~~~[m[K
[50.795s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.795s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™
[50.796s]   142 |       >::[01;31m[Kvalue[m[K)
[50.796s]       |          [01;31m[K^~~~~[m[K
[50.796s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&))[m[Kâ€™
[50.796s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.797s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.797s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.797s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.797s]       |         [01;36m[K^~~~~~~[m[K
[50.798s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.798s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.798s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.798s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.799s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.800s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.800s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[50.800s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.800s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.801s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.801s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.801s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.801s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.802s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.802s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.802s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.802s]       |         [01;36m[K^~~~~~~[m[K
[50.803s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.803s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™
[50.803s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.803s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.804s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.804s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.805s]       |         [01;36m[K^~~~~~~[m[K
[50.805s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.805s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.805s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.806s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.806s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.806s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.806s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.807s]       |         [01;36m[K^~~~~~~[m[K
[50.807s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.807s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.807s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.808s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.808s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.808s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.808s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.809s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.809s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.809s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.809s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.810s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.810s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<inertial_sense_ros2::srv::RefLLAUpdate>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.810s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.810s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.811s]       |                                           [01;36m[K^~~~~~~[m[K
[50.811s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.811s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™)
[50.811s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[50.812s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[50.812s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.812s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[50.812s]       |         [01;36m[K^~~~~~~~[m[K
[50.813s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.813s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[50.813s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[50.814s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™
[50.814s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.814s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.815s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.815s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.815s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[50.815s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[50.816s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[50.816s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = inertial_sense_ros2::srv::RefLLAUpdate][m[K[m[Kâ€™:
[50.816s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.817s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.817s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = inertial_sense_ros2::srv::RefLLAUpdate; CallbackT = bool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.817s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:129:98:[m[K   required from here
[50.817s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.818s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[50.818s]       |                [01;36m[K^~~~~~~~[m[K
[50.818s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[50.819s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[50.819s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[50.819s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.819s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[50.820s]       |                [01;36m[K^~~~~~~~[m[K
[50.820s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> >&, inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<inertial_sense_ros2::srv::RefLLAUpdate> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<inertial_sense_ros2::srv::RefLLAUpdate_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[50.820s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[50.821s]       |                          [01;36m[K^~~~~~~~~[m[K
[50.821s] /opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)>[m[Kâ€™:
[50.823s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:165:8:[m[K   required from â€˜[01m[Kstruct rclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.823s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.824s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.824s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.825s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.825s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.826s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.827s]    52 |     typename function_traits<decltype( [01;31m[K&FunctionT::operator()[m[K)>::arguments>::type;
[50.827s]       |                                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
[50.827s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.828s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/function_traits.hpp:52:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Koperator()[m[Kâ€™ is not a member of â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.828s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.828s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.829s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.829s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.829s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.830s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:121:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.830s]   121 |       >::[01;31m[Kvalue[m[K)
[50.830s]       |          [01;31m[K^~~~~[m[K
[50.831s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[50.831s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.831s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.832s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.832s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.833s]       |         [01;36m[K^~~~~~~[m[K
[50.833s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.834s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.834s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.835s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.835s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.835s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.836s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.836s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.836s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[50.837s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.837s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.837s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.838s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.838s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.838s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.839s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.839s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.841s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.841s]       |         [01;36m[K^~~~~~~[m[K
[50.842s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.842s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.842s]   123 |       [01;36m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.843s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.843s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.843s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.844s]       |         [01;36m[K^~~~~~~[m[K
[50.844s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.844s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.845s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.845s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.845s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.845s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.846s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.846s]       |         [01;36m[K^~~~~~~[m[K
[50.846s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.851s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.851s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.851s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.851s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.852s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.852s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.852s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.853s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.853s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.853s]   123 |       [01;31m[Kcallback_.template emplace<SharedPtrCallback>(callback)[m[K;
[50.854s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.854s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:123:52:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.859s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.859s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.860s]       |                                           [01;36m[K^~~~~~~[m[K
[50.860s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.860s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:128:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)> >[m[Kâ€™
[50.860s]   128 |       >::[01;31m[Kvalue[m[K)
[50.861s]       |          [01;31m[K^~~~~[m[K
[50.861s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[50.862s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.862s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.863s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.863s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.863s]       |         [01;36m[K^~~~~~~[m[K
[50.864s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.864s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.864s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.864s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.865s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.865s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.865s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.865s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.866s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>&>[m[Kâ€™
[50.866s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.866s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.867s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.867s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.867s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.867s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.868s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.868s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.869s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.869s]       |         [01;36m[K^~~~~~~[m[K
[50.869s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.869s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.870s]   130 |       [01;36m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.870s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.870s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.871s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.871s]       |         [01;36m[K^~~~~~~[m[K
[50.871s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.871s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.872s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.872s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.872s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.873s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.873s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.873s]       |         [01;36m[K^~~~~~~[m[K
[50.873s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.874s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.874s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.874s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.875s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.875s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.875s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.875s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.876s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.876s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.876s]   130 |       [01;31m[Kcallback_.template emplace<SharedPtrWithRequestHeaderCallback>(callback)[m[K;
[50.876s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.877s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:130:69:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrWithRequestHeaderCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>[m[Kâ€™}
[50.877s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.878s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.878s]       |                                           [01;36m[K^~~~~~~[m[K
[50.878s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.878s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:135:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[50.879s]   135 |       >::[01;31m[Kvalue[m[K)
[50.879s]       |          [01;31m[K^~~~~[m[K
[50.880s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[50.880s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.880s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.881s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.881s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.881s]       |         [01;36m[K^~~~~~~[m[K
[50.881s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.882s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.882s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.882s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.883s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.883s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.883s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.883s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.884s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[50.884s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.884s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.885s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.885s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.886s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.886s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.886s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.887s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.887s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.887s]       |         [01;36m[K^~~~~~~[m[K
[50.888s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.888s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.888s]   137 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.888s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.889s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.889s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.890s]       |         [01;36m[K^~~~~~~[m[K
[50.890s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.890s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.890s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.891s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.891s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.891s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.892s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.892s]       |         [01;36m[K^~~~~~~[m[K
[50.892s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.893s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.893s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.893s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.894s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.894s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.894s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.894s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.895s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.895s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.895s]   137 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallback>(callback)[m[K;
[50.896s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.896s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:137:65:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallback[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.896s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.897s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.897s]       |                                           [01;36m[K^~~~~~~[m[K
[50.897s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.897s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:142:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kvalue[m[Kâ€™ is not a member of â€˜[01m[Krclcpp::function_traits::same_arguments<bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&), std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™
[50.898s]   142 |       >::[01;31m[Kvalue[m[K)
[50.898s]       |          [01;31m[K^~~~~[m[K
[50.898s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::emplace<rclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle>(bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&))[m[Kâ€™
[50.899s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.899s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.899s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.900s]  1519 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.900s]       |         [01;36m[K^~~~~~~[m[K
[50.900s] [01m[K/usr/include/c++/13/variant:1519:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.901s] /usr/include/c++/13/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using std::enable_if_t = typename std::enable_if::type [35m[K[with bool _Cond = false; _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&][m[K[m[Kâ€™:
[50.901s] [01m[K/usr/include/c++/13/variant:1519:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Tp = std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>; _Args = {bool (InertialSenseROS::*&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)}][m[K[m[Kâ€™
[50.901s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.902s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.902s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.902s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.902s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.903s] [01m[K/usr/include/c++/13/type_traits:2610:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>&>[m[Kâ€™
[50.903s]  2610 |     using [01;31m[Kenable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[50.903s]       |           [01;31m[K^~~~~~~~~~~[m[K
[50.903s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.904s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.904s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.904s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.905s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.905s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _Up, class ... _Args> std::enable_if_t<(is_constructible_v<_Tp, std::initializer_list<_Up>&, _Args ...> && __exactly_once<_Tp>), _Tp&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with _Up = _Tp; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.905s]  1530 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.906s]       |         [01;36m[K^~~~~~~[m[K
[50.906s] [01m[K/usr/include/c++/13/variant:1530:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.906s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kstd::initializer_list<_Value>[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™
[50.906s]   144 |       [01;36m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.907s]       |       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.907s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.907s]  1540 |         [01;36m[Kemplace[m[K(_Args&&... __args)
[50.907s]       |         [01;36m[K^~~~~~~[m[K
[50.908s] [01m[K/usr/include/c++/13/variant:1540:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.908s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.909s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.909s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.909s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.910s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.910s]  1580 |         [01;36m[Kemplace[m[K(initializer_list<_Up> __il, _Args&&... __args)
[50.911s]       |         [01;36m[K^~~~~~~[m[K
[50.911s] [01m[K/usr/include/c++/13/variant:1580:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.911s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class _Up, class ... _Args> std::enable_if_t<is_constructible_v<std::variant<_Types>::__to_type<_Np, typename std::enable_if<(_Np < sizeof... (_Types)), void>::type>, std::initializer_list<_Up>&, _Args ...>, std::variant<_Types>::__to_type<_Np>&> std::variant<_Types>::[01;32m[Kemplace[m[K(std::initializer_list<_Up>, _Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = _Up; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.911s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.912s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.912s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.912s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.913s]  1613 |         enable_if_t<!(_Np < sizeof...(_Types))> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.913s]       |                                                 [01;36m[K^~~~~~~[m[K
[50.913s] [01m[K/usr/include/c++/13/variant:1613:49:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.913s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;31m[Kerror: [m[Ktype/value mismatch at argument 1 in template parameter list for â€˜[01m[Ktemplate<long unsigned int _Np, class ... _Args> std::enable_if_t<(!(_Np < sizeof... (_Types)))> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with long unsigned int _Np = _Np; _Args = {_Args ...}; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.914s]   144 |       [01;31m[Kcallback_.template emplace<SharedPtrDeferResponseCallbackWithServiceHandle>(callback)[m[K;
[50.914s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[50.914s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:144:82:[m[K [01;36m[Knote: [m[K  expected a constant of type â€˜[01m[Klong unsigned int[m[Kâ€™, got â€˜[01m[Krclcpp::AnyServiceCallback<std_srvs::srv::Trigger>::SharedPtrDeferResponseCallbackWithServiceHandle[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>[m[Kâ€™}
[50.914s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::enable_if_t<(! __exactly_once<_Tp>)> std::variant<_Types>::[01;32m[Kemplace[m[K(_Args&& ...) [35m[K[with _Args = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™ (deleted)
[50.915s]  1616 |         enable_if_t<!__exactly_once<_Tp>> [01;36m[Kemplace[m[K(_Args&&...) = delete;
[50.915s]       |                                           [01;36m[K^~~~~~~[m[K
[50.915s] [01m[K/usr/include/c++/13/variant:1616:43:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.916s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™)
[50.916s]   148 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[50.916s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[50.916s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.917s]  1494 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[50.917s]       |         [01;36m[K^~~~~~~~[m[K
[50.917s] [01m[K/usr/include/c++/13/variant:1494:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[50.918s] /usr/include/c++/13/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [35m[K[with _Tp = bool (InertialSenseROS::*&&)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™:
[50.918s] [01m[K/usr/include/c++/13/variant:1490:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >::[01;32m[Koperator=[m[K(_Tp&&) [35m[K[with _Tp = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)][m[K[m[Kâ€™
[50.918s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp:148:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™
[50.919s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.919s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.919s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.919s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.920s] [01m[K/usr/include/c++/13/variant:1407:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[50.920s]  1407 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[50.920s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[50.921s] /opt/ros/jazzy/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::[01;32m[Kset[m[K(CallbackT&&) [35m[K[with CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename std::enable_if<rclcpp::detail::can_be_nullptr<CallbackT>::value, int>::type <anonymous> = 0; ServiceT = std_srvs::srv::Trigger][m[K[m[Kâ€™:
[50.921s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:69:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const rmw_qos_profile_t&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.921s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_service.hpp:51:45:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::[01;32m[Kcreate_service[m[K(std::shared_ptr<node_interfaces::NodeBaseInterface>, std::shared_ptr<node_interfaces::NodeServicesInterface>, const std::string&, CallbackT&&, const QoS&, CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename Service<ServiceT>::SharedPtr = std::shared_ptr<Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; CallbackGroup::SharedPtr = std::shared_ptr<CallbackGroup>][m[K[m[Kâ€™
[50.922s] [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:181:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::[01;32m[Kcreate_service[m[K(const std::string&, CallbackT&&, const rclcpp::QoS&, rclcpp::CallbackGroup::SharedPtr) [35m[K[with ServiceT = std_srvs::srv::Trigger; CallbackT = bool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&); typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >; std::string = std::__cxx11::basic_string<char>; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[K[m[Kâ€™
[50.922s] [01m[K/home/s/Inertial_Sense/imx/SDK/ros2/src/inertial_sense_ros2.cpp:130:82:[m[K   required from here
[50.922s] [01m[K/usr/include/c++/13/variant:1430:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(const std::variant<_Types>&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.923s]  1430 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[50.923s]       |                [01;36m[K^~~~~~~~[m[K
[50.923s] [01m[K/usr/include/c++/13/variant:1430:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[50.924s]  1430 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[50.924s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[50.924s] [01m[K/usr/include/c++/13/variant:1431:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::[01;32m[Koperator=[m[K(std::variant<_Types>&&) [35m[K[with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>}][m[K[m[Kâ€™
[50.925s]  1431 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[50.926s]       |                [01;36m[K^~~~~~~~[m[K
[50.926s] [01m[K/usr/include/c++/13/variant:1431:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kbool (InertialSenseROS::*)(std_srvs::srv::Trigger_Request_<std::allocator<void> >&, std_srvs::srv::Trigger_Response_<std::allocator<void> >&)[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::Trigger_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::Trigger> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::Trigger_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[50.926s]  1431 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[50.927s]       |                          [01;36m[K^~~~~~~~~[m[K
[62.932s] gmake[2]: *** [CMakeFiles/new_target.dir/build.make:90: CMakeFiles/new_target.dir/src/inertial_sense_node.cpp.o] Error 1
[63.071s] gmake[2]: *** [CMakeFiles/new_target.dir/build.make:76: CMakeFiles/new_target.dir/src/inertial_sense_ros2.cpp.o] Error 1
[63.072s] gmake[1]: *** [CMakeFiles/Makefile2:623: CMakeFiles/new_target.dir/all] Error 2
[63.073s] gmake: *** [Makefile:146: all] Error 2
[63.079s] Invoked command in '/home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/jazzy DEBUGINFOD_URLS=https://debuginfod.ubuntu.com /usr/bin/cmake --build /home/s/Inertial_Sense/imx/SDK/ros2/build/inertial_sense_ros2 -- -j6 -l6
